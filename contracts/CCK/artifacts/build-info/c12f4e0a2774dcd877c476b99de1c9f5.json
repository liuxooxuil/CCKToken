{
	"id": "c12f4e0a2774dcd877c476b99de1c9f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCK/CCKToken_flattened.sol": {
				"content": "\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\n\n\npragma solidity >=0.5.0;\n\n\n\n\n\n\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/CCK/ERC3643.sol\n\n\npragma solidity ^0.8.0;\n\n/**\n * @title IERC3643\n * @dev Interface for on-chain identity management and compliance.\n */\ninterface IERC3643 {\n    /**\n     * @dev Returns the on-chain ID of the contract.\n     * @return address The address of the contract.\n     */\n    function onchainID() external view returns (address);\n    \n    /**\n     * @dev Returns the version of the contract.\n     * @return string The version string.\n     */\n    function version() external view returns (string memory);\n    \n    /**\n     * @dev Returns the identity registry address.\n     * @return address The identity registry address.\n     */\n    function identityRegistry() external view returns (address);\n    \n    /**\n     * @dev Returns the compliance address.\n     * @return address The compliance address.\n     */\n    function compliance() external view returns (address);\n    \n    /**\n     * @dev Checks if the contract is paused.\n     * @return bool Indicates if the contract is paused.\n     */\n    function paused() external view returns (bool);\n    \n    /**\n     * @dev Checks if a user is frozen.\n     * @param userAddress Address of the user to check.\n     * @return bool Indicates if the user is frozen.\n     */\n    function isFrozen(address userAddress) external view returns (bool);\n    \n    /**\n     * @dev Returns the number of frozen tokens for a user.\n     * @param userAddress Address of the user to check.\n     * @return uint256 Amount of frozen tokens.\n     */\n    function getFrozenTokens(address userAddress) external view returns (uint256);\n}\n// File: contracts/CCK/CCKToken.sol\n\n\npragma solidity ^0.8.0;\n\n/// 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\n/// 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\n\n\n\n\n \ncontract CCKToken is ERC20, Ownable, IERC3643 {\n\n    \n    // uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18; // 总供应量\n\n    uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18; // 总供应量\n    mapping(address => bool) public whitelist; // 白名单\n    mapping(address => bool) public frozen; // 冻结状态\n    address public uniswapPool; // Uniswap V3 池地址\n    uint256 public mintedAmount; // 已发行的代币数量\n\n    constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {\n        require(_whitelist.length > 0, \"At least one whitelisted address required\");\n        \n        // 批量添加白名单成员\n        for (uint256 i = 0; i < _whitelist.length; i++) {\n            whitelist[_whitelist[i]] = true;\n        }\n\n        _mint(msg.sender, TOTAL_SUPPLY); // 初始发行总量\n    }\n\n    // 添加白名单成员\n    function addToWhitelist(address member) external onlyOwner {\n        whitelist[member] = true;\n    }\n\n    // 移除白名单成员\n    function removeFromWhitelist(address member) external onlyOwner {\n        whitelist[member] = false;\n    }\n\n    // 冻结用户\n    function freezeUser(address user) external onlyOwner {\n        frozen[user] = true;\n    }\n\n    // 解冻用户\n    function unfreezeUser(address user) external onlyOwner {\n        frozen[user] = false;\n    }\n\n    // 返回可铸造的剩余代币数量\n    function remainingSupply() external view returns (uint256) {\n        return TOTAL_SUPPLY - mintedAmount; // 计算剩余的可铸造数量\n    }\n\n    // ERC-3643协议方法实现\n    function onchainID() external view override returns (address) {\n        return address(this);\n    }\n\n    function version() external view override returns (string memory) {\n        return \"1.0.0\";\n    }\n\n    function identityRegistry() external view override returns (address) {\n        return address(0); // 返回身份注册合约地址\n    }\n\n    function compliance() external view override returns (address) {\n        return address(0); // 返回合规性合约地址\n    }\n\n    function paused() external view override returns (bool) {\n        return false; \n    }\n\n    function isFrozen(address userAddress) external view override returns (bool) {\n        return frozen[userAddress]; // 返回用户冻结状态\n    }\n\n    function getFrozenTokens(address userAddress) external view override returns (uint256) {\n        return 0; // 目前没有冻结的代币逻辑\n    }\n\n    // 重写转账函数，确保转账金额为整数且不被冻结\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        require(!frozen[msg.sender], \"Sender is frozen\");\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\n        return super.transfer(recipient, amount);\n    }\n\n    // 重写转账授权函数\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        require(!frozen[sender], \"Sender is frozen\");\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    // 发行代币，需在白名单内\n    function mint(address to, uint256 amount) external onlyOwner {\n        require(whitelist[to], \"Not whitelisted\");\n        require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\");\n        _mint(to, amount);\n        mintedAmount += amount;\n    }\n\n      // 重写 ERC20 的 decimals 方法，设置为 0，表示没有小数点\n    function decimals() public view virtual override returns (uint8) {\n        return 0; // 没有小数位\n    }\n    \n    // 查看用户持有的代币数量\n    function balanceOfUser(address user) external view returns (uint256) {\n        return balanceOf(user); // 调用ERC20的balanceOf方法\n    }\n\n        // 获取当前价格\n    function getCurrentPrice() external view returns (uint256) {\n        IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool);\n        (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\n        // 价格计算：sqrtPriceX96 转换为价格\n        uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** (192)); // 计算实际价格\n        return price; // 返回当前价格\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/CCK/CCKToken_flattened.sol": {
				"CCKToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_whitelist",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOfUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "freezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "frozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unfreezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/CCKToken_flattened.sol\":51743:56026  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52197:52595  constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52266:52276  msg.sender */\n  caller\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37626:37739  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37700:37705  name_ */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37692:37697  _name */\n  0x03\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37692:37705  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37725:37732  symbol_ */\n  dup1\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37715:37722  _symbol */\n  0x04\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37715:37732  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":37626:37739  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48193:48194  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48169:48195  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48169:48181  initialOwner */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48169:48195  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48165:48260  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48246:48247  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48218:48249  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48165:48260  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48269:48301  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48288:48300  initialOwner */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48269:48287  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48269:48301  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":48121:48308  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52316:52317  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52296:52306  _whitelist */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52296:52313  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52296:52317  _whitelist.length > 0 */\n  gt\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52288:52363  require(_whitelist.length > 0, \"At least one whitelisted address required\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52426:52435  uint256 i */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52438:52439  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52426:52439  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52421:52525  for (uint256 i = 0; i < _whitelist.length; i++) {... */\ntag_21:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52445:52455  _whitelist */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52445:52462  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52441:52442  i */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52441:52462  i < _whitelist.length */\n  lt\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52421:52525  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  iszero\n  tag_22\n  jumpi\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52510:52514  true */\n  0x01\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52483:52492  whitelist */\n  0x06\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52483:52507  whitelist[_whitelist[i]] */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52493:52503  _whitelist */\n  dup5\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52504:52505  i */\n  dup5\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52493:52506  _whitelist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_24\n  jumpi\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\ntag_24:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52483:52507  whitelist[_whitelist[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52483:52514  whitelist[_whitelist[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52464:52467  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52421:52525  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  jump(tag_21)\ntag_22:\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52535:52566  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_27\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52541:52551  msg.sender */\n  caller\n    /* \"contracts/CCK/CCKToken_flattened.sol\":51921:51937  500_000 * 10**18 */\n  0x69e10de76676d0800000\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52535:52540  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52535:52566  _mint(msg.sender, TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":52197:52595  constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":51743:56026  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  jump(tag_29)\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49808:49995  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49881:49897  address oldOwner */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49900:49906  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49881:49906  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49925:49933  newOwner */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49916:49922  _owner */\n  0x05\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49916:49933  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49979:49987  newOwner */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49948:49988  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49969:49977  oldOwner */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49948:49988  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49871:49995  {... */\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":49808:49995  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43483:43691  function _mint(address account, uint256 value) internal {... */\ntag_28:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43572:43573  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43553:43574  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43553:43560  account */\n  dup3\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43553:43574  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43549:43640  if (account == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43626:43627  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43597:43629  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43549:43640  if (account == address(0)) {... */\ntag_32:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43649:43684  _update(address(0), account, value) */\n  tag_34\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43665:43666  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43669:43676  account */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43678:43683  value */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43649:43656  _update */\n  shl(0x20, tag_35)\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43649:43684  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43483:43691  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42033:43140  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42138:42139  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42122:42140  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42122:42126  from */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42122:42140  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42118:42658  if (from == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42274:42279  value */\n  dup1\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42258:42270  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42258:42279  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42118:42658  if (from == address(0)) {... */\n  jump(tag_40)\ntag_37:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42310:42329  uint256 fromBalance */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42332:42341  _balances */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42332:42347  _balances[from] */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42342:42346  from */\n  dup6\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42332:42347  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42310:42347  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42379:42384  value */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42365:42376  fromBalance */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42365:42384  fromBalance < value */\n  lt\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42361:42476  if (fromBalance < value) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42436:42440  from */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42442:42453  fromBalance */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42455:42460  value */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42411:42461  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42361:42476  if (fromBalance < value) {... */\ntag_41:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42628:42633  value */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42614:42625  fromBalance */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42614:42633  fromBalance - value */\n  sub\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42605  _balances */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42611  _balances[from] */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42606:42610  from */\n  dup7\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42611  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42633  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42296:42658  {... */\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42118:42658  if (from == address(0)) {... */\ntag_40:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42686:42687  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42672:42688  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42672:42674  to */\n  dup3\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42672:42688  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42668:43093  if (to == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42851:42856  value */\n  dup1\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42835:42847  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42835:42856  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42668:43093  if (to == address(0)) {... */\n  jump(tag_45)\ntag_44:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43063:43068  value */\n  dup1\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43055  _balances */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43059  _balances[to] */\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43056:43058  to */\n  dup5\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43059  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43068  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42668:43093  if (to == address(0)) {... */\ntag_45:\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43123:43125  to */\n  dup2\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43108:43133  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43117:43121  from */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43108:43133  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43127:43132  value */\n  dup4\n    /* \"contracts/CCK/CCKToken_flattened.sol\":43108:43133  Transfer(from, to, value) */\n  mload(0x40)\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/CCK/CCKToken_flattened.sol\":42033:43140  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_48:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_49:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_50:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_51:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_52:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_53:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_54:\n    /* \"#utility.yul\":834:861   */\n  tag_97\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_99\n  tag_53\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":907:995   */\ntag_98:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_55:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_101\n  tag_48\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_102\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_54\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_56:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_105\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1326:1382   */\ntag_104:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_57:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  0x00\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_58:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_59:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_109\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_60:\n    /* \"#utility.yul\":1920:1944   */\n  tag_111\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  0x00\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_112:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_61:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_114\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_60\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_62:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_116\n    /* \"#utility.yul\":2289:2353   */\n  tag_117\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_56\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2273:2354   */\n  tag_55\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_119\n  tag_57\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2505:2627   */\ntag_118:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_120:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_123\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_63:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_126\n  tag_51\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2994:3116   */\ntag_125:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_127\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_62\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3841   */\ntag_3:\n    /* \"#utility.yul\":3382:3388   */\n  0x00\n    /* \"#utility.yul\":3431:3433   */\n  0x20\n    /* \"#utility.yul\":3419:3428   */\n  dup3\n    /* \"#utility.yul\":3410:3417   */\n  dup5\n    /* \"#utility.yul\":3406:3429   */\n  sub\n    /* \"#utility.yul\":3402:3434   */\n  slt\n    /* \"#utility.yul\":3399:3518   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":3437:3516   */\n  tag_130\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3399:3518   */\ntag_129:\n    /* \"#utility.yul\":3578:3579   */\n  0x00\n    /* \"#utility.yul\":3567:3576   */\n  dup3\n    /* \"#utility.yul\":3563:3580   */\n  add\n    /* \"#utility.yul\":3557:3581   */\n  mload\n    /* \"#utility.yul\":3608:3626   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3600:3606   */\n  dup2\n    /* \"#utility.yul\":3597:3627   */\n  gt\n    /* \"#utility.yul\":3594:3711   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3630:3709   */\n  tag_132\n  tag_50\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3594:3711   */\ntag_131:\n    /* \"#utility.yul\":3735:3824   */\n  tag_133\n    /* \"#utility.yul\":3816:3823   */\n  dup5\n    /* \"#utility.yul\":3807:3813   */\n  dup3\n    /* \"#utility.yul\":3796:3805   */\n  dup6\n    /* \"#utility.yul\":3792:3814   */\n  add\n    /* \"#utility.yul\":3735:3824   */\n  tag_63\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3725:3824   */\n  swap2\n  pop\n    /* \"#utility.yul\":3528:3834   */\n  pop\n    /* \"#utility.yul\":3287:3841   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3847:3946   */\ntag_64:\n    /* \"#utility.yul\":3899:3905   */\n  0x00\n    /* \"#utility.yul\":3933:3938   */\n  dup2\n    /* \"#utility.yul\":3927:3939   */\n  mload\n    /* \"#utility.yul\":3917:3939   */\n  swap1\n  pop\n    /* \"#utility.yul\":3847:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4132   */\ntag_65:\n    /* \"#utility.yul\":4000:4077   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3997:3998   */\n  0x00\n    /* \"#utility.yul\":3990:4078   */\n  mstore\n    /* \"#utility.yul\":4097:4101   */\n  0x22\n    /* \"#utility.yul\":4094:4095   */\n  0x04\n    /* \"#utility.yul\":4087:4102   */\n  mstore\n    /* \"#utility.yul\":4121:4125   */\n  0x24\n    /* \"#utility.yul\":4118:4119   */\n  0x00\n    /* \"#utility.yul\":4111:4126   */\n  revert\n    /* \"#utility.yul\":4138:4458   */\ntag_66:\n    /* \"#utility.yul\":4182:4188   */\n  0x00\n    /* \"#utility.yul\":4219:4220   */\n  0x02\n    /* \"#utility.yul\":4213:4217   */\n  dup3\n    /* \"#utility.yul\":4209:4221   */\n  div\n    /* \"#utility.yul\":4199:4221   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4267   */\n  0x01\n    /* \"#utility.yul\":4260:4264   */\n  dup3\n    /* \"#utility.yul\":4256:4268   */\n  and\n    /* \"#utility.yul\":4287:4305   */\n  dup1\n    /* \"#utility.yul\":4277:4358   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4343:4347   */\n  0x7f\n    /* \"#utility.yul\":4335:4341   */\n  dup3\n    /* \"#utility.yul\":4331:4348   */\n  and\n    /* \"#utility.yul\":4321:4348   */\n  swap2\n  pop\n    /* \"#utility.yul\":4277:4358   */\ntag_137:\n    /* \"#utility.yul\":4405:4407   */\n  0x20\n    /* \"#utility.yul\":4397:4403   */\n  dup3\n    /* \"#utility.yul\":4394:4408   */\n  lt\n    /* \"#utility.yul\":4374:4392   */\n  dup2\n    /* \"#utility.yul\":4371:4409   */\n  sub\n    /* \"#utility.yul\":4368:4452   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4424:4442   */\n  tag_139\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4368:4452   */\ntag_138:\n    /* \"#utility.yul\":4189:4458   */\n  pop\n    /* \"#utility.yul\":4138:4458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4464:4605   */\ntag_67:\n    /* \"#utility.yul\":4513:4517   */\n  0x00\n    /* \"#utility.yul\":4536:4539   */\n  dup2\n    /* \"#utility.yul\":4528:4539   */\n  swap1\n  pop\n    /* \"#utility.yul\":4559:4562   */\n  dup2\n    /* \"#utility.yul\":4556:4557   */\n  0x00\n    /* \"#utility.yul\":4549:4563   */\n  mstore\n    /* \"#utility.yul\":4593:4597   */\n  0x20\n    /* \"#utility.yul\":4590:4591   */\n  0x00\n    /* \"#utility.yul\":4580:4598   */\n  keccak256\n    /* \"#utility.yul\":4572:4598   */\n  swap1\n  pop\n    /* \"#utility.yul\":4464:4605   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4611:4704   */\ntag_68:\n    /* \"#utility.yul\":4648:4654   */\n  0x00\n    /* \"#utility.yul\":4695:4697   */\n  0x20\n    /* \"#utility.yul\":4690:4692   */\n  0x1f\n    /* \"#utility.yul\":4683:4688   */\n  dup4\n    /* \"#utility.yul\":4679:4693   */\n  add\n    /* \"#utility.yul\":4675:4698   */\n  div\n    /* \"#utility.yul\":4665:4698   */\n  swap1\n  pop\n    /* \"#utility.yul\":4611:4704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4817   */\ntag_69:\n    /* \"#utility.yul\":4754:4762   */\n  0x00\n    /* \"#utility.yul\":4804:4809   */\n  dup3\n    /* \"#utility.yul\":4798:4802   */\n  dup3\n    /* \"#utility.yul\":4794:4810   */\n  shl\n    /* \"#utility.yul\":4773:4810   */\n  swap1\n  pop\n    /* \"#utility.yul\":4710:4817   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4823:5216   */\ntag_70:\n    /* \"#utility.yul\":4892:4898   */\n  0x00\n    /* \"#utility.yul\":4942:4943   */\n  0x08\n    /* \"#utility.yul\":4930:4940   */\n  dup4\n    /* \"#utility.yul\":4926:4944   */\n  mul\n    /* \"#utility.yul\":4965:5062   */\n  tag_144\n    /* \"#utility.yul\":4995:5061   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4984:4993   */\n  dup3\n    /* \"#utility.yul\":4965:5062   */\n  tag_69\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5083:5122   */\n  tag_145\n    /* \"#utility.yul\":5113:5121   */\n  dup7\n    /* \"#utility.yul\":5102:5111   */\n  dup4\n    /* \"#utility.yul\":5083:5122   */\n  tag_69\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5071:5122   */\n  swap6\n  pop\n    /* \"#utility.yul\":5155:5159   */\n  dup1\n    /* \"#utility.yul\":5151:5160   */\n  not\n    /* \"#utility.yul\":5144:5149   */\n  dup5\n    /* \"#utility.yul\":5140:5161   */\n  and\n    /* \"#utility.yul\":5131:5161   */\n  swap4\n  pop\n    /* \"#utility.yul\":5204:5208   */\n  dup1\n    /* \"#utility.yul\":5194:5202   */\n  dup7\n    /* \"#utility.yul\":5190:5209   */\n  and\n    /* \"#utility.yul\":5183:5188   */\n  dup5\n    /* \"#utility.yul\":5180:5210   */\n  or\n    /* \"#utility.yul\":5170:5210   */\n  swap3\n  pop\n    /* \"#utility.yul\":4899:5216   */\n  pop\n  pop\n    /* \"#utility.yul\":4823:5216   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5222:5299   */\ntag_71:\n    /* \"#utility.yul\":5259:5266   */\n  0x00\n    /* \"#utility.yul\":5288:5293   */\n  dup2\n    /* \"#utility.yul\":5277:5293   */\n  swap1\n  pop\n    /* \"#utility.yul\":5222:5299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5305:5365   */\ntag_72:\n    /* \"#utility.yul\":5333:5336   */\n  0x00\n    /* \"#utility.yul\":5354:5359   */\n  dup2\n    /* \"#utility.yul\":5347:5359   */\n  swap1\n  pop\n    /* \"#utility.yul\":5305:5365   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5371:5513   */\ntag_73:\n    /* \"#utility.yul\":5421:5430   */\n  0x00\n    /* \"#utility.yul\":5454:5507   */\n  tag_149\n    /* \"#utility.yul\":5472:5506   */\n  tag_150\n    /* \"#utility.yul\":5481:5505   */\n  tag_151\n    /* \"#utility.yul\":5499:5504   */\n  dup5\n    /* \"#utility.yul\":5481:5505   */\n  tag_71\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5472:5506   */\n  tag_72\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5454:5507   */\n  tag_71\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5441:5507   */\n  swap1\n  pop\n    /* \"#utility.yul\":5371:5513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5519:5594   */\ntag_74:\n    /* \"#utility.yul\":5562:5565   */\n  0x00\n    /* \"#utility.yul\":5583:5588   */\n  dup2\n    /* \"#utility.yul\":5576:5588   */\n  swap1\n  pop\n    /* \"#utility.yul\":5519:5594   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5600:5869   */\ntag_75:\n    /* \"#utility.yul\":5710:5749   */\n  tag_154\n    /* \"#utility.yul\":5741:5748   */\n  dup4\n    /* \"#utility.yul\":5710:5749   */\n  tag_73\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5771:5862   */\n  tag_155\n    /* \"#utility.yul\":5820:5861   */\n  tag_156\n    /* \"#utility.yul\":5844:5860   */\n  dup3\n    /* \"#utility.yul\":5820:5861   */\n  tag_74\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5812:5818   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5799:5810   */\n  sload\n    /* \"#utility.yul\":5771:5862   */\n  tag_70\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5765:5769   */\n  dup3\n    /* \"#utility.yul\":5758:5863   */\n  sstore\n    /* \"#utility.yul\":5676:5869   */\n  pop\n    /* \"#utility.yul\":5600:5869   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:5948   */\ntag_76:\n    /* \"#utility.yul\":5920:5923   */\n  0x00\n    /* \"#utility.yul\":5941:5942   */\n  0x00\n    /* \"#utility.yul\":5934:5942   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:5948   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5954:6143   */\ntag_77:\n    /* \"#utility.yul\":6031:6063   */\n  tag_159\n  tag_76\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6072:6137   */\n  tag_160\n    /* \"#utility.yul\":6130:6136   */\n  dup2\n    /* \"#utility.yul\":6122:6128   */\n  dup5\n    /* \"#utility.yul\":6116:6120   */\n  dup5\n    /* \"#utility.yul\":6072:6137   */\n  tag_75\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6007:6143   */\n  pop\n    /* \"#utility.yul\":5954:6143   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6149:6335   */\ntag_78:\n    /* \"#utility.yul\":6209:6329   */\ntag_162:\n    /* \"#utility.yul\":6226:6229   */\n  dup2\n    /* \"#utility.yul\":6219:6224   */\n  dup2\n    /* \"#utility.yul\":6216:6230   */\n  lt\n    /* \"#utility.yul\":6209:6329   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6280:6319   */\n  tag_165\n    /* \"#utility.yul\":6317:6318   */\n  0x00\n    /* \"#utility.yul\":6310:6315   */\n  dup3\n    /* \"#utility.yul\":6280:6319   */\n  tag_77\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6253:6254   */\n  0x01\n    /* \"#utility.yul\":6246:6251   */\n  dup2\n    /* \"#utility.yul\":6242:6255   */\n  add\n    /* \"#utility.yul\":6233:6255   */\n  swap1\n  pop\n    /* \"#utility.yul\":6209:6329   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":6149:6335   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6341:6884   */\ntag_79:\n    /* \"#utility.yul\":6442:6444   */\n  0x1f\n    /* \"#utility.yul\":6437:6440   */\n  dup3\n    /* \"#utility.yul\":6434:6445   */\n  gt\n    /* \"#utility.yul\":6431:6877   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6476:6514   */\n  tag_168\n    /* \"#utility.yul\":6508:6513   */\n  dup2\n    /* \"#utility.yul\":6476:6514   */\n  tag_67\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6560:6589   */\n  tag_169\n    /* \"#utility.yul\":6578:6588   */\n  dup5\n    /* \"#utility.yul\":6560:6589   */\n  tag_68\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6550:6558   */\n  dup2\n    /* \"#utility.yul\":6546:6590   */\n  add\n    /* \"#utility.yul\":6743:6745   */\n  0x20\n    /* \"#utility.yul\":6731:6741   */\n  dup6\n    /* \"#utility.yul\":6728:6746   */\n  lt\n    /* \"#utility.yul\":6725:6774   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6764:6772   */\n  dup2\n    /* \"#utility.yul\":6749:6772   */\n  swap1\n  pop\n    /* \"#utility.yul\":6725:6774   */\ntag_170:\n    /* \"#utility.yul\":6787:6867   */\n  tag_171\n    /* \"#utility.yul\":6843:6865   */\n  tag_172\n    /* \"#utility.yul\":6861:6864   */\n  dup6\n    /* \"#utility.yul\":6843:6865   */\n  tag_68\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6833:6841   */\n  dup4\n    /* \"#utility.yul\":6829:6866   */\n  add\n    /* \"#utility.yul\":6816:6827   */\n  dup3\n    /* \"#utility.yul\":6787:6867   */\n  tag_78\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6446:6877   */\n  pop\n  pop\n    /* \"#utility.yul\":6431:6877   */\ntag_167:\n    /* \"#utility.yul\":6341:6884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6890:7007   */\ntag_80:\n    /* \"#utility.yul\":6944:6952   */\n  0x00\n    /* \"#utility.yul\":6994:6999   */\n  dup3\n    /* \"#utility.yul\":6988:6992   */\n  dup3\n    /* \"#utility.yul\":6984:7000   */\n  shr\n    /* \"#utility.yul\":6963:7000   */\n  swap1\n  pop\n    /* \"#utility.yul\":6890:7007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7013:7182   */\ntag_81:\n    /* \"#utility.yul\":7057:7063   */\n  0x00\n    /* \"#utility.yul\":7090:7141   */\n  tag_175\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7134:7140   */\n  not\n    /* \"#utility.yul\":7126:7131   */\n  dup5\n    /* \"#utility.yul\":7123:7124   */\n  0x08\n    /* \"#utility.yul\":7119:7132   */\n  mul\n    /* \"#utility.yul\":7090:7141   */\n  tag_80\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7086:7142   */\n  not\n    /* \"#utility.yul\":7171:7175   */\n  dup1\n    /* \"#utility.yul\":7165:7169   */\n  dup4\n    /* \"#utility.yul\":7161:7176   */\n  and\n    /* \"#utility.yul\":7151:7176   */\n  swap2\n  pop\n    /* \"#utility.yul\":7064:7182   */\n  pop\n    /* \"#utility.yul\":7013:7182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7187:7482   */\ntag_82:\n    /* \"#utility.yul\":7263:7267   */\n  0x00\n    /* \"#utility.yul\":7409:7438   */\n  tag_177\n    /* \"#utility.yul\":7434:7437   */\n  dup4\n    /* \"#utility.yul\":7428:7432   */\n  dup4\n    /* \"#utility.yul\":7409:7438   */\n  tag_81\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7401:7438   */\n  swap2\n  pop\n    /* \"#utility.yul\":7471:7474   */\n  dup3\n    /* \"#utility.yul\":7468:7469   */\n  0x02\n    /* \"#utility.yul\":7464:7475   */\n  mul\n    /* \"#utility.yul\":7458:7462   */\n  dup3\n    /* \"#utility.yul\":7455:7476   */\n  or\n    /* \"#utility.yul\":7447:7476   */\n  swap1\n  pop\n    /* \"#utility.yul\":7187:7482   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7487:8882   */\ntag_9:\n    /* \"#utility.yul\":7604:7641   */\n  tag_179\n    /* \"#utility.yul\":7637:7640   */\n  dup3\n    /* \"#utility.yul\":7604:7641   */\n  tag_64\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7706:7724   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7698:7704   */\n  dup2\n    /* \"#utility.yul\":7695:7725   */\n  gt\n    /* \"#utility.yul\":7692:7748   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7728:7746   */\n  tag_181\n  tag_53\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7692:7748   */\ntag_180:\n    /* \"#utility.yul\":7772:7810   */\n  tag_182\n    /* \"#utility.yul\":7804:7808   */\n  dup3\n    /* \"#utility.yul\":7798:7809   */\n  sload\n    /* \"#utility.yul\":7772:7810   */\n  tag_66\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7857:7924   */\n  tag_183\n    /* \"#utility.yul\":7917:7923   */\n  dup3\n    /* \"#utility.yul\":7909:7915   */\n  dup3\n    /* \"#utility.yul\":7903:7907   */\n  dup6\n    /* \"#utility.yul\":7857:7924   */\n  tag_79\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7951:7952   */\n  0x00\n    /* \"#utility.yul\":7975:7979   */\n  0x20\n    /* \"#utility.yul\":7962:7979   */\n  swap1\n  pop\n    /* \"#utility.yul\":8007:8009   */\n  0x1f\n    /* \"#utility.yul\":7999:8005   */\n  dup4\n    /* \"#utility.yul\":7996:8010   */\n  gt\n    /* \"#utility.yul\":8024:8025   */\n  0x01\n    /* \"#utility.yul\":8019:8637   */\n  dup2\n  eq\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8681:8682   */\n  0x00\n    /* \"#utility.yul\":8698:8704   */\n  dup5\n    /* \"#utility.yul\":8695:8772   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8747:8756   */\n  dup3\n    /* \"#utility.yul\":8742:8745   */\n  dup8\n    /* \"#utility.yul\":8738:8757   */\n  add\n    /* \"#utility.yul\":8732:8758   */\n  mload\n    /* \"#utility.yul\":8723:8758   */\n  swap1\n  pop\n    /* \"#utility.yul\":8695:8772   */\ntag_186:\n    /* \"#utility.yul\":8798:8865   */\n  tag_187\n    /* \"#utility.yul\":8858:8864   */\n  dup6\n    /* \"#utility.yul\":8851:8856   */\n  dup3\n    /* \"#utility.yul\":8798:8865   */\n  tag_82\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8792:8796   */\n  dup7\n    /* \"#utility.yul\":8785:8866   */\n  sstore\n    /* \"#utility.yul\":8654:8876   */\n  pop\n    /* \"#utility.yul\":7989:8876   */\n  jump(tag_184)\n    /* \"#utility.yul\":8019:8637   */\ntag_185:\n    /* \"#utility.yul\":8071:8075   */\n  0x1f\n    /* \"#utility.yul\":8067:8076   */\n  not\n    /* \"#utility.yul\":8059:8065   */\n  dup5\n    /* \"#utility.yul\":8055:8077   */\n  and\n    /* \"#utility.yul\":8105:8142   */\n  tag_188\n    /* \"#utility.yul\":8137:8141   */\n  dup7\n    /* \"#utility.yul\":8105:8142   */\n  tag_67\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8164:8165   */\n  0x00\n    /* \"#utility.yul\":8178:8386   */\ntag_189:\n    /* \"#utility.yul\":8192:8199   */\n  dup3\n    /* \"#utility.yul\":8189:8190   */\n  dup2\n    /* \"#utility.yul\":8186:8200   */\n  lt\n    /* \"#utility.yul\":8178:8386   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8271:8280   */\n  dup5\n    /* \"#utility.yul\":8266:8269   */\n  dup10\n    /* \"#utility.yul\":8262:8281   */\n  add\n    /* \"#utility.yul\":8256:8282   */\n  mload\n    /* \"#utility.yul\":8248:8254   */\n  dup3\n    /* \"#utility.yul\":8241:8283   */\n  sstore\n    /* \"#utility.yul\":8322:8323   */\n  0x01\n    /* \"#utility.yul\":8314:8320   */\n  dup3\n    /* \"#utility.yul\":8310:8324   */\n  add\n    /* \"#utility.yul\":8300:8324   */\n  swap2\n  pop\n    /* \"#utility.yul\":8369:8371   */\n  0x20\n    /* \"#utility.yul\":8358:8367   */\n  dup6\n    /* \"#utility.yul\":8354:8372   */\n  add\n    /* \"#utility.yul\":8341:8372   */\n  swap5\n  pop\n    /* \"#utility.yul\":8215:8219   */\n  0x20\n    /* \"#utility.yul\":8212:8213   */\n  dup2\n    /* \"#utility.yul\":8208:8220   */\n  add\n    /* \"#utility.yul\":8203:8220   */\n  swap1\n  pop\n    /* \"#utility.yul\":8178:8386   */\n  jump(tag_189)\ntag_191:\n    /* \"#utility.yul\":8414:8420   */\n  dup7\n    /* \"#utility.yul\":8405:8412   */\n  dup4\n    /* \"#utility.yul\":8402:8421   */\n  lt\n    /* \"#utility.yul\":8399:8578   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8472:8481   */\n  dup5\n    /* \"#utility.yul\":8467:8470   */\n  dup10\n    /* \"#utility.yul\":8463:8482   */\n  add\n    /* \"#utility.yul\":8457:8483   */\n  mload\n    /* \"#utility.yul\":8515:8563   */\n  tag_193\n    /* \"#utility.yul\":8557:8561   */\n  0x1f\n    /* \"#utility.yul\":8549:8555   */\n  dup10\n    /* \"#utility.yul\":8545:8562   */\n  and\n    /* \"#utility.yul\":8534:8543   */\n  dup3\n    /* \"#utility.yul\":8515:8563   */\n  tag_81\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8507:8513   */\n  dup4\n    /* \"#utility.yul\":8500:8564   */\n  sstore\n    /* \"#utility.yul\":8422:8578   */\n  pop\n    /* \"#utility.yul\":8399:8578   */\ntag_192:\n    /* \"#utility.yul\":8624:8625   */\n  0x01\n    /* \"#utility.yul\":8620:8621   */\n  0x02\n    /* \"#utility.yul\":8612:8618   */\n  dup9\n    /* \"#utility.yul\":8608:8622   */\n  mul\n    /* \"#utility.yul\":8604:8626   */\n  add\n    /* \"#utility.yul\":8598:8602   */\n  dup9\n    /* \"#utility.yul\":8591:8627   */\n  sstore\n    /* \"#utility.yul\":8026:8637   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7989:8876   */\ntag_184:\n  pop\n    /* \"#utility.yul\":7579:8882   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7487:8882   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8888:9006   */\ntag_83:\n    /* \"#utility.yul\":8975:8999   */\n  tag_195\n    /* \"#utility.yul\":8993:8998   */\n  dup2\n    /* \"#utility.yul\":8975:8999   */\n  tag_59\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8970:8973   */\n  dup3\n    /* \"#utility.yul\":8963:9000   */\n  mstore\n    /* \"#utility.yul\":8888:9006   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9012:9234   */\ntag_14:\n    /* \"#utility.yul\":9105:9109   */\n  0x00\n    /* \"#utility.yul\":9143:9145   */\n  0x20\n    /* \"#utility.yul\":9132:9141   */\n  dup3\n    /* \"#utility.yul\":9128:9146   */\n  add\n    /* \"#utility.yul\":9120:9146   */\n  swap1\n  pop\n    /* \"#utility.yul\":9156:9227   */\n  tag_197\n    /* \"#utility.yul\":9224:9225   */\n  0x00\n    /* \"#utility.yul\":9213:9222   */\n  dup4\n    /* \"#utility.yul\":9209:9226   */\n  add\n    /* \"#utility.yul\":9200:9206   */\n  dup5\n    /* \"#utility.yul\":9156:9227   */\n  tag_83\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9012:9234   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9240:9409   */\ntag_84:\n    /* \"#utility.yul\":9324:9335   */\n  0x00\n    /* \"#utility.yul\":9358:9364   */\n  dup3\n    /* \"#utility.yul\":9353:9356   */\n  dup3\n    /* \"#utility.yul\":9346:9365   */\n  mstore\n    /* \"#utility.yul\":9398:9402   */\n  0x20\n    /* \"#utility.yul\":9393:9396   */\n  dup3\n    /* \"#utility.yul\":9389:9403   */\n  add\n    /* \"#utility.yul\":9374:9403   */\n  swap1\n  pop\n    /* \"#utility.yul\":9240:9409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9415:9643   */\ntag_85:\n    /* \"#utility.yul\":9555:9589   */\n  0x4174206c65617374206f6e652077686974656c69737465642061646472657373\n    /* \"#utility.yul\":9551:9552   */\n  0x00\n    /* \"#utility.yul\":9543:9549   */\n  dup3\n    /* \"#utility.yul\":9539:9553   */\n  add\n    /* \"#utility.yul\":9532:9590   */\n  mstore\n    /* \"#utility.yul\":9624:9635   */\n  0x2072657175697265640000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9619:9621   */\n  0x20\n    /* \"#utility.yul\":9611:9617   */\n  dup3\n    /* \"#utility.yul\":9607:9622   */\n  add\n    /* \"#utility.yul\":9600:9636   */\n  mstore\n    /* \"#utility.yul\":9415:9643   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9649:10015   */\ntag_86:\n    /* \"#utility.yul\":9791:9794   */\n  0x00\n    /* \"#utility.yul\":9812:9879   */\n  tag_201\n    /* \"#utility.yul\":9876:9878   */\n  0x29\n    /* \"#utility.yul\":9871:9874   */\n  dup4\n    /* \"#utility.yul\":9812:9879   */\n  tag_84\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9805:9879   */\n  swap2\n  pop\n    /* \"#utility.yul\":9888:9981   */\n  tag_202\n    /* \"#utility.yul\":9977:9980   */\n  dup3\n    /* \"#utility.yul\":9888:9981   */\n  tag_85\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10006:10008   */\n  0x40\n    /* \"#utility.yul\":10001:10004   */\n  dup3\n    /* \"#utility.yul\":9997:10009   */\n  add\n    /* \"#utility.yul\":9990:10009   */\n  swap1\n  pop\n    /* \"#utility.yul\":9649:10015   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10021:10440   */\ntag_20:\n    /* \"#utility.yul\":10187:10191   */\n  0x00\n    /* \"#utility.yul\":10225:10227   */\n  0x20\n    /* \"#utility.yul\":10214:10223   */\n  dup3\n    /* \"#utility.yul\":10210:10228   */\n  add\n    /* \"#utility.yul\":10202:10228   */\n  swap1\n  pop\n    /* \"#utility.yul\":10274:10283   */\n  dup2\n    /* \"#utility.yul\":10268:10272   */\n  dup2\n    /* \"#utility.yul\":10264:10284   */\n  sub\n    /* \"#utility.yul\":10260:10261   */\n  0x00\n    /* \"#utility.yul\":10249:10258   */\n  dup4\n    /* \"#utility.yul\":10245:10262   */\n  add\n    /* \"#utility.yul\":10238:10285   */\n  mstore\n    /* \"#utility.yul\":10302:10433   */\n  tag_204\n    /* \"#utility.yul\":10428:10432   */\n  dup2\n    /* \"#utility.yul\":10302:10433   */\n  tag_86\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10294:10433   */\n  swap1\n  pop\n    /* \"#utility.yul\":10021:10440   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10446:10626   */\ntag_26:\n    /* \"#utility.yul\":10494:10571   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10491:10492   */\n  0x00\n    /* \"#utility.yul\":10484:10572   */\n  mstore\n    /* \"#utility.yul\":10591:10595   */\n  0x32\n    /* \"#utility.yul\":10588:10589   */\n  0x04\n    /* \"#utility.yul\":10581:10596   */\n  mstore\n    /* \"#utility.yul\":10615:10619   */\n  0x24\n    /* \"#utility.yul\":10612:10613   */\n  0x00\n    /* \"#utility.yul\":10605:10620   */\n  revert\n    /* \"#utility.yul\":10632:10812   */\ntag_87:\n    /* \"#utility.yul\":10680:10757   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10677:10678   */\n  0x00\n    /* \"#utility.yul\":10670:10758   */\n  mstore\n    /* \"#utility.yul\":10777:10781   */\n  0x11\n    /* \"#utility.yul\":10774:10775   */\n  0x04\n    /* \"#utility.yul\":10767:10782   */\n  mstore\n    /* \"#utility.yul\":10801:10805   */\n  0x24\n    /* \"#utility.yul\":10798:10799   */\n  0x00\n    /* \"#utility.yul\":10791:10806   */\n  revert\n    /* \"#utility.yul\":10818:11009   */\ntag_39:\n    /* \"#utility.yul\":10858:10861   */\n  0x00\n    /* \"#utility.yul\":10877:10897   */\n  tag_208\n    /* \"#utility.yul\":10895:10896   */\n  dup3\n    /* \"#utility.yul\":10877:10897   */\n  tag_71\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10872:10897   */\n  swap2\n  pop\n    /* \"#utility.yul\":10911:10931   */\n  tag_209\n    /* \"#utility.yul\":10929:10930   */\n  dup4\n    /* \"#utility.yul\":10911:10931   */\n  tag_71\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10906:10931   */\n  swap3\n  pop\n    /* \"#utility.yul\":10954:10955   */\n  dup3\n    /* \"#utility.yul\":10951:10952   */\n  dup3\n    /* \"#utility.yul\":10947:10956   */\n  add\n    /* \"#utility.yul\":10940:10956   */\n  swap1\n  pop\n    /* \"#utility.yul\":10975:10978   */\n  dup1\n    /* \"#utility.yul\":10972:10973   */\n  dup3\n    /* \"#utility.yul\":10969:10979   */\n  gt\n    /* \"#utility.yul\":10966:11002   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":10982:11000   */\n  tag_211\n  tag_87\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10966:11002   */\ntag_210:\n    /* \"#utility.yul\":10818:11009   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11015:11133   */\ntag_88:\n    /* \"#utility.yul\":11102:11126   */\n  tag_213\n    /* \"#utility.yul\":11120:11125   */\n  dup2\n    /* \"#utility.yul\":11102:11126   */\n  tag_71\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":11097:11100   */\n  dup3\n    /* \"#utility.yul\":11090:11127   */\n  mstore\n    /* \"#utility.yul\":11015:11133   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11139:11581   */\ntag_43:\n    /* \"#utility.yul\":11288:11292   */\n  0x00\n    /* \"#utility.yul\":11326:11328   */\n  0x60\n    /* \"#utility.yul\":11315:11324   */\n  dup3\n    /* \"#utility.yul\":11311:11329   */\n  add\n    /* \"#utility.yul\":11303:11329   */\n  swap1\n  pop\n    /* \"#utility.yul\":11339:11410   */\n  tag_215\n    /* \"#utility.yul\":11407:11408   */\n  0x00\n    /* \"#utility.yul\":11396:11405   */\n  dup4\n    /* \"#utility.yul\":11392:11409   */\n  add\n    /* \"#utility.yul\":11383:11389   */\n  dup7\n    /* \"#utility.yul\":11339:11410   */\n  tag_83\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11420:11492   */\n  tag_216\n    /* \"#utility.yul\":11488:11490   */\n  0x20\n    /* \"#utility.yul\":11477:11486   */\n  dup4\n    /* \"#utility.yul\":11473:11491   */\n  add\n    /* \"#utility.yul\":11464:11470   */\n  dup6\n    /* \"#utility.yul\":11420:11492   */\n  tag_88\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11502:11574   */\n  tag_217\n    /* \"#utility.yul\":11570:11572   */\n  0x40\n    /* \"#utility.yul\":11559:11568   */\n  dup4\n    /* \"#utility.yul\":11555:11573   */\n  add\n    /* \"#utility.yul\":11546:11552   */\n  dup5\n    /* \"#utility.yul\":11502:11574   */\n  tag_88\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11139:11581   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11587:11809   */\ntag_47:\n    /* \"#utility.yul\":11680:11684   */\n  0x00\n    /* \"#utility.yul\":11718:11720   */\n  0x20\n    /* \"#utility.yul\":11707:11716   */\n  dup3\n    /* \"#utility.yul\":11703:11721   */\n  add\n    /* \"#utility.yul\":11695:11721   */\n  swap1\n  pop\n    /* \"#utility.yul\":11731:11802   */\n  tag_219\n    /* \"#utility.yul\":11799:11800   */\n  0x00\n    /* \"#utility.yul\":11788:11797   */\n  dup4\n    /* \"#utility.yul\":11784:11801   */\n  add\n    /* \"#utility.yul\":11775:11781   */\n  dup5\n    /* \"#utility.yul\":11731:11802   */\n  tag_88\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11587:11809   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/CCKToken_flattened.sol\":51743:56026  contract CCKToken is ERC20, Ownable, IERC3643 {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51743:56026  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd0516650\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe43252d7\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xd0516650\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xda0239a6\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe08ba51a\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa9059cbb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xaba63705\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbdd3d825\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcb4b73ab\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x313ce567\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x6290865d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x6290865d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x158b1a57\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x158b1a57\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2d380242\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12cae7af\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x134e18f4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCK/CCKToken_flattened.sol\":37804:37893  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40023:40209  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55475:55616  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_5:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53546:53683  function identityRegistry() external view override returns (address) {... */\n    tag_6:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54069:54218  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_7:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38874:38971  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54614:54923  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_9:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52135:52162  uint256 public mintedAmount */\n    tag_10:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55315:55424  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54970:55229  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53443:53540  function version() external view override returns (string memory) {... */\n    tag_13:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53823:53909  function paused() external view override returns (bool) {... */\n    tag_14:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53689:53817  function compliance() external view override returns (address) {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39029:39145  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49189:49290  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52765:52871  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_18:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48534:48619  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51882:51937  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_20:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38006:38099  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51959:52000  mapping(address => bool) public whitelist */\n    tag_22:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54295:54576  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_23:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53338:53437  function onchainID() external view override returns (address) {... */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52079:52105  address public uniswapPool */\n    tag_25:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53012:53104  function unfreezeUser(address user) external onlyOwner {... */\n    tag_26:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52019:52057  mapping(address => bool) public frozen */\n    tag_27:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53154:53298  function remainingSupply() external view returns (uint256) {... */\n    tag_28:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39576:39716  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52897:52986  function freezeUser(address user) external onlyOwner {... */\n    tag_30:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52630:52730  function addToWhitelist(address member) external onlyOwner {... */\n    tag_31:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53915:54063  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_32:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55652:56024  function getCurrentPrice() external view returns (uint256) {... */\n    tag_33:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49439:49654  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":37804:37893  function name() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":37849:37862  string memory */\n      0x60\n        /* \"contracts/CCK/CCKToken_flattened.sol\":37881:37886  _name */\n      0x03\n        /* \"contracts/CCK/CCKToken_flattened.sol\":37874:37886  return _name */\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_158\n      jump\t// in\n    tag_159:\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_161\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_160)\n    tag_161:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_162:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_162\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":37804:37893  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40023:40209  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40096:40100  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40112:40125  address owner */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40128:40140  _msgSender() */\n      tag_164\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40128:40138  _msgSender */\n      tag_165\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40128:40140  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40112:40140  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40150:40181  _approve(owner, spender, value) */\n      tag_166\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40159:40164  owner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40166:40173  spender */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40175:40180  value */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40150:40158  _approve */\n      tag_167\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40150:40181  _approve(owner, spender, value) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40198:40202  true */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40191:40202  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40023:40209  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55475:55616  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55535:55542  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55561:55576  balanceOf(user) */\n      tag_169\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55571:55575  user */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55561:55570  balanceOf */\n      tag_95\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55561:55576  balanceOf(user) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55554:55576  return balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55475:55616  function balanceOfUser(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53546:53683  function identityRegistry() external view override returns (address) {... */\n    tag_59:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53606:53613  address */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53640:53641  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53625:53642  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53546:53683  function identityRegistry() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54069:54218  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_64:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54147:54154  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54173:54174  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54166:54174  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54069:54218  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38874:38971  function totalSupply() public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38926:38933  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38952:38964  _totalSupply */\n      sload(0x02)\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38945:38964  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38874:38971  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54614:54923  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_72:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54712:54716  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54737:54743  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54737:54751  frozen[sender] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54744:54750  sender */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54737:54751  frozen[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54736:54751  !frozen[sender] */\n      iszero\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54728:54772  require(!frozen[sender], \"Sender is frozen\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54816:54822  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54800:54824  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54790:54796  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54790:54824  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54782:54854  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54871:54916  super.transferFrom(sender, recipient, amount) */\n      tag_180\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54890:54896  sender */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54898:54907  recipient */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54909:54915  amount */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54871:54889  super.transferFrom */\n      tag_181\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54871:54916  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54864:54916  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54614:54923  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52135:52162  uint256 public mintedAmount */\n    tag_75:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55315:55424  function decimals() public view virtual override returns (uint8) {... */\n    tag_78:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55373:55378  uint8 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55397:55398  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55390:55398  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55315:55424  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54970:55229  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_83:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_184\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55049:55058  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55049:55062  whitelist[to] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55059:55061  to */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55049:55062  whitelist[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55041:55082  require(whitelist[to], \"Not whitelisted\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51921:51937  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55115:55121  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55100:55112  mintedAmount */\n      sload(0x09)\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55100:55121  mintedAmount + amount */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55100:55137  mintedAmount + amount <= TOTAL_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55092:55163  require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55173:55190  _mint(to, amount) */\n      tag_195\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55179:55181  to */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55183:55189  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55173:55178  _mint */\n      tag_196\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55173:55190  _mint(to, amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55216:55222  amount */\n      dup1\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55200:55212  mintedAmount */\n      0x09\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55200:55222  mintedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54970:55229  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53443:53540  function version() external view override returns (string memory) {... */\n    tag_85:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53494:53507  string memory */\n      0x60\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53519:53533  return \"1.0.0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x312e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53443:53540  function version() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53823:53909  function paused() external view override returns (bool) {... */\n    tag_88:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53873:53877  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53896:53901  false */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53889:53901  return false */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53823:53909  function paused() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53689:53817  function compliance() external view override returns (address) {... */\n    tag_91:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53743:53750  address */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53777:53778  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53762:53779  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53689:53817  function compliance() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39029:39145  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_95:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39094:39101  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39120:39129  _balances */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39120:39138  _balances[account] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39130:39137  account */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39120:39138  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39113:39138  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39029:39145  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49189:49290  function renounceOwnership() public virtual onlyOwner {... */\n    tag_98:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_203\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49253:49283  _transferOwnership(address(0)) */\n      tag_205\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49280:49281  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49253:49271  _transferOwnership */\n      tag_206\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49253:49283  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49189:49290  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52765:52871  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_101:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_208\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52859:52864  false */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52839:52848  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52839:52856  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52849:52855  member */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52839:52856  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52839:52864  whitelist[member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52765:52871  function removeFromWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48534:48619  function owner() public view virtual returns (address) {... */\n    tag_103:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48580:48587  address */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48606:48612  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48599:48612  return _owner */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48534:48619  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51882:51937  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_106:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51921:51937  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51882:51937  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38006:38099  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38053:38066  string memory */\n      0x60\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38085:38092  _symbol */\n      0x04\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38078:38092  return _symbol */\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_158\n      jump\t// in\n    tag_212:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_158\n      jump\t// in\n    tag_213:\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_215\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_214)\n    tag_215:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_216:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_216\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":38006:38099  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51959:52000  mapping(address => bool) public whitelist */\n    tag_113:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54295:54576  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_117:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54373:54377  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54398:54404  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54398:54416  frozen[msg.sender] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54405:54415  msg.sender */\n      caller\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54398:54416  frozen[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54397:54416  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54389:54437  require(!frozen[msg.sender], \"Sender is frozen\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_176\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54481:54487  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54465:54489  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54455:54461  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54455:54489  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54447:54519  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_179\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54536:54569  super.transfer(recipient, amount) */\n      tag_222\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54551:54560  recipient */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54562:54568  amount */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54536:54550  super.transfer */\n      tag_223\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54536:54569  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54529:54569  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54295:54576  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53338:53437  function onchainID() external view override returns (address) {... */\n    tag_120:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53391:53398  address */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53425:53429  this */\n      address\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53410:53430  return address(this) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53338:53437  function onchainID() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52079:52105  address public uniswapPool */\n    tag_123:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53012:53104  function unfreezeUser(address user) external onlyOwner {... */\n    tag_127:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_226\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53092:53097  false */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53077:53083  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53077:53089  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53084:53088  user */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53077:53089  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53077:53097  frozen[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53012:53104  function unfreezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52019:52057  mapping(address => bool) public frozen */\n    tag_130:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53154:53298  function remainingSupply() external view returns (uint256) {... */\n    tag_133:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53204:53211  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53245:53257  mintedAmount */\n      sload(0x09)\n        /* \"contracts/CCK/CCKToken_flattened.sol\":51921:51937  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53230:53257  TOTAL_SUPPLY - mintedAmount */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53223:53257  return TOTAL_SUPPLY - mintedAmount */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53154:53298  function remainingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39576:39716  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_138:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39656:39663  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39682:39693  _allowances */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39682:39700  _allowances[owner] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39694:39699  owner */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39682:39700  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39682:39709  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39701:39708  spender */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39682:39709  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39675:39709  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39576:39716  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52897:52986  function freezeUser(address user) external onlyOwner {... */\n    tag_142:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_233\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52975:52979  true */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52960:52966  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52960:52972  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52967:52971  user */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52960:52972  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52960:52979  frozen[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52897:52986  function freezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52630:52730  function addToWhitelist(address member) external onlyOwner {... */\n    tag_145:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_236\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52719:52723  true */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52699:52708  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52699:52716  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52709:52715  member */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52699:52716  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52699:52723  whitelist[member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":52630:52730  function addToWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53915:54063  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_148:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53986:53990  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54009:54015  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54009:54028  frozen[userAddress] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54016:54027  userAddress */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54009:54028  frozen[userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":54002:54028  return frozen[userAddress] */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":53915:54063  function isFrozen(address userAddress) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55652:56024  function getCurrentPrice() external view returns (uint256) {... */\n    tag_151:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55702:55709  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55721:55740  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55758:55769  uniswapPool */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55721:55770  IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55781:55801  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55817:55821  pool */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55817:55827  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55817:55829  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55780:55829  (uint160 sqrtPriceX96, , , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55894:55907  uint256 price */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55940:55950  2 ** (192) */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55935:55936  2 */\n      0x02\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55918:55930  sqrtPriceX96 */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55910:55931  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55910:55936  uint256(sqrtPriceX96) ** 2 */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55910:55951  uint256(sqrtPriceX96) ** 2 / (2 ** (192)) */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55894:55951  uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** (192)) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55990:55995  price */\n      dup1\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55983:55995  return price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":55652:56024  function getCurrentPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49439:49654  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      tag_249\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48438  _checkOwner */\n      tag_185\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48427:48440  _checkOwner() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49543:49544  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49523:49545  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49523:49531  newOwner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49523:49545  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49519:49610  if (newOwner == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49596:49597  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49568:49599  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49519:49610  if (newOwner == address(0)) {... */\n    tag_251:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49619:49647  _transferOwnership(newOwner) */\n      tag_253\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49638:49646  newOwner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49619:49637  _transferOwnership */\n      tag_206\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49619:49647  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_253:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49439:49654  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":29352:29448  function _msgSender() internal view virtual returns (address) {... */\n    tag_165:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":29405:29412  address */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":29431:29441  msg.sender */\n      caller\n        /* \"contracts/CCK/CCKToken_flattened.sol\":29424:29441  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":29352:29448  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44751:44879  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_167:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44835:44872  _approve(owner, spender, value, true) */\n      tag_256\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44844:44849  owner */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44851:44858  spender */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44860:44865  value */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44867:44871  true */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44835:44843  _approve */\n      tag_257\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44835:44872  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":44751:44879  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40801:41045  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_181:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40888:40892  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40904:40919  address spender */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40922:40934  _msgSender() */\n      tag_259\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40922:40932  _msgSender */\n      tag_165\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40922:40934  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40904:40934  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40944:40981  _spendAllowance(from, spender, value) */\n      tag_260\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40960:40964  from */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40966:40973  spender */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40975:40980  value */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40944:40959  _spendAllowance */\n      tag_261\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40944:40981  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40991:41017  _transfer(from, to, value) */\n      tag_262\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41001:41005  from */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41007:41009  to */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41011:41016  value */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40991:41000  _transfer */\n      tag_263\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40991:41017  _transfer(from, to, value) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41034:41038  true */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41027:41038  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":40801:41045  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48692:48854  function _checkOwner() internal view virtual {... */\n    tag_185:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48762:48774  _msgSender() */\n      tag_265\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48762:48772  _msgSender */\n      tag_165\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48762:48774  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48751:48774  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48751:48758  owner() */\n      tag_266\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48751:48756  owner */\n      tag_103\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48751:48758  owner() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48751:48774  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48747:48848  if (owner() != _msgSender()) {... */\n      tag_267\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48824:48836  _msgSender() */\n      tag_268\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48824:48834  _msgSender */\n      tag_165\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48824:48836  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48797:48837  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48747:48848  if (owner() != _msgSender()) {... */\n    tag_267:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":48692:48854  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43483:43691  function _mint(address account, uint256 value) internal {... */\n    tag_196:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43572:43573  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43553:43574  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43553:43560  account */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43553:43574  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43549:43640  if (account == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43626:43627  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43597:43629  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43549:43640  if (account == address(0)) {... */\n    tag_271:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43649:43684  _update(address(0), account, value) */\n      tag_273\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43665:43666  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43669:43676  account */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43678:43683  value */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43649:43656  _update */\n      tag_274\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43649:43684  _update(address(0), account, value) */\n      jump\t// in\n    tag_273:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43483:43691  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49808:49995  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_206:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49881:49897  address oldOwner */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49900:49906  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49881:49906  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49925:49933  newOwner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49916:49922  _owner */\n      0x05\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49916:49933  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49979:49987  newOwner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49948:49988  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49969:49977  oldOwner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49948:49988  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49871:49995  {... */\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":49808:49995  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39340:39518  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_223:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39409:39413  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39425:39438  address owner */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39441:39453  _msgSender() */\n      tag_277\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39441:39451  _msgSender */\n      tag_165\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39441:39453  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39425:39453  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39463:39490  _transfer(owner, to, value) */\n      tag_278\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39473:39478  owner */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39480:39482  to */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39484:39489  value */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39463:39472  _transfer */\n      tag_263\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39463:39490  _transfer(owner, to, value) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39507:39511  true */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39500:39511  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":39340:39518  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45726:46158  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_257:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45855:45856  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45838:45857  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45838:45843  owner */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45838:45857  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45834:45923  if (owner == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45909:45910  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45880:45912  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45834:45923  if (owner == address(0)) {... */\n    tag_280:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45955:45956  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45936:45957  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45936:45943  spender */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45936:45957  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45932:46022  if (spender == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46008:46009  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45980:46011  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45932:46022  if (spender == address(0)) {... */\n    tag_282:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46061:46066  value */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46031:46042  _allowances */\n      0x01\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46031:46049  _allowances[owner] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46043:46048  owner */\n      dup7\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46031:46049  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46031:46058  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46050:46057  spender */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46031:46058  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46031:46066  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46080:46089  emitEvent */\n      dup1\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46076:46152  if (emitEvent) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46126:46133  spender */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46110:46141  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46119:46124  owner */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46110:46141  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46135:46140  value */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46110:46141  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_285\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46076:46152  if (emitEvent) {... */\n    tag_284:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":45726:46158  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46440:46916  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_261:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46539:46563  uint256 currentAllowance */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46566:46591  allowance(owner, spender) */\n      tag_287\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46576:46581  owner */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46583:46590  spender */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46566:46575  allowance */\n      tag_138\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46566:46591  allowance(owner, spender) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46539:46591  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46624:46641  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46605:46621  currentAllowance */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46605:46641  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46601:46910  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46680:46685  value */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46661:46677  currentAllowance */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46661:46685  currentAllowance < value */\n      lt\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46657:46787  if (currentAllowance < value) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46739:46746  spender */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46748:46764  currentAllowance */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46766:46771  value */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46712:46772  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46657:46787  if (currentAllowance < value) {... */\n    tag_289:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46828:46885  _approve(owner, spender, currentAllowance - value, false) */\n      tag_292\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46837:46842  owner */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46844:46851  spender */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46872:46877  value */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46853:46869  currentAllowance */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46853:46877  currentAllowance - value */\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46879:46884  false */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46828:46836  _approve */\n      tag_257\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46828:46885  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46601:46910  if (currentAllowance < type(uint256).max) {... */\n    tag_288:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46529:46916  {... */\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":46440:46916  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41418:41718  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_263:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41517:41518  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41501:41519  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41501:41505  from */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41501:41519  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41497:41583  if (from == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41569:41570  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41542:41572  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41497:41583  if (from == address(0)) {... */\n    tag_294:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41610:41611  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41596:41612  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41596:41598  to */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41596:41612  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41592:41678  if (to == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41664:41665  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41635:41667  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41592:41678  if (to == address(0)) {... */\n    tag_296:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41687:41711  _update(from, to, value) */\n      tag_298\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41695:41699  from */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41701:41703  to */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41705:41710  value */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41687:41694  _update */\n      tag_274\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41687:41711  _update(from, to, value) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":41418:41718  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42033:43140  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_274:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42138:42139  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42122:42140  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42122:42126  from */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42122:42140  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42118:42658  if (from == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42274:42279  value */\n      dup1\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42258:42270  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42258:42279  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_301\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_301:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42118:42658  if (from == address(0)) {... */\n      jump(tag_302)\n    tag_300:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42310:42329  uint256 fromBalance */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42332:42341  _balances */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42332:42347  _balances[from] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42342:42346  from */\n      dup6\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42332:42347  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42310:42347  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42379:42384  value */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42365:42376  fromBalance */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42365:42384  fromBalance < value */\n      lt\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42361:42476  if (fromBalance < value) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42436:42440  from */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42442:42453  fromBalance */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42455:42460  value */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42411:42461  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42361:42476  if (fromBalance < value) {... */\n    tag_303:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42628:42633  value */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42614:42625  fromBalance */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42614:42633  fromBalance - value */\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42605  _balances */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42611  _balances[from] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42606:42610  from */\n      dup7\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42611  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42596:42633  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42296:42658  {... */\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42118:42658  if (from == address(0)) {... */\n    tag_302:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42686:42687  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42672:42688  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42672:42674  to */\n      dup3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42672:42688  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42668:43093  if (to == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42851:42856  value */\n      dup1\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42835:42847  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42835:42856  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42668:43093  if (to == address(0)) {... */\n      jump(tag_306)\n    tag_305:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43063:43068  value */\n      dup1\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43055  _balances */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43059  _balances[to] */\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43056:43058  to */\n      dup5\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43059  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43046:43068  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42668:43093  if (to == address(0)) {... */\n    tag_306:\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43123:43125  to */\n      dup2\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43108:43133  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43117:43121  from */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43108:43133  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43127:43132  value */\n      dup4\n        /* \"contracts/CCK/CCKToken_flattened.sol\":43108:43133  Transfer(from, to, value) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CCKToken_flattened.sol\":42033:43140  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_308:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_309:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_310:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_311:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_312:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_361\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_308\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":711:782   */\n      tag_362\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_309\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_363\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_310\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":881:910   */\n      tag_364\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_311\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_45:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_366\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_312\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_314:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_316:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_317:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_372\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_316\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_318:\n        /* \"#utility.yul\":1876:1900   */\n      tag_374\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_317\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_375:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_319:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_377\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_318\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_320:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_321:\n        /* \"#utility.yul\":2232:2256   */\n      tag_380\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_320\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_381:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_322:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_383\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_321\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_48:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_386\n      tag_314\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2525:2644   */\n    tag_385:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_387\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_319\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_388\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_322\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_323:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_324:\n        /* \"#utility.yul\":3089:3110   */\n      tag_391\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_323\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_51:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_393\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_324\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_54:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_396\n      tag_314\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3415:3534   */\n    tag_395:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_397\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_319\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_325:\n        /* \"#utility.yul\":3761:3785   */\n      tag_399\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_320\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_57:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_401\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_325\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4144   */\n    tag_326:\n        /* \"#utility.yul\":4113:4137   */\n      tag_403\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4113:4137   */\n      tag_317\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4101:4138   */\n      mstore\n        /* \"#utility.yul\":4026:4144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4372   */\n    tag_61:\n        /* \"#utility.yul\":4243:4247   */\n      0x00\n        /* \"#utility.yul\":4281:4283   */\n      0x20\n        /* \"#utility.yul\":4270:4279   */\n      dup3\n        /* \"#utility.yul\":4266:4284   */\n      add\n        /* \"#utility.yul\":4258:4284   */\n      swap1\n      pop\n        /* \"#utility.yul\":4294:4365   */\n      tag_405\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4294:4365   */\n      tag_326\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4150:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4997   */\n    tag_71:\n        /* \"#utility.yul\":4455:4461   */\n      0x00\n        /* \"#utility.yul\":4463:4469   */\n      0x00\n        /* \"#utility.yul\":4471:4477   */\n      0x00\n        /* \"#utility.yul\":4520:4522   */\n      0x60\n        /* \"#utility.yul\":4508:4517   */\n      dup5\n        /* \"#utility.yul\":4499:4506   */\n      dup7\n        /* \"#utility.yul\":4495:4518   */\n      sub\n        /* \"#utility.yul\":4491:4523   */\n      slt\n        /* \"#utility.yul\":4488:4607   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4526:4605   */\n      tag_408\n      tag_314\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4488:4607   */\n    tag_407:\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4671:4724   */\n      tag_409\n        /* \"#utility.yul\":4716:4723   */\n      dup7\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4696:4705   */\n      dup8\n        /* \"#utility.yul\":4692:4714   */\n      add\n        /* \"#utility.yul\":4671:4724   */\n      tag_319\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4661:4724   */\n      swap4\n      pop\n        /* \"#utility.yul\":4617:4734   */\n      pop\n        /* \"#utility.yul\":4773:4775   */\n      0x20\n        /* \"#utility.yul\":4799:4852   */\n      tag_410\n        /* \"#utility.yul\":4844:4851   */\n      dup7\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      dup8\n        /* \"#utility.yul\":4820:4842   */\n      add\n        /* \"#utility.yul\":4799:4852   */\n      tag_319\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4789:4852   */\n      swap3\n      pop\n        /* \"#utility.yul\":4744:4862   */\n      pop\n        /* \"#utility.yul\":4901:4903   */\n      0x40\n        /* \"#utility.yul\":4927:4980   */\n      tag_411\n        /* \"#utility.yul\":4972:4979   */\n      dup7\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup8\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_322\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4917:4980   */\n      swap2\n      pop\n        /* \"#utility.yul\":4872:4990   */\n      pop\n        /* \"#utility.yul\":4378:4997   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5003:5089   */\n    tag_327:\n        /* \"#utility.yul\":5038:5045   */\n      0x00\n        /* \"#utility.yul\":5078:5082   */\n      0xff\n        /* \"#utility.yul\":5071:5076   */\n      dup3\n        /* \"#utility.yul\":5067:5083   */\n      and\n        /* \"#utility.yul\":5056:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5095:5207   */\n    tag_328:\n        /* \"#utility.yul\":5178:5200   */\n      tag_414\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5178:5200   */\n      tag_327\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5166:5201   */\n      mstore\n        /* \"#utility.yul\":5095:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5427   */\n    tag_80:\n        /* \"#utility.yul\":5302:5306   */\n      0x00\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5329:5338   */\n      dup3\n        /* \"#utility.yul\":5325:5343   */\n      add\n        /* \"#utility.yul\":5317:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":5353:5420   */\n      tag_416\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5353:5420   */\n      tag_328\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5213:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_137:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_419\n      tag_314\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5526:5645   */\n    tag_418:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_420\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_319\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_421\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_319\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_329:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_158:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_424:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_426\n      tag_329\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6329:6413   */\n    tag_425:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6591   */\n    tag_330:\n        /* \"#utility.yul\":6565:6583   */\n      0x53656e6465722069732066726f7a656e00000000000000000000000000000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6584   */\n      mstore\n        /* \"#utility.yul\":6425:6591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6597:6963   */\n    tag_331:\n        /* \"#utility.yul\":6739:6742   */\n      0x00\n        /* \"#utility.yul\":6760:6827   */\n      tag_429\n        /* \"#utility.yul\":6824:6826   */\n      0x10\n        /* \"#utility.yul\":6819:6822   */\n      dup4\n        /* \"#utility.yul\":6760:6827   */\n      tag_309\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6753:6827   */\n      swap2\n      pop\n        /* \"#utility.yul\":6836:6929   */\n      tag_430\n        /* \"#utility.yul\":6925:6928   */\n      dup3\n        /* \"#utility.yul\":6836:6929   */\n      tag_330\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6954:6956   */\n      0x20\n        /* \"#utility.yul\":6949:6952   */\n      dup3\n        /* \"#utility.yul\":6945:6957   */\n      add\n        /* \"#utility.yul\":6938:6957   */\n      swap1\n      pop\n        /* \"#utility.yul\":6597:6963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6969:7388   */\n    tag_176:\n        /* \"#utility.yul\":7135:7139   */\n      0x00\n        /* \"#utility.yul\":7173:7175   */\n      0x20\n        /* \"#utility.yul\":7162:7171   */\n      dup3\n        /* \"#utility.yul\":7158:7176   */\n      add\n        /* \"#utility.yul\":7150:7176   */\n      swap1\n      pop\n        /* \"#utility.yul\":7222:7231   */\n      dup2\n        /* \"#utility.yul\":7216:7220   */\n      dup2\n        /* \"#utility.yul\":7212:7232   */\n      sub\n        /* \"#utility.yul\":7208:7209   */\n      0x00\n        /* \"#utility.yul\":7197:7206   */\n      dup4\n        /* \"#utility.yul\":7193:7210   */\n      add\n        /* \"#utility.yul\":7186:7233   */\n      mstore\n        /* \"#utility.yul\":7250:7381   */\n      tag_432\n        /* \"#utility.yul\":7376:7380   */\n      dup2\n        /* \"#utility.yul\":7250:7381   */\n      tag_331\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7242:7381   */\n      swap1\n      pop\n        /* \"#utility.yul\":6969:7388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7394:7569   */\n    tag_332:\n        /* \"#utility.yul\":7534:7561   */\n      0x416d6f756e74206d75737420626520616e20696e746567657200000000000000\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7522:7528   */\n      dup3\n        /* \"#utility.yul\":7518:7532   */\n      add\n        /* \"#utility.yul\":7511:7562   */\n      mstore\n        /* \"#utility.yul\":7394:7569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7575:7941   */\n    tag_333:\n        /* \"#utility.yul\":7717:7720   */\n      0x00\n        /* \"#utility.yul\":7738:7805   */\n      tag_435\n        /* \"#utility.yul\":7802:7804   */\n      0x19\n        /* \"#utility.yul\":7797:7800   */\n      dup4\n        /* \"#utility.yul\":7738:7805   */\n      tag_309\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7731:7805   */\n      swap2\n      pop\n        /* \"#utility.yul\":7814:7907   */\n      tag_436\n        /* \"#utility.yul\":7903:7906   */\n      dup3\n        /* \"#utility.yul\":7814:7907   */\n      tag_332\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"#utility.yul\":7927:7930   */\n      dup3\n        /* \"#utility.yul\":7923:7935   */\n      add\n        /* \"#utility.yul\":7916:7935   */\n      swap1\n      pop\n        /* \"#utility.yul\":7575:7941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7947:8366   */\n    tag_179:\n        /* \"#utility.yul\":8113:8117   */\n      0x00\n        /* \"#utility.yul\":8151:8153   */\n      0x20\n        /* \"#utility.yul\":8140:8149   */\n      dup3\n        /* \"#utility.yul\":8136:8154   */\n      add\n        /* \"#utility.yul\":8128:8154   */\n      swap1\n      pop\n        /* \"#utility.yul\":8200:8209   */\n      dup2\n        /* \"#utility.yul\":8194:8198   */\n      dup2\n        /* \"#utility.yul\":8190:8210   */\n      sub\n        /* \"#utility.yul\":8186:8187   */\n      0x00\n        /* \"#utility.yul\":8175:8184   */\n      dup4\n        /* \"#utility.yul\":8171:8188   */\n      add\n        /* \"#utility.yul\":8164:8211   */\n      mstore\n        /* \"#utility.yul\":8228:8359   */\n      tag_438\n        /* \"#utility.yul\":8354:8358   */\n      dup2\n        /* \"#utility.yul\":8228:8359   */\n      tag_333\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8220:8359   */\n      swap1\n      pop\n        /* \"#utility.yul\":7947:8366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8372:8537   */\n    tag_334:\n        /* \"#utility.yul\":8512:8529   */\n      0x4e6f742077686974656c69737465640000000000000000000000000000000000\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8500:8506   */\n      dup3\n        /* \"#utility.yul\":8496:8510   */\n      add\n        /* \"#utility.yul\":8489:8530   */\n      mstore\n        /* \"#utility.yul\":8372:8537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8543:8909   */\n    tag_335:\n        /* \"#utility.yul\":8685:8688   */\n      0x00\n        /* \"#utility.yul\":8706:8773   */\n      tag_441\n        /* \"#utility.yul\":8770:8772   */\n      0x0f\n        /* \"#utility.yul\":8765:8768   */\n      dup4\n        /* \"#utility.yul\":8706:8773   */\n      tag_309\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8699:8773   */\n      swap2\n      pop\n        /* \"#utility.yul\":8782:8875   */\n      tag_442\n        /* \"#utility.yul\":8871:8874   */\n      dup3\n        /* \"#utility.yul\":8782:8875   */\n      tag_334\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8900:8902   */\n      0x20\n        /* \"#utility.yul\":8895:8898   */\n      dup3\n        /* \"#utility.yul\":8891:8903   */\n      add\n        /* \"#utility.yul\":8884:8903   */\n      swap1\n      pop\n        /* \"#utility.yul\":8543:8909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8915:9334   */\n    tag_189:\n        /* \"#utility.yul\":9081:9085   */\n      0x00\n        /* \"#utility.yul\":9119:9121   */\n      0x20\n        /* \"#utility.yul\":9108:9117   */\n      dup3\n        /* \"#utility.yul\":9104:9122   */\n      add\n        /* \"#utility.yul\":9096:9122   */\n      swap1\n      pop\n        /* \"#utility.yul\":9168:9177   */\n      dup2\n        /* \"#utility.yul\":9162:9166   */\n      dup2\n        /* \"#utility.yul\":9158:9178   */\n      sub\n        /* \"#utility.yul\":9154:9155   */\n      0x00\n        /* \"#utility.yul\":9143:9152   */\n      dup4\n        /* \"#utility.yul\":9139:9156   */\n      add\n        /* \"#utility.yul\":9132:9179   */\n      mstore\n        /* \"#utility.yul\":9196:9327   */\n      tag_444\n        /* \"#utility.yul\":9322:9326   */\n      dup2\n        /* \"#utility.yul\":9196:9327   */\n      tag_335\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9188:9327   */\n      swap1\n      pop\n        /* \"#utility.yul\":8915:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9520   */\n    tag_336:\n        /* \"#utility.yul\":9388:9465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9385:9386   */\n      0x00\n        /* \"#utility.yul\":9378:9466   */\n      mstore\n        /* \"#utility.yul\":9485:9489   */\n      0x11\n        /* \"#utility.yul\":9482:9483   */\n      0x04\n        /* \"#utility.yul\":9475:9490   */\n      mstore\n        /* \"#utility.yul\":9509:9513   */\n      0x24\n        /* \"#utility.yul\":9506:9507   */\n      0x00\n        /* \"#utility.yul\":9499:9514   */\n      revert\n        /* \"#utility.yul\":9526:9717   */\n    tag_191:\n        /* \"#utility.yul\":9566:9569   */\n      0x00\n        /* \"#utility.yul\":9585:9605   */\n      tag_447\n        /* \"#utility.yul\":9603:9604   */\n      dup3\n        /* \"#utility.yul\":9585:9605   */\n      tag_320\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9580:9605   */\n      swap2\n      pop\n        /* \"#utility.yul\":9619:9639   */\n      tag_448\n        /* \"#utility.yul\":9637:9638   */\n      dup4\n        /* \"#utility.yul\":9619:9639   */\n      tag_320\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9614:9639   */\n      swap3\n      pop\n        /* \"#utility.yul\":9662:9663   */\n      dup3\n        /* \"#utility.yul\":9659:9660   */\n      dup3\n        /* \"#utility.yul\":9655:9664   */\n      add\n        /* \"#utility.yul\":9648:9664   */\n      swap1\n      pop\n        /* \"#utility.yul\":9683:9686   */\n      dup1\n        /* \"#utility.yul\":9680:9681   */\n      dup3\n        /* \"#utility.yul\":9677:9687   */\n      gt\n        /* \"#utility.yul\":9674:9710   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9690:9708   */\n      tag_450\n      tag_336\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9674:9710   */\n    tag_449:\n        /* \"#utility.yul\":9526:9717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9723:9894   */\n    tag_337:\n        /* \"#utility.yul\":9863:9886   */\n      0x546f74616c20737570706c792065786365656465640000000000000000000000\n        /* \"#utility.yul\":9859:9860   */\n      0x00\n        /* \"#utility.yul\":9851:9857   */\n      dup3\n        /* \"#utility.yul\":9847:9861   */\n      add\n        /* \"#utility.yul\":9840:9887   */\n      mstore\n        /* \"#utility.yul\":9723:9894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9900:10266   */\n    tag_338:\n        /* \"#utility.yul\":10042:10045   */\n      0x00\n        /* \"#utility.yul\":10063:10130   */\n      tag_453\n        /* \"#utility.yul\":10127:10129   */\n      0x15\n        /* \"#utility.yul\":10122:10125   */\n      dup4\n        /* \"#utility.yul\":10063:10130   */\n      tag_309\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10056:10130   */\n      swap2\n      pop\n        /* \"#utility.yul\":10139:10232   */\n      tag_454\n        /* \"#utility.yul\":10228:10231   */\n      dup3\n        /* \"#utility.yul\":10139:10232   */\n      tag_337\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10257:10259   */\n      0x20\n        /* \"#utility.yul\":10252:10255   */\n      dup3\n        /* \"#utility.yul\":10248:10260   */\n      add\n        /* \"#utility.yul\":10241:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":9900:10266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10272:10691   */\n    tag_194:\n        /* \"#utility.yul\":10438:10442   */\n      0x00\n        /* \"#utility.yul\":10476:10478   */\n      0x20\n        /* \"#utility.yul\":10465:10474   */\n      dup3\n        /* \"#utility.yul\":10461:10479   */\n      add\n        /* \"#utility.yul\":10453:10479   */\n      swap1\n      pop\n        /* \"#utility.yul\":10525:10534   */\n      dup2\n        /* \"#utility.yul\":10519:10523   */\n      dup2\n        /* \"#utility.yul\":10515:10535   */\n      sub\n        /* \"#utility.yul\":10511:10512   */\n      0x00\n        /* \"#utility.yul\":10500:10509   */\n      dup4\n        /* \"#utility.yul\":10496:10513   */\n      add\n        /* \"#utility.yul\":10489:10536   */\n      mstore\n        /* \"#utility.yul\":10553:10684   */\n      tag_456\n        /* \"#utility.yul\":10679:10683   */\n      dup2\n        /* \"#utility.yul\":10553:10684   */\n      tag_338\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10545:10684   */\n      swap1\n      pop\n        /* \"#utility.yul\":10272:10691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10697:10891   */\n    tag_230:\n        /* \"#utility.yul\":10737:10741   */\n      0x00\n        /* \"#utility.yul\":10757:10777   */\n      tag_458\n        /* \"#utility.yul\":10775:10776   */\n      dup3\n        /* \"#utility.yul\":10757:10777   */\n      tag_320\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10752:10777   */\n      swap2\n      pop\n        /* \"#utility.yul\":10791:10811   */\n      tag_459\n        /* \"#utility.yul\":10809:10810   */\n      dup4\n        /* \"#utility.yul\":10791:10811   */\n      tag_320\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10786:10811   */\n      swap3\n      pop\n        /* \"#utility.yul\":10835:10836   */\n      dup3\n        /* \"#utility.yul\":10832:10833   */\n      dup3\n        /* \"#utility.yul\":10828:10837   */\n      sub\n        /* \"#utility.yul\":10820:10837   */\n      swap1\n      pop\n        /* \"#utility.yul\":10859:10860   */\n      dup2\n        /* \"#utility.yul\":10853:10857   */\n      dup2\n        /* \"#utility.yul\":10850:10861   */\n      gt\n        /* \"#utility.yul\":10847:10884   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10864:10882   */\n      tag_461\n      tag_336\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10847:10884   */\n    tag_460:\n        /* \"#utility.yul\":10697:10891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10897:11019   */\n    tag_339:\n        /* \"#utility.yul\":10970:10994   */\n      tag_463\n        /* \"#utility.yul\":10988:10993   */\n      dup2\n        /* \"#utility.yul\":10970:10994   */\n      tag_316\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10963:10968   */\n      dup2\n        /* \"#utility.yul\":10960:10995   */\n      eq\n        /* \"#utility.yul\":10950:11013   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":11009:11010   */\n      0x00\n        /* \"#utility.yul\":11006:11007   */\n      0x00\n        /* \"#utility.yul\":10999:11011   */\n      revert\n        /* \"#utility.yul\":10950:11013   */\n    tag_464:\n        /* \"#utility.yul\":10897:11019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11168   */\n    tag_340:\n        /* \"#utility.yul\":11082:11087   */\n      0x00\n        /* \"#utility.yul\":11113:11119   */\n      dup2\n        /* \"#utility.yul\":11107:11120   */\n      mload\n        /* \"#utility.yul\":11098:11120   */\n      swap1\n      pop\n        /* \"#utility.yul\":11129:11162   */\n      tag_466\n        /* \"#utility.yul\":11156:11161   */\n      dup2\n        /* \"#utility.yul\":11129:11162   */\n      tag_339\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11025:11168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11174:11264   */\n    tag_341:\n        /* \"#utility.yul\":11209:11216   */\n      0x00\n        /* \"#utility.yul\":11252:11257   */\n      dup2\n        /* \"#utility.yul\":11249:11250   */\n      0x02\n        /* \"#utility.yul\":11238:11258   */\n      signextend\n        /* \"#utility.yul\":11227:11258   */\n      swap1\n      pop\n        /* \"#utility.yul\":11174:11264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11270:11388   */\n    tag_342:\n        /* \"#utility.yul\":11341:11363   */\n      tag_469\n        /* \"#utility.yul\":11357:11362   */\n      dup2\n        /* \"#utility.yul\":11341:11363   */\n      tag_341\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11334:11339   */\n      dup2\n        /* \"#utility.yul\":11331:11364   */\n      eq\n        /* \"#utility.yul\":11321:11382   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":11378:11379   */\n      0x00\n        /* \"#utility.yul\":11375:11376   */\n      0x00\n        /* \"#utility.yul\":11368:11380   */\n      revert\n        /* \"#utility.yul\":11321:11382   */\n    tag_470:\n        /* \"#utility.yul\":11270:11388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11533   */\n    tag_343:\n        /* \"#utility.yul\":11449:11454   */\n      0x00\n        /* \"#utility.yul\":11480:11486   */\n      dup2\n        /* \"#utility.yul\":11474:11487   */\n      mload\n        /* \"#utility.yul\":11465:11487   */\n      swap1\n      pop\n        /* \"#utility.yul\":11496:11527   */\n      tag_472\n        /* \"#utility.yul\":11521:11526   */\n      dup2\n        /* \"#utility.yul\":11496:11527   */\n      tag_342\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11394:11533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11628   */\n    tag_344:\n        /* \"#utility.yul\":11575:11582   */\n      0x00\n        /* \"#utility.yul\":11615:11621   */\n      0xffff\n        /* \"#utility.yul\":11608:11613   */\n      dup3\n        /* \"#utility.yul\":11604:11622   */\n      and\n        /* \"#utility.yul\":11593:11622   */\n      swap1\n      pop\n        /* \"#utility.yul\":11539:11628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11634:11754   */\n    tag_345:\n        /* \"#utility.yul\":11706:11729   */\n      tag_475\n        /* \"#utility.yul\":11723:11728   */\n      dup2\n        /* \"#utility.yul\":11706:11729   */\n      tag_344\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11699:11704   */\n      dup2\n        /* \"#utility.yul\":11696:11730   */\n      eq\n        /* \"#utility.yul\":11686:11748   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":11744:11745   */\n      0x00\n        /* \"#utility.yul\":11741:11742   */\n      0x00\n        /* \"#utility.yul\":11734:11746   */\n      revert\n        /* \"#utility.yul\":11686:11748   */\n    tag_476:\n        /* \"#utility.yul\":11634:11754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11760:11901   */\n    tag_346:\n        /* \"#utility.yul\":11816:11821   */\n      0x00\n        /* \"#utility.yul\":11847:11853   */\n      dup2\n        /* \"#utility.yul\":11841:11854   */\n      mload\n        /* \"#utility.yul\":11832:11854   */\n      swap1\n      pop\n        /* \"#utility.yul\":11863:11895   */\n      tag_478\n        /* \"#utility.yul\":11889:11894   */\n      dup2\n        /* \"#utility.yul\":11863:11895   */\n      tag_345\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11760:11901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11907:12025   */\n    tag_347:\n        /* \"#utility.yul\":11978:12000   */\n      tag_480\n        /* \"#utility.yul\":11994:11999   */\n      dup2\n        /* \"#utility.yul\":11978:12000   */\n      tag_327\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11971:11976   */\n      dup2\n        /* \"#utility.yul\":11968:12001   */\n      eq\n        /* \"#utility.yul\":11958:12019   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":12015:12016   */\n      0x00\n        /* \"#utility.yul\":12012:12013   */\n      0x00\n        /* \"#utility.yul\":12005:12017   */\n      revert\n        /* \"#utility.yul\":11958:12019   */\n    tag_481:\n        /* \"#utility.yul\":11907:12025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12031:12170   */\n    tag_348:\n        /* \"#utility.yul\":12086:12091   */\n      0x00\n        /* \"#utility.yul\":12117:12123   */\n      dup2\n        /* \"#utility.yul\":12111:12124   */\n      mload\n        /* \"#utility.yul\":12102:12124   */\n      swap1\n      pop\n        /* \"#utility.yul\":12133:12164   */\n      tag_483\n        /* \"#utility.yul\":12158:12163   */\n      dup2\n        /* \"#utility.yul\":12133:12164   */\n      tag_347\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12031:12170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12176:12292   */\n    tag_349:\n        /* \"#utility.yul\":12246:12267   */\n      tag_485\n        /* \"#utility.yul\":12261:12266   */\n      dup2\n        /* \"#utility.yul\":12246:12267   */\n      tag_323\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12239:12244   */\n      dup2\n        /* \"#utility.yul\":12236:12268   */\n      eq\n        /* \"#utility.yul\":12226:12286   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":12282:12283   */\n      0x00\n        /* \"#utility.yul\":12279:12280   */\n      0x00\n        /* \"#utility.yul\":12272:12284   */\n      revert\n        /* \"#utility.yul\":12226:12286   */\n    tag_486:\n        /* \"#utility.yul\":12176:12292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12298:12435   */\n    tag_350:\n        /* \"#utility.yul\":12352:12357   */\n      0x00\n        /* \"#utility.yul\":12383:12389   */\n      dup2\n        /* \"#utility.yul\":12377:12390   */\n      mload\n        /* \"#utility.yul\":12368:12390   */\n      swap1\n      pop\n        /* \"#utility.yul\":12399:12429   */\n      tag_488\n        /* \"#utility.yul\":12423:12428   */\n      dup2\n        /* \"#utility.yul\":12399:12429   */\n      tag_349\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12298:12435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12441:13712   */\n    tag_243:\n        /* \"#utility.yul\":12555:12561   */\n      0x00\n        /* \"#utility.yul\":12563:12569   */\n      0x00\n        /* \"#utility.yul\":12571:12577   */\n      0x00\n        /* \"#utility.yul\":12579:12585   */\n      0x00\n        /* \"#utility.yul\":12587:12593   */\n      0x00\n        /* \"#utility.yul\":12595:12601   */\n      0x00\n        /* \"#utility.yul\":12603:12609   */\n      0x00\n        /* \"#utility.yul\":12652:12655   */\n      0xe0\n        /* \"#utility.yul\":12640:12649   */\n      dup9\n        /* \"#utility.yul\":12631:12638   */\n      dup11\n        /* \"#utility.yul\":12627:12650   */\n      sub\n        /* \"#utility.yul\":12623:12656   */\n      slt\n        /* \"#utility.yul\":12620:12740   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12659:12738   */\n      tag_491\n      tag_314\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12620:12740   */\n    tag_490:\n        /* \"#utility.yul\":12779:12780   */\n      0x00\n        /* \"#utility.yul\":12804:12868   */\n      tag_492\n        /* \"#utility.yul\":12860:12867   */\n      dup11\n        /* \"#utility.yul\":12851:12857   */\n      dup3\n        /* \"#utility.yul\":12840:12849   */\n      dup12\n        /* \"#utility.yul\":12836:12858   */\n      add\n        /* \"#utility.yul\":12804:12868   */\n      tag_340\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12794:12868   */\n      swap8\n      pop\n        /* \"#utility.yul\":12750:12878   */\n      pop\n        /* \"#utility.yul\":12917:12919   */\n      0x20\n        /* \"#utility.yul\":12943:13005   */\n      tag_493\n        /* \"#utility.yul\":12997:13004   */\n      dup11\n        /* \"#utility.yul\":12988:12994   */\n      dup3\n        /* \"#utility.yul\":12977:12986   */\n      dup12\n        /* \"#utility.yul\":12973:12995   */\n      add\n        /* \"#utility.yul\":12943:13005   */\n      tag_343\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12933:13005   */\n      swap7\n      pop\n        /* \"#utility.yul\":12888:13015   */\n      pop\n        /* \"#utility.yul\":13054:13056   */\n      0x40\n        /* \"#utility.yul\":13080:13143   */\n      tag_494\n        /* \"#utility.yul\":13135:13142   */\n      dup11\n        /* \"#utility.yul\":13126:13132   */\n      dup3\n        /* \"#utility.yul\":13115:13124   */\n      dup12\n        /* \"#utility.yul\":13111:13133   */\n      add\n        /* \"#utility.yul\":13080:13143   */\n      tag_346\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13070:13143   */\n      swap6\n      pop\n        /* \"#utility.yul\":13025:13153   */\n      pop\n        /* \"#utility.yul\":13192:13194   */\n      0x60\n        /* \"#utility.yul\":13218:13281   */\n      tag_495\n        /* \"#utility.yul\":13273:13280   */\n      dup11\n        /* \"#utility.yul\":13264:13270   */\n      dup3\n        /* \"#utility.yul\":13253:13262   */\n      dup12\n        /* \"#utility.yul\":13249:13271   */\n      add\n        /* \"#utility.yul\":13218:13281   */\n      tag_346\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13208:13281   */\n      swap5\n      pop\n        /* \"#utility.yul\":13163:13291   */\n      pop\n        /* \"#utility.yul\":13330:13333   */\n      0x80\n        /* \"#utility.yul\":13357:13420   */\n      tag_496\n        /* \"#utility.yul\":13412:13419   */\n      dup11\n        /* \"#utility.yul\":13403:13409   */\n      dup3\n        /* \"#utility.yul\":13392:13401   */\n      dup12\n        /* \"#utility.yul\":13388:13410   */\n      add\n        /* \"#utility.yul\":13357:13420   */\n      tag_346\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13347:13420   */\n      swap4\n      pop\n        /* \"#utility.yul\":13301:13430   */\n      pop\n        /* \"#utility.yul\":13469:13472   */\n      0xa0\n        /* \"#utility.yul\":13496:13558   */\n      tag_497\n        /* \"#utility.yul\":13550:13557   */\n      dup11\n        /* \"#utility.yul\":13541:13547   */\n      dup3\n        /* \"#utility.yul\":13530:13539   */\n      dup12\n        /* \"#utility.yul\":13526:13548   */\n      add\n        /* \"#utility.yul\":13496:13558   */\n      tag_348\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13486:13558   */\n      swap3\n      pop\n        /* \"#utility.yul\":13440:13568   */\n      pop\n        /* \"#utility.yul\":13607:13610   */\n      0xc0\n        /* \"#utility.yul\":13634:13695   */\n      tag_498\n        /* \"#utility.yul\":13687:13694   */\n      dup11\n        /* \"#utility.yul\":13678:13684   */\n      dup3\n        /* \"#utility.yul\":13667:13676   */\n      dup12\n        /* \"#utility.yul\":13663:13685   */\n      add\n        /* \"#utility.yul\":13634:13695   */\n      tag_350\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13624:13695   */\n      swap2\n      pop\n        /* \"#utility.yul\":13578:13705   */\n      pop\n        /* \"#utility.yul\":12441:13712   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13718:13820   */\n    tag_351:\n        /* \"#utility.yul\":13760:13768   */\n      0x00\n        /* \"#utility.yul\":13807:13812   */\n      dup2\n        /* \"#utility.yul\":13804:13805   */\n      0x01\n        /* \"#utility.yul\":13800:13813   */\n      shr\n        /* \"#utility.yul\":13779:13813   */\n      swap1\n      pop\n        /* \"#utility.yul\":13718:13820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13826:14674   */\n    tag_352:\n        /* \"#utility.yul\":13887:13892   */\n      0x00\n        /* \"#utility.yul\":13894:13898   */\n      0x00\n        /* \"#utility.yul\":13918:13924   */\n      dup3\n        /* \"#utility.yul\":13909:13924   */\n      swap2\n      pop\n        /* \"#utility.yul\":13942:13947   */\n      dup4\n        /* \"#utility.yul\":13933:13947   */\n      swap1\n      pop\n        /* \"#utility.yul\":13956:14668   */\n    tag_501:\n        /* \"#utility.yul\":13977:13978   */\n      0x01\n        /* \"#utility.yul\":13967:13975   */\n      dup6\n        /* \"#utility.yul\":13964:13979   */\n      gt\n        /* \"#utility.yul\":13956:14668   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":14072:14076   */\n      dup1\n        /* \"#utility.yul\":14067:14070   */\n      dup7\n        /* \"#utility.yul\":14063:14077   */\n      div\n        /* \"#utility.yul\":14057:14061   */\n      dup2\n        /* \"#utility.yul\":14054:14078   */\n      gt\n        /* \"#utility.yul\":14051:14101   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":14081:14099   */\n      tag_505\n      tag_336\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14051:14101   */\n    tag_504:\n        /* \"#utility.yul\":14131:14132   */\n      0x01\n        /* \"#utility.yul\":14121:14129   */\n      dup6\n        /* \"#utility.yul\":14117:14133   */\n      and\n        /* \"#utility.yul\":14114:14565   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":14546:14550   */\n      dup1\n        /* \"#utility.yul\":14539:14544   */\n      dup3\n        /* \"#utility.yul\":14535:14551   */\n      mul\n        /* \"#utility.yul\":14526:14551   */\n      swap2\n      pop\n        /* \"#utility.yul\":14114:14565   */\n    tag_506:\n        /* \"#utility.yul\":14596:14600   */\n      dup1\n        /* \"#utility.yul\":14590:14594   */\n      dup2\n        /* \"#utility.yul\":14586:14601   */\n      mul\n        /* \"#utility.yul\":14578:14601   */\n      swap1\n      pop\n        /* \"#utility.yul\":14626:14658   */\n      tag_507\n        /* \"#utility.yul\":14649:14657   */\n      dup6\n        /* \"#utility.yul\":14626:14658   */\n      tag_351\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14614:14658   */\n      swap5\n      pop\n        /* \"#utility.yul\":13956:14668   */\n      jump(tag_501)\n    tag_503:\n        /* \"#utility.yul\":13826:14674   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14680:15753   */\n    tag_353:\n        /* \"#utility.yul\":14734:14739   */\n      0x00\n        /* \"#utility.yul\":14925:14933   */\n      dup3\n        /* \"#utility.yul\":14915:14955   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":14946:14947   */\n      0x01\n        /* \"#utility.yul\":14937:14947   */\n      swap1\n      pop\n        /* \"#utility.yul\":14948:14953   */\n      jump(tag_508)\n        /* \"#utility.yul\":14915:14955   */\n    tag_509:\n        /* \"#utility.yul\":14974:14978   */\n      dup2\n        /* \"#utility.yul\":14964:15000   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":14991:14992   */\n      0x00\n        /* \"#utility.yul\":14982:14992   */\n      swap1\n      pop\n        /* \"#utility.yul\":14993:14998   */\n      jump(tag_508)\n        /* \"#utility.yul\":14964:15000   */\n    tag_510:\n        /* \"#utility.yul\":15060:15064   */\n      dup2\n        /* \"#utility.yul\":15108:15109   */\n      0x01\n        /* \"#utility.yul\":15103:15130   */\n      dup2\n      eq\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15144:15145   */\n      0x02\n        /* \"#utility.yul\":15139:15330   */\n      dup2\n      eq\n      tag_513\n      jumpi\n        /* \"#utility.yul\":15053:15330   */\n      jump(tag_511)\n        /* \"#utility.yul\":15103:15130   */\n    tag_512:\n        /* \"#utility.yul\":15121:15122   */\n      0x01\n        /* \"#utility.yul\":15112:15122   */\n      swap2\n      pop\n        /* \"#utility.yul\":15123:15128   */\n      pop\n      jump(tag_508)\n        /* \"#utility.yul\":15139:15330   */\n    tag_513:\n        /* \"#utility.yul\":15184:15187   */\n      0xff\n        /* \"#utility.yul\":15174:15182   */\n      dup5\n        /* \"#utility.yul\":15171:15188   */\n      gt\n        /* \"#utility.yul\":15168:15211   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":15191:15209   */\n      tag_515\n      tag_336\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15168:15211   */\n    tag_514:\n        /* \"#utility.yul\":15240:15248   */\n      dup4\n        /* \"#utility.yul\":15237:15238   */\n      0x02\n        /* \"#utility.yul\":15233:15249   */\n      exp\n        /* \"#utility.yul\":15224:15249   */\n      swap2\n      pop\n        /* \"#utility.yul\":15275:15278   */\n      dup5\n        /* \"#utility.yul\":15268:15273   */\n      dup3\n        /* \"#utility.yul\":15265:15279   */\n      gt\n        /* \"#utility.yul\":15262:15302   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":15282:15300   */\n      tag_517\n      tag_336\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15262:15302   */\n    tag_516:\n        /* \"#utility.yul\":15315:15320   */\n      pop\n      jump(tag_508)\n        /* \"#utility.yul\":15053:15330   */\n    tag_511:\n      pop\n        /* \"#utility.yul\":15439:15441   */\n      0x20\n        /* \"#utility.yul\":15429:15437   */\n      dup4\n        /* \"#utility.yul\":15426:15442   */\n      lt\n        /* \"#utility.yul\":15420:15423   */\n      0x0133\n        /* \"#utility.yul\":15414:15418   */\n      dup4\n        /* \"#utility.yul\":15411:15424   */\n      lt\n        /* \"#utility.yul\":15407:15443   */\n      and\n        /* \"#utility.yul\":15389:15391   */\n      0x4e\n        /* \"#utility.yul\":15379:15387   */\n      dup5\n        /* \"#utility.yul\":15376:15392   */\n      lt\n        /* \"#utility.yul\":15371:15373   */\n      0x0b\n        /* \"#utility.yul\":15365:15369   */\n      dup5\n        /* \"#utility.yul\":15362:15374   */\n      lt\n        /* \"#utility.yul\":15358:15393   */\n      and\n        /* \"#utility.yul\":15342:15453   */\n      or\n        /* \"#utility.yul\":15339:15585   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":15495:15503   */\n      dup3\n        /* \"#utility.yul\":15489:15493   */\n      dup3\n        /* \"#utility.yul\":15485:15504   */\n      exp\n        /* \"#utility.yul\":15476:15504   */\n      swap1\n      pop\n        /* \"#utility.yul\":15530:15533   */\n      dup4\n        /* \"#utility.yul\":15523:15528   */\n      dup2\n        /* \"#utility.yul\":15520:15534   */\n      gt\n        /* \"#utility.yul\":15517:15557   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":15537:15555   */\n      tag_520\n      tag_336\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15517:15557   */\n    tag_519:\n        /* \"#utility.yul\":15570:15575   */\n      jump(tag_508)\n        /* \"#utility.yul\":15339:15585   */\n    tag_518:\n        /* \"#utility.yul\":15610:15652   */\n      tag_521\n        /* \"#utility.yul\":15648:15651   */\n      dup5\n        /* \"#utility.yul\":15638:15646   */\n      dup5\n        /* \"#utility.yul\":15632:15636   */\n      dup5\n        /* \"#utility.yul\":15629:15630   */\n      0x01\n        /* \"#utility.yul\":15610:15652   */\n      tag_352\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15595:15652   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":15684:15688   */\n      dup2\n        /* \"#utility.yul\":15679:15682   */\n      dup5\n        /* \"#utility.yul\":15675:15689   */\n      div\n        /* \"#utility.yul\":15668:15673   */\n      dup2\n        /* \"#utility.yul\":15665:15690   */\n      gt\n        /* \"#utility.yul\":15662:15713   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":15693:15711   */\n      tag_523\n      tag_336\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15662:15713   */\n    tag_522:\n        /* \"#utility.yul\":15742:15746   */\n      dup2\n        /* \"#utility.yul\":15735:15740   */\n      dup2\n        /* \"#utility.yul\":15731:15747   */\n      mul\n        /* \"#utility.yul\":15722:15747   */\n      swap1\n      pop\n        /* \"#utility.yul\":14680:15753   */\n    tag_508:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15759:16040   */\n    tag_245:\n        /* \"#utility.yul\":15817:15822   */\n      0x00\n        /* \"#utility.yul\":15841:15864   */\n      tag_525\n        /* \"#utility.yul\":15859:15863   */\n      dup3\n        /* \"#utility.yul\":15841:15864   */\n      tag_320\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15833:15864   */\n      swap2\n      pop\n        /* \"#utility.yul\":15885:15910   */\n      tag_526\n        /* \"#utility.yul\":15901:15909   */\n      dup4\n        /* \"#utility.yul\":15885:15910   */\n      tag_327\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15873:15910   */\n      swap3\n      pop\n        /* \"#utility.yul\":15929:16033   */\n      tag_527\n        /* \"#utility.yul\":15966:16032   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15956:15964   */\n      dup5\n        /* \"#utility.yul\":15950:15954   */\n      dup5\n        /* \"#utility.yul\":15929:16033   */\n      tag_353\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15920:16033   */\n      swap1\n      pop\n        /* \"#utility.yul\":15759:16040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16046:16226   */\n    tag_354:\n        /* \"#utility.yul\":16094:16171   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16091:16092   */\n      0x00\n        /* \"#utility.yul\":16084:16172   */\n      mstore\n        /* \"#utility.yul\":16191:16195   */\n      0x12\n        /* \"#utility.yul\":16188:16189   */\n      0x04\n        /* \"#utility.yul\":16181:16196   */\n      mstore\n        /* \"#utility.yul\":16215:16219   */\n      0x24\n        /* \"#utility.yul\":16212:16213   */\n      0x00\n        /* \"#utility.yul\":16205:16220   */\n      revert\n        /* \"#utility.yul\":16232:16417   */\n    tag_247:\n        /* \"#utility.yul\":16272:16273   */\n      0x00\n        /* \"#utility.yul\":16289:16309   */\n      tag_530\n        /* \"#utility.yul\":16307:16308   */\n      dup3\n        /* \"#utility.yul\":16289:16309   */\n      tag_320\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16284:16309   */\n      swap2\n      pop\n        /* \"#utility.yul\":16323:16343   */\n      tag_531\n        /* \"#utility.yul\":16341:16342   */\n      dup4\n        /* \"#utility.yul\":16323:16343   */\n      tag_320\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16318:16343   */\n      swap3\n      pop\n        /* \"#utility.yul\":16362:16363   */\n      dup3\n        /* \"#utility.yul\":16352:16387   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":16367:16385   */\n      tag_533\n      tag_354\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16352:16387   */\n    tag_532:\n        /* \"#utility.yul\":16409:16410   */\n      dup3\n        /* \"#utility.yul\":16406:16407   */\n      dup3\n        /* \"#utility.yul\":16402:16411   */\n      div\n        /* \"#utility.yul\":16397:16411   */\n      swap1\n      pop\n        /* \"#utility.yul\":16232:16417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16423:16865   */\n    tag_291:\n        /* \"#utility.yul\":16572:16576   */\n      0x00\n        /* \"#utility.yul\":16610:16612   */\n      0x60\n        /* \"#utility.yul\":16599:16608   */\n      dup3\n        /* \"#utility.yul\":16595:16613   */\n      add\n        /* \"#utility.yul\":16587:16613   */\n      swap1\n      pop\n        /* \"#utility.yul\":16623:16694   */\n      tag_535\n        /* \"#utility.yul\":16691:16692   */\n      0x00\n        /* \"#utility.yul\":16680:16689   */\n      dup4\n        /* \"#utility.yul\":16676:16693   */\n      add\n        /* \"#utility.yul\":16667:16673   */\n      dup7\n        /* \"#utility.yul\":16623:16694   */\n      tag_326\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16704:16776   */\n      tag_536\n        /* \"#utility.yul\":16772:16774   */\n      0x20\n        /* \"#utility.yul\":16761:16770   */\n      dup4\n        /* \"#utility.yul\":16757:16775   */\n      add\n        /* \"#utility.yul\":16748:16754   */\n      dup6\n        /* \"#utility.yul\":16704:16776   */\n      tag_325\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16786:16858   */\n      tag_537\n        /* \"#utility.yul\":16854:16856   */\n      0x40\n        /* \"#utility.yul\":16843:16852   */\n      dup4\n        /* \"#utility.yul\":16839:16857   */\n      add\n        /* \"#utility.yul\":16830:16836   */\n      dup5\n        /* \"#utility.yul\":16786:16858   */\n      tag_325\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16423:16865   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205da15f9409e8692779431923aac06f9dee197195a035f0b858f90bbac4fe436064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1248": {
									"entryPoint": null,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1471": {
									"entryPoint": null,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_737": {
									"entryPoint": null,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1040": {
									"entryPoint": 753,
									"id": 1040,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1344": {
									"entryPoint": 558,
									"id": 1344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1007": {
									"entryPoint": 886,
									"id": 1007,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11812:1",
										"nodeType": "YulBlock",
										"src": "0:11812:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "505:54:1",
													"nodeType": "YulBlock",
													"src": "505:54:1",
													"statements": [
														{
															"nativeSrc": "515:38:1",
															"nodeType": "YulAssignment",
															"src": "515:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:1",
																				"nodeType": "YulLiteral",
																				"src": "540:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:1"
																		},
																		"nativeSrc": "529:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:1",
																				"nodeType": "YulLiteral",
																				"src": "549:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:1"
																		},
																		"nativeSrc": "545:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:1"
																},
																"nativeSrc": "525:28:1",
																"nodeType": "YulFunctionCall",
																"src": "525:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:1",
														"nodeType": "YulTypedName",
														"src": "488:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:1",
														"nodeType": "YulTypedName",
														"src": "498:6:1",
														"type": ""
													}
												],
												"src": "457:102:1"
											},
											{
												"body": {
													"nativeSrc": "593:152:1",
													"nodeType": "YulBlock",
													"src": "593:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:1",
																		"nodeType": "YulLiteral",
																		"src": "610:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:1",
																		"nodeType": "YulLiteral",
																		"src": "613:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:1"
																},
																"nativeSrc": "603:88:1",
																"nodeType": "YulFunctionCall",
																"src": "603:88:1"
															},
															"nativeSrc": "603:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:1",
																		"nodeType": "YulLiteral",
																		"src": "707:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:1",
																		"nodeType": "YulLiteral",
																		"src": "710:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:1"
																},
																"nativeSrc": "700:15:1",
																"nodeType": "YulFunctionCall",
																"src": "700:15:1"
															},
															"nativeSrc": "700:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:1",
																		"nodeType": "YulLiteral",
																		"src": "731:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:1",
																		"nodeType": "YulLiteral",
																		"src": "734:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:1"
																},
																"nativeSrc": "724:15:1",
																"nodeType": "YulFunctionCall",
																"src": "724:15:1"
															},
															"nativeSrc": "724:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:1"
											},
											{
												"body": {
													"nativeSrc": "794:238:1",
													"nodeType": "YulBlock",
													"src": "794:238:1",
													"statements": [
														{
															"nativeSrc": "804:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:1"
																		},
																		"nativeSrc": "834:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:1"
																},
																"nativeSrc": "822:40:1",
																"nodeType": "YulFunctionCall",
																"src": "822:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:1",
																	"nodeType": "YulTypedName",
																	"src": "808:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:1",
																"nodeType": "YulBlock",
																"src": "973:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:1"
																			},
																			"nativeSrc": "975:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:1"
																		},
																		"nativeSrc": "975:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:1",
																				"nodeType": "YulLiteral",
																				"src": "928:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:1"
																		},
																		"nativeSrc": "913:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:1"
																		},
																		"nativeSrc": "949:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:1"
																},
																"nativeSrc": "910:62:1",
																"nodeType": "YulFunctionCall",
																"src": "910:62:1"
															},
															"nativeSrc": "907:88:1",
															"nodeType": "YulIf",
															"src": "907:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:1"
																},
																"nativeSrc": "1004:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:1"
															},
															"nativeSrc": "1004:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:1",
														"nodeType": "YulTypedName",
														"src": "780:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:1",
														"nodeType": "YulTypedName",
														"src": "788:4:1",
														"type": ""
													}
												],
												"src": "751:281:1"
											},
											{
												"body": {
													"nativeSrc": "1079:88:1",
													"nodeType": "YulBlock",
													"src": "1079:88:1",
													"statements": [
														{
															"nativeSrc": "1089:30:1",
															"nodeType": "YulAssignment",
															"src": "1089:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:1"
																},
																"nativeSrc": "1099:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:1"
																},
																"nativeSrc": "1128:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:1"
															},
															"nativeSrc": "1128:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:1",
														"nodeType": "YulTypedName",
														"src": "1063:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:1",
														"nodeType": "YulTypedName",
														"src": "1072:6:1",
														"type": ""
													}
												],
												"src": "1038:129:1"
											},
											{
												"body": {
													"nativeSrc": "1255:229:1",
													"nodeType": "YulBlock",
													"src": "1255:229:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:1",
																"nodeType": "YulBlock",
																"src": "1360:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:1"
																			},
																			"nativeSrc": "1362:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:1"
																		},
																		"nativeSrc": "1362:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:1"
																},
																"nativeSrc": "1329:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:1"
															},
															"nativeSrc": "1326:56:1",
															"nodeType": "YulIf",
															"src": "1326:56:1"
														},
														{
															"nativeSrc": "1392:25:1",
															"nodeType": "YulAssignment",
															"src": "1392:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:1"
																},
																"nativeSrc": "1400:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:1"
																}
															]
														},
														{
															"nativeSrc": "1454:23:1",
															"nodeType": "YulAssignment",
															"src": "1454:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:1"
																},
																"nativeSrc": "1462:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:1",
														"nodeType": "YulTypedName",
														"src": "1239:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:1",
														"nodeType": "YulTypedName",
														"src": "1250:4:1",
														"type": ""
													}
												],
												"src": "1173:311:1"
											},
											{
												"body": {
													"nativeSrc": "1579:28:1",
													"nodeType": "YulBlock",
													"src": "1579:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																},
																"nativeSrc": "1589:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:1"
															},
															"nativeSrc": "1589:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:1"
											},
											{
												"body": {
													"nativeSrc": "1658:81:1",
													"nodeType": "YulBlock",
													"src": "1658:81:1",
													"statements": [
														{
															"nativeSrc": "1668:65:1",
															"nodeType": "YulAssignment",
															"src": "1668:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:1"
																},
																"nativeSrc": "1679:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:1",
														"nodeType": "YulTypedName",
														"src": "1640:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:1",
														"nodeType": "YulTypedName",
														"src": "1650:7:1",
														"type": ""
													}
												],
												"src": "1613:126:1"
											},
											{
												"body": {
													"nativeSrc": "1790:51:1",
													"nodeType": "YulBlock",
													"src": "1790:51:1",
													"statements": [
														{
															"nativeSrc": "1800:35:1",
															"nodeType": "YulAssignment",
															"src": "1800:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:1"
																},
																"nativeSrc": "1811:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:1",
														"nodeType": "YulTypedName",
														"src": "1772:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:1",
														"nodeType": "YulTypedName",
														"src": "1782:7:1",
														"type": ""
													}
												],
												"src": "1745:96:1"
											},
											{
												"body": {
													"nativeSrc": "1890:79:1",
													"nodeType": "YulBlock",
													"src": "1890:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:1",
																"nodeType": "YulBlock",
																"src": "1947:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:1"
																			},
																			"nativeSrc": "1949:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:1"
																		},
																		"nativeSrc": "1949:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:1"
																				},
																				"nativeSrc": "1920:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:1"
																		},
																		"nativeSrc": "1910:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nativeSrc": "1903:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:1"
															},
															"nativeSrc": "1900:63:1",
															"nodeType": "YulIf",
															"src": "1900:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:1",
														"nodeType": "YulTypedName",
														"src": "1883:5:1",
														"type": ""
													}
												],
												"src": "1847:122:1"
											},
											{
												"body": {
													"nativeSrc": "2038:80:1",
													"nodeType": "YulBlock",
													"src": "2038:80:1",
													"statements": [
														{
															"nativeSrc": "2048:22:1",
															"nodeType": "YulAssignment",
															"src": "2048:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:1"
																},
																"nativeSrc": "2057:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:1"
																},
																"nativeSrc": "2079:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:1"
															},
															"nativeSrc": "2079:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:1",
														"nodeType": "YulTypedName",
														"src": "2016:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:1",
														"nodeType": "YulTypedName",
														"src": "2024:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:1",
														"nodeType": "YulTypedName",
														"src": "2032:5:1",
														"type": ""
													}
												],
												"src": "1975:143:1"
											},
											{
												"body": {
													"nativeSrc": "2254:619:1",
													"nodeType": "YulBlock",
													"src": "2254:619:1",
													"statements": [
														{
															"nativeSrc": "2264:90:1",
															"nodeType": "YulAssignment",
															"src": "2264:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:1"
																		},
																		"nativeSrc": "2289:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:1"
																},
																"nativeSrc": "2273:81:1",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:1"
																}
															]
														},
														{
															"nativeSrc": "2363:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:1",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:1",
																"nodeType": "YulIdentifier",
																"src": "2374:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:1"
																},
																"nativeSrc": "2389:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:1"
															},
															"nativeSrc": "2389:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:1"
														},
														{
															"nativeSrc": "2419:23:1",
															"nodeType": "YulAssignment",
															"src": "2419:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:1"
																},
																"nativeSrc": "2426:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:1"
																}
															]
														},
														{
															"nativeSrc": "2452:44:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:1"
																		},
																		"nativeSrc": "2478:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:1"
																},
																"nativeSrc": "2466:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:1",
																"nodeType": "YulBlock",
																"src": "2524:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:1"
																			},
																			"nativeSrc": "2538:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:1"
																		},
																		"nativeSrc": "2538:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:1"
																},
																"nativeSrc": "2508:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:1"
															},
															"nativeSrc": "2505:122:1",
															"nodeType": "YulIf",
															"src": "2505:122:1"
														},
														{
															"body": {
																"nativeSrc": "2712:155:1",
																"nodeType": "YulBlock",
																"src": "2712:155:1",
																"statements": [
																	{
																		"nativeSrc": "2727:21:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:1",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:1",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:1"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:1"
																					},
																					"nativeSrc": "2774:48:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:1"
																			},
																			"nativeSrc": "2762:61:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:1"
																		},
																		"nativeSrc": "2762:61:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:1"
																	},
																	{
																		"nativeSrc": "2836:21:1",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:1"
																			},
																			"nativeSrc": "2843:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:1"
																},
																"nativeSrc": "2662:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:1"
															},
															"nativeSrc": "2636:231:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:1",
																"nodeType": "YulBlock",
																"src": "2678:25:1",
																"statements": [
																	{
																		"nativeSrc": "2680:21:1",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:1"
																			},
																			"nativeSrc": "2687:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:1",
																"nodeType": "YulBlock",
																"src": "2640:21:1",
																"statements": [
																	{
																		"nativeSrc": "2642:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:1",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:1",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:1",
														"nodeType": "YulTypedName",
														"src": "2224:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:1",
														"nodeType": "YulTypedName",
														"src": "2232:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:1",
														"nodeType": "YulTypedName",
														"src": "2240:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:1",
														"nodeType": "YulTypedName",
														"src": "2248:5:1",
														"type": ""
													}
												],
												"src": "2141:732:1"
											},
											{
												"body": {
													"nativeSrc": "2984:297:1",
													"nodeType": "YulBlock",
													"src": "2984:297:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:1",
																"nodeType": "YulBlock",
																"src": "3033:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:1"
																			},
																			"nativeSrc": "3035:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:1"
																		},
																		"nativeSrc": "3035:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:1"
																				},
																				"nativeSrc": "3008:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:1"
																		},
																		"nativeSrc": "3004:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:1"
																},
																"nativeSrc": "2997:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:1"
															},
															"nativeSrc": "2994:122:1",
															"nodeType": "YulIf",
															"src": "2994:122:1"
														},
														{
															"nativeSrc": "3125:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:1"
																},
																"nativeSrc": "3139:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:1",
															"nodeType": "YulAssignment",
															"src": "3161:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:1"
																		},
																		"nativeSrc": "3244:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:1"
																},
																"nativeSrc": "3170:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:1",
														"nodeType": "YulTypedName",
														"src": "2962:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:1",
														"nodeType": "YulTypedName",
														"src": "2970:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:1",
														"nodeType": "YulTypedName",
														"src": "2978:5:1",
														"type": ""
													}
												],
												"src": "2896:385:1"
											},
											{
												"body": {
													"nativeSrc": "3389:452:1",
													"nodeType": "YulBlock",
													"src": "3389:452:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3435:83:1",
																"nodeType": "YulBlock",
																"src": "3435:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3437:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3437:77:1"
																			},
																			"nativeSrc": "3437:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3437:79:1"
																		},
																		"nativeSrc": "3437:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3437:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3406:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:1"
																		},
																		"nativeSrc": "3406:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3431:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3402:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:1"
																},
																"nativeSrc": "3402:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3402:32:1"
															},
															"nativeSrc": "3399:119:1",
															"nodeType": "YulIf",
															"src": "3399:119:1"
														},
														{
															"nativeSrc": "3528:306:1",
															"nodeType": "YulBlock",
															"src": "3528:306:1",
															"statements": [
																{
																	"nativeSrc": "3543:38:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3543:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3567:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3578:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3578:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3563:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:1"
																				},
																				"nativeSrc": "3563:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3557:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3557:5:1"
																		},
																		"nativeSrc": "3557:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3547:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3547:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3628:83:1",
																		"nodeType": "YulBlock",
																		"src": "3628:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3630:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "3630:77:1"
																					},
																					"nativeSrc": "3630:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3630:79:1"
																				},
																				"nativeSrc": "3630:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3630:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3600:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3608:18:1",
																				"nodeType": "YulLiteral",
																				"src": "3608:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3597:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3597:2:1"
																		},
																		"nativeSrc": "3597:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3597:30:1"
																	},
																	"nativeSrc": "3594:117:1",
																	"nodeType": "YulIf",
																	"src": "3594:117:1"
																},
																{
																	"nativeSrc": "3725:99:1",
																	"nodeType": "YulAssignment",
																	"src": "3725:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3796:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3796:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3807:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3807:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3792:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:1"
																				},
																				"nativeSrc": "3792:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3792:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3816:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3816:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3735:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "3735:56:1"
																		},
																		"nativeSrc": "3735:89:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3725:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3725:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3287:554:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3359:9:1",
														"nodeType": "YulTypedName",
														"src": "3359:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3370:7:1",
														"nodeType": "YulTypedName",
														"src": "3370:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3382:6:1",
														"nodeType": "YulTypedName",
														"src": "3382:6:1",
														"type": ""
													}
												],
												"src": "3287:554:1"
											},
											{
												"body": {
													"nativeSrc": "3906:40:1",
													"nodeType": "YulBlock",
													"src": "3906:40:1",
													"statements": [
														{
															"nativeSrc": "3917:22:1",
															"nodeType": "YulAssignment",
															"src": "3917:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3933:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3933:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3927:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3927:5:1"
																},
																"nativeSrc": "3927:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3927:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3917:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3847:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3889:5:1",
														"nodeType": "YulTypedName",
														"src": "3889:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3899:6:1",
														"nodeType": "YulTypedName",
														"src": "3899:6:1",
														"type": ""
													}
												],
												"src": "3847:99:1"
											},
											{
												"body": {
													"nativeSrc": "3980:152:1",
													"nodeType": "YulBlock",
													"src": "3980:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3997:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3997:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4000:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4000:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3990:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:1"
																},
																"nativeSrc": "3990:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3990:88:1"
															},
															"nativeSrc": "3990:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3990:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4094:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4094:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4097:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4087:6:1"
																},
																"nativeSrc": "4087:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4087:15:1"
															},
															"nativeSrc": "4087:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4087:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4118:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4118:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4121:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4111:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:1"
																},
																"nativeSrc": "4111:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4111:15:1"
															},
															"nativeSrc": "4111:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4111:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3952:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3952:180:1"
											},
											{
												"body": {
													"nativeSrc": "4189:269:1",
													"nodeType": "YulBlock",
													"src": "4189:269:1",
													"statements": [
														{
															"nativeSrc": "4199:22:1",
															"nodeType": "YulAssignment",
															"src": "4199:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4213:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4219:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4209:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:1"
																},
																"nativeSrc": "4209:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4209:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:1"
																}
															]
														},
														{
															"nativeSrc": "4230:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4230:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4260:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4260:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4266:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4256:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:1"
																},
																"nativeSrc": "4256:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4256:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4234:18:1",
																	"nodeType": "YulTypedName",
																	"src": "4234:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4307:51:1",
																"nodeType": "YulBlock",
																"src": "4307:51:1",
																"statements": [
																	{
																		"nativeSrc": "4321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "4321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4331:3:1"
																			},
																			"nativeSrc": "4331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4287:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4287:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4280:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:1"
																},
																"nativeSrc": "4280:26:1",
																"nodeType": "YulFunctionCall",
																"src": "4280:26:1"
															},
															"nativeSrc": "4277:81:1",
															"nodeType": "YulIf",
															"src": "4277:81:1"
														},
														{
															"body": {
																"nativeSrc": "4410:42:1",
																"nodeType": "YulBlock",
																"src": "4410:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4424:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4424:16:1"
																			},
																			"nativeSrc": "4424:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4424:18:1"
																		},
																		"nativeSrc": "4424:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4424:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4374:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4374:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4397:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4405:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4394:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4394:2:1"
																		},
																		"nativeSrc": "4394:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4371:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:1"
																},
																"nativeSrc": "4371:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4371:38:1"
															},
															"nativeSrc": "4368:84:1",
															"nodeType": "YulIf",
															"src": "4368:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4138:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4173:4:1",
														"nodeType": "YulTypedName",
														"src": "4173:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4182:6:1",
														"nodeType": "YulTypedName",
														"src": "4182:6:1",
														"type": ""
													}
												],
												"src": "4138:320:1"
											},
											{
												"body": {
													"nativeSrc": "4518:87:1",
													"nodeType": "YulBlock",
													"src": "4518:87:1",
													"statements": [
														{
															"nativeSrc": "4528:11:1",
															"nodeType": "YulAssignment",
															"src": "4528:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "4536:3:1",
																"nodeType": "YulIdentifier",
																"src": "4536:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4528:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4528:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4556:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4556:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4559:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4549:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4549:6:1"
																},
																"nativeSrc": "4549:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4549:14:1"
															},
															"nativeSrc": "4549:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "4549:14:1"
														},
														{
															"nativeSrc": "4572:26:1",
															"nodeType": "YulAssignment",
															"src": "4572:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4590:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4590:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4593:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4580:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4580:9:1"
																},
																"nativeSrc": "4580:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4580:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4572:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4572:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4464:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4505:3:1",
														"nodeType": "YulTypedName",
														"src": "4505:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4513:4:1",
														"nodeType": "YulTypedName",
														"src": "4513:4:1",
														"type": ""
													}
												],
												"src": "4464:141:1"
											},
											{
												"body": {
													"nativeSrc": "4655:49:1",
													"nodeType": "YulBlock",
													"src": "4655:49:1",
													"statements": [
														{
															"nativeSrc": "4665:33:1",
															"nodeType": "YulAssignment",
															"src": "4665:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4683:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4683:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4690:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4690:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4679:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:1"
																		},
																		"nativeSrc": "4679:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4679:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4695:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4695:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4675:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:1"
																},
																"nativeSrc": "4675:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4675:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4665:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4611:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4638:5:1",
														"nodeType": "YulTypedName",
														"src": "4638:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4648:6:1",
														"nodeType": "YulTypedName",
														"src": "4648:6:1",
														"type": ""
													}
												],
												"src": "4611:93:1"
											},
											{
												"body": {
													"nativeSrc": "4763:54:1",
													"nodeType": "YulBlock",
													"src": "4763:54:1",
													"statements": [
														{
															"nativeSrc": "4773:37:1",
															"nodeType": "YulAssignment",
															"src": "4773:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4798:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4798:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4804:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4804:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4794:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:1"
																},
																"nativeSrc": "4794:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4794:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4773:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4773:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4710:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4738:4:1",
														"nodeType": "YulTypedName",
														"src": "4738:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4744:5:1",
														"nodeType": "YulTypedName",
														"src": "4744:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4754:8:1",
														"nodeType": "YulTypedName",
														"src": "4754:8:1",
														"type": ""
													}
												],
												"src": "4710:107:1"
											},
											{
												"body": {
													"nativeSrc": "4899:317:1",
													"nodeType": "YulBlock",
													"src": "4899:317:1",
													"statements": [
														{
															"nativeSrc": "4909:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4909:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4930:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "4930:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4942:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4926:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:1"
																},
																"nativeSrc": "4926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4926:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4913:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4913:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4953:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4953:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4984:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4984:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4995:66:1",
																		"nodeType": "YulLiteral",
																		"src": "4995:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4965:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4965:18:1"
																},
																"nativeSrc": "4965:97:1",
																"nodeType": "YulFunctionCall",
																"src": "4965:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4957:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4957:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5071:51:1",
															"nodeType": "YulAssignment",
															"src": "5071:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5102:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5102:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5113:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5113:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5083:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5083:18:1"
																},
																"nativeSrc": "5083:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5083:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5071:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "5071:8:1"
																}
															]
														},
														{
															"nativeSrc": "5131:30:1",
															"nodeType": "YulAssignment",
															"src": "5131:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5144:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5144:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5155:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5155:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5151:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:1"
																		},
																		"nativeSrc": "5151:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:1"
																},
																"nativeSrc": "5140:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5140:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5131:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5131:5:1"
																}
															]
														},
														{
															"nativeSrc": "5170:40:1",
															"nodeType": "YulAssignment",
															"src": "5170:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5183:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5194:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "5194:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5204:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5204:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:1"
																		},
																		"nativeSrc": "5190:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5190:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5180:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:1"
																},
																"nativeSrc": "5180:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5180:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5170:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4823:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4860:5:1",
														"nodeType": "YulTypedName",
														"src": "4860:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4867:10:1",
														"nodeType": "YulTypedName",
														"src": "4867:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4879:8:1",
														"nodeType": "YulTypedName",
														"src": "4879:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4892:6:1",
														"nodeType": "YulTypedName",
														"src": "4892:6:1",
														"type": ""
													}
												],
												"src": "4823:393:1"
											},
											{
												"body": {
													"nativeSrc": "5267:32:1",
													"nodeType": "YulBlock",
													"src": "5267:32:1",
													"statements": [
														{
															"nativeSrc": "5277:16:1",
															"nodeType": "YulAssignment",
															"src": "5277:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "5288:5:1",
																"nodeType": "YulIdentifier",
																"src": "5288:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5277:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5277:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5222:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5249:5:1",
														"nodeType": "YulTypedName",
														"src": "5249:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5259:7:1",
														"nodeType": "YulTypedName",
														"src": "5259:7:1",
														"type": ""
													}
												],
												"src": "5222:77:1"
											},
											{
												"body": {
													"nativeSrc": "5337:28:1",
													"nodeType": "YulBlock",
													"src": "5337:28:1",
													"statements": [
														{
															"nativeSrc": "5347:12:1",
															"nodeType": "YulAssignment",
															"src": "5347:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5354:5:1",
																"nodeType": "YulIdentifier",
																"src": "5354:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5347:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5305:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5323:5:1",
														"nodeType": "YulTypedName",
														"src": "5323:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5333:3:1",
														"nodeType": "YulTypedName",
														"src": "5333:3:1",
														"type": ""
													}
												],
												"src": "5305:60:1"
											},
											{
												"body": {
													"nativeSrc": "5431:82:1",
													"nodeType": "YulBlock",
													"src": "5431:82:1",
													"statements": [
														{
															"nativeSrc": "5441:66:1",
															"nodeType": "YulAssignment",
															"src": "5441:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5499:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5499:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5481:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5481:17:1"
																				},
																				"nativeSrc": "5481:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5481:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5472:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5472:8:1"
																		},
																		"nativeSrc": "5472:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5454:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5454:17:1"
																},
																"nativeSrc": "5454:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5454:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5441:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5441:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5371:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5411:5:1",
														"nodeType": "YulTypedName",
														"src": "5411:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5421:9:1",
														"nodeType": "YulTypedName",
														"src": "5421:9:1",
														"type": ""
													}
												],
												"src": "5371:142:1"
											},
											{
												"body": {
													"nativeSrc": "5566:28:1",
													"nodeType": "YulBlock",
													"src": "5566:28:1",
													"statements": [
														{
															"nativeSrc": "5576:12:1",
															"nodeType": "YulAssignment",
															"src": "5576:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5583:5:1",
																"nodeType": "YulIdentifier",
																"src": "5583:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5576:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5519:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5552:5:1",
														"nodeType": "YulTypedName",
														"src": "5552:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5562:3:1",
														"nodeType": "YulTypedName",
														"src": "5562:3:1",
														"type": ""
													}
												],
												"src": "5519:75:1"
											},
											{
												"body": {
													"nativeSrc": "5676:193:1",
													"nodeType": "YulBlock",
													"src": "5676:193:1",
													"statements": [
														{
															"nativeSrc": "5686:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5686:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5741:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5741:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5710:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5710:30:1"
																},
																"nativeSrc": "5710:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5710:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5690:16:1",
																	"nodeType": "YulTypedName",
																	"src": "5690:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5765:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5765:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5805:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5805:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5799:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "5799:5:1"
																				},
																				"nativeSrc": "5799:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5799:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5812:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5812:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5844:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "5844:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5820:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "5820:23:1"
																				},
																				"nativeSrc": "5820:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5771:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "5771:27:1"
																		},
																		"nativeSrc": "5771:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5771:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5758:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:1"
																},
																"nativeSrc": "5758:105:1",
																"nodeType": "YulFunctionCall",
																"src": "5758:105:1"
															},
															"nativeSrc": "5758:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "5758:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5600:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5653:4:1",
														"nodeType": "YulTypedName",
														"src": "5653:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5659:6:1",
														"nodeType": "YulTypedName",
														"src": "5659:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5667:7:1",
														"nodeType": "YulTypedName",
														"src": "5667:7:1",
														"type": ""
													}
												],
												"src": "5600:269:1"
											},
											{
												"body": {
													"nativeSrc": "5924:24:1",
													"nodeType": "YulBlock",
													"src": "5924:24:1",
													"statements": [
														{
															"nativeSrc": "5934:8:1",
															"nodeType": "YulAssignment",
															"src": "5934:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5941:1:1",
																"nodeType": "YulLiteral",
																"src": "5941:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5934:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5875:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5920:3:1",
														"nodeType": "YulTypedName",
														"src": "5920:3:1",
														"type": ""
													}
												],
												"src": "5875:73:1"
											},
											{
												"body": {
													"nativeSrc": "6007:136:1",
													"nodeType": "YulBlock",
													"src": "6007:136:1",
													"statements": [
														{
															"nativeSrc": "6017:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6017:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6031:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6031:30:1"
																},
																"nativeSrc": "6031:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6031:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6021:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6021:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6116:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6116:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6130:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6130:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6072:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6072:43:1"
																},
																"nativeSrc": "6072:65:1",
																"nodeType": "YulFunctionCall",
																"src": "6072:65:1"
															},
															"nativeSrc": "6072:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "6072:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5954:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5993:4:1",
														"nodeType": "YulTypedName",
														"src": "5993:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5999:6:1",
														"nodeType": "YulTypedName",
														"src": "5999:6:1",
														"type": ""
													}
												],
												"src": "5954:189:1"
											},
											{
												"body": {
													"nativeSrc": "6199:136:1",
													"nodeType": "YulBlock",
													"src": "6199:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6266:63:1",
																"nodeType": "YulBlock",
																"src": "6266:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6310:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6310:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6317:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6317:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6280:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "6280:29:1"
																			},
																			"nativeSrc": "6280:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6280:39:1"
																		},
																		"nativeSrc": "6280:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6280:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6219:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6219:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6226:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6226:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6216:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6216:2:1"
																},
																"nativeSrc": "6216:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6216:14:1"
															},
															"nativeSrc": "6209:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6231:26:1",
																"nodeType": "YulBlock",
																"src": "6231:26:1",
																"statements": [
																	{
																		"nativeSrc": "6233:22:1",
																		"nodeType": "YulAssignment",
																		"src": "6233:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6246:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6246:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6253:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6253:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6242:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6242:3:1"
																			},
																			"nativeSrc": "6242:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6242:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6233:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6233:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6213:2:1",
																"nodeType": "YulBlock",
																"src": "6213:2:1",
																"statements": []
															},
															"src": "6209:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6149:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6187:5:1",
														"nodeType": "YulTypedName",
														"src": "6187:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6194:3:1",
														"nodeType": "YulTypedName",
														"src": "6194:3:1",
														"type": ""
													}
												],
												"src": "6149:186:1"
											},
											{
												"body": {
													"nativeSrc": "6420:464:1",
													"nodeType": "YulBlock",
													"src": "6420:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6446:431:1",
																"nodeType": "YulBlock",
																"src": "6446:431:1",
																"statements": [
																	{
																		"nativeSrc": "6460:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6460:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6508:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6508:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6476:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:31:1"
																			},
																			"nativeSrc": "6476:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6464:8:1",
																				"nodeType": "YulTypedName",
																				"src": "6464:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6527:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6527:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6550:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6550:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6578:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "6578:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6560:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "6560:17:1"
																					},
																					"nativeSrc": "6560:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6560:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6546:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6546:3:1"
																			},
																			"nativeSrc": "6546:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6546:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6531:11:1",
																				"nodeType": "YulTypedName",
																				"src": "6531:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6747:27:1",
																			"nodeType": "YulBlock",
																			"src": "6747:27:1",
																			"statements": [
																				{
																					"nativeSrc": "6749:23:1",
																					"nodeType": "YulAssignment",
																					"src": "6749:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6764:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "6764:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6749:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "6749:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6731:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "6731:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6743:2:1",
																					"nodeType": "YulLiteral",
																					"src": "6743:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6728:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6728:2:1"
																			},
																			"nativeSrc": "6728:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6728:18:1"
																		},
																		"nativeSrc": "6725:49:1",
																		"nodeType": "YulIf",
																		"src": "6725:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6816:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "6816:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6833:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6833:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6861:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6861:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6843:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "6843:17:1"
																							},
																							"nativeSrc": "6843:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6843:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6829:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6829:3:1"
																					},
																					"nativeSrc": "6829:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6829:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6787:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "6787:28:1"
																			},
																			"nativeSrc": "6787:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6787:80:1"
																		},
																		"nativeSrc": "6787:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6787:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6437:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6437:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6442:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6442:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6434:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:1"
																},
																"nativeSrc": "6434:11:1",
																"nodeType": "YulFunctionCall",
																"src": "6434:11:1"
															},
															"nativeSrc": "6431:446:1",
															"nodeType": "YulIf",
															"src": "6431:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6341:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6396:5:1",
														"nodeType": "YulTypedName",
														"src": "6396:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6403:3:1",
														"nodeType": "YulTypedName",
														"src": "6403:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6408:10:1",
														"nodeType": "YulTypedName",
														"src": "6408:10:1",
														"type": ""
													}
												],
												"src": "6341:543:1"
											},
											{
												"body": {
													"nativeSrc": "6953:54:1",
													"nodeType": "YulBlock",
													"src": "6953:54:1",
													"statements": [
														{
															"nativeSrc": "6963:37:1",
															"nodeType": "YulAssignment",
															"src": "6963:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6988:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6988:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6994:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6994:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6984:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6984:3:1"
																},
																"nativeSrc": "6984:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6984:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6963:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "6963:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6890:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6928:4:1",
														"nodeType": "YulTypedName",
														"src": "6928:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6934:5:1",
														"nodeType": "YulTypedName",
														"src": "6934:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6944:8:1",
														"nodeType": "YulTypedName",
														"src": "6944:8:1",
														"type": ""
													}
												],
												"src": "6890:117:1"
											},
											{
												"body": {
													"nativeSrc": "7064:118:1",
													"nodeType": "YulBlock",
													"src": "7064:118:1",
													"statements": [
														{
															"nativeSrc": "7074:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7074:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7123:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7123:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7126:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7126:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7119:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7119:3:1"
																				},
																				"nativeSrc": "7119:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7119:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7134:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:1"
																				},
																				"nativeSrc": "7134:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7090:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "7090:28:1"
																		},
																		"nativeSrc": "7090:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7090:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7086:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:1"
																},
																"nativeSrc": "7086:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7086:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7078:4:1",
																	"nodeType": "YulTypedName",
																	"src": "7078:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7151:25:1",
															"nodeType": "YulAssignment",
															"src": "7151:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7165:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7165:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7171:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7171:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7161:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:1"
																},
																"nativeSrc": "7161:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7161:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7151:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7013:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7041:4:1",
														"nodeType": "YulTypedName",
														"src": "7041:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7047:5:1",
														"nodeType": "YulTypedName",
														"src": "7047:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7057:6:1",
														"nodeType": "YulTypedName",
														"src": "7057:6:1",
														"type": ""
													}
												],
												"src": "7013:169:1"
											},
											{
												"body": {
													"nativeSrc": "7268:214:1",
													"nodeType": "YulBlock",
													"src": "7268:214:1",
													"statements": [
														{
															"nativeSrc": "7401:37:1",
															"nodeType": "YulAssignment",
															"src": "7401:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7428:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7428:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7434:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7434:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7409:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7409:18:1"
																},
																"nativeSrc": "7409:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7409:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7401:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7401:4:1"
																}
															]
														},
														{
															"nativeSrc": "7447:29:1",
															"nodeType": "YulAssignment",
															"src": "7447:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7458:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7458:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7468:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7468:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7471:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7471:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:1"
																		},
																		"nativeSrc": "7464:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7455:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7455:2:1"
																},
																"nativeSrc": "7455:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7455:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7447:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7447:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7187:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7249:4:1",
														"nodeType": "YulTypedName",
														"src": "7249:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7255:3:1",
														"nodeType": "YulTypedName",
														"src": "7255:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7263:4:1",
														"nodeType": "YulTypedName",
														"src": "7263:4:1",
														"type": ""
													}
												],
												"src": "7187:295:1"
											},
											{
												"body": {
													"nativeSrc": "7579:1303:1",
													"nodeType": "YulBlock",
													"src": "7579:1303:1",
													"statements": [
														{
															"nativeSrc": "7590:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7590:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7637:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7637:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7604:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "7604:32:1"
																},
																"nativeSrc": "7604:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7604:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7594:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7594:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7726:22:1",
																"nodeType": "YulBlock",
																"src": "7726:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7728:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7728:16:1"
																			},
																			"nativeSrc": "7728:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7728:18:1"
																		},
																		"nativeSrc": "7728:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7698:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7706:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7706:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7695:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7695:2:1"
																},
																"nativeSrc": "7695:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7695:30:1"
															},
															"nativeSrc": "7692:56:1",
															"nodeType": "YulIf",
															"src": "7692:56:1"
														},
														{
															"nativeSrc": "7758:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7758:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7804:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7804:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7798:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "7798:5:1"
																		},
																		"nativeSrc": "7798:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7772:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "7772:25:1"
																},
																"nativeSrc": "7772:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7772:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7762:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7762:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7903:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7903:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7909:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7909:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7917:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7857:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "7857:45:1"
																},
																"nativeSrc": "7857:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7857:67:1"
															},
															"nativeSrc": "7857:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "7857:67:1"
														},
														{
															"nativeSrc": "7934:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7934:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "7951:1:1",
																"nodeType": "YulLiteral",
																"src": "7951:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7938:9:1",
																	"nodeType": "YulTypedName",
																	"src": "7938:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7962:17:1",
															"nodeType": "YulAssignment",
															"src": "7962:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "7975:4:1",
																"nodeType": "YulLiteral",
																"src": "7975:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7962:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "7962:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8026:611:1",
																		"nodeType": "YulBlock",
																		"src": "8026:611:1",
																		"statements": [
																			{
																				"nativeSrc": "8040:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8040:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8059:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8059:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8071:4:1",
																									"nodeType": "YulLiteral",
																									"src": "8071:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8067:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8067:3:1"
																							},
																							"nativeSrc": "8067:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8067:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8055:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8055:3:1"
																					},
																					"nativeSrc": "8055:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8055:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8044:7:1",
																						"nodeType": "YulTypedName",
																						"src": "8044:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8091:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8091:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8137:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8137:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8105:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "8105:31:1"
																					},
																					"nativeSrc": "8105:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8105:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8095:6:1",
																						"nodeType": "YulTypedName",
																						"src": "8095:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8155:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8155:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8164:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8164:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8159:1:1",
																						"nodeType": "YulTypedName",
																						"src": "8159:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8223:163:1",
																					"nodeType": "YulBlock",
																					"src": "8223:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8248:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8248:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8266:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "8266:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8271:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "8271:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8262:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8262:3:1"
																												},
																												"nativeSrc": "8262:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8262:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8256:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "8256:5:1"
																										},
																										"nativeSrc": "8256:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8256:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8241:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8241:6:1"
																								},
																								"nativeSrc": "8241:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8241:42:1"
																							},
																							"nativeSrc": "8241:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8241:42:1"
																						},
																						{
																							"nativeSrc": "8300:24:1",
																							"nodeType": "YulAssignment",
																							"src": "8300:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8314:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8314:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8322:1:1",
																										"nodeType": "YulLiteral",
																										"src": "8322:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8310:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8310:3:1"
																								},
																								"nativeSrc": "8310:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8310:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8300:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8300:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8341:31:1",
																							"nodeType": "YulAssignment",
																							"src": "8341:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8358:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "8358:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8369:2:1",
																										"nodeType": "YulLiteral",
																										"src": "8369:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8354:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8354:3:1"
																								},
																								"nativeSrc": "8354:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8354:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8341:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "8341:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8189:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "8189:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8192:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8192:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8186:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8186:2:1"
																					},
																					"nativeSrc": "8186:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8186:14:1"
																				},
																				"nativeSrc": "8178:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8201:21:1",
																					"nodeType": "YulBlock",
																					"src": "8201:21:1",
																					"statements": [
																						{
																							"nativeSrc": "8203:17:1",
																							"nodeType": "YulAssignment",
																							"src": "8203:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8212:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "8212:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8215:4:1",
																										"nodeType": "YulLiteral",
																										"src": "8215:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8208:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8208:3:1"
																								},
																								"nativeSrc": "8208:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8208:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8203:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "8203:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8182:3:1",
																					"nodeType": "YulBlock",
																					"src": "8182:3:1",
																					"statements": []
																				},
																				"src": "8178:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "8422:156:1",
																					"nodeType": "YulBlock",
																					"src": "8422:156:1",
																					"statements": [
																						{
																							"nativeSrc": "8440:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8440:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8467:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8467:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8472:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8472:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8463:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8463:3:1"
																										},
																										"nativeSrc": "8463:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8463:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8457:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8457:5:1"
																								},
																								"nativeSrc": "8457:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8444:9:1",
																									"nodeType": "YulTypedName",
																									"src": "8444:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8507:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8507:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8534:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8534:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8549:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "8549:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8557:4:1",
																														"nodeType": "YulLiteral",
																														"src": "8557:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8545:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8545:3:1"
																												},
																												"nativeSrc": "8545:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8545:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8515:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "8515:18:1"
																										},
																										"nativeSrc": "8515:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8515:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8500:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8500:6:1"
																								},
																								"nativeSrc": "8500:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8500:64:1"
																							},
																							"nativeSrc": "8500:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8500:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8405:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8405:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8414:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8414:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8402:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8402:2:1"
																					},
																					"nativeSrc": "8402:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8402:19:1"
																				},
																				"nativeSrc": "8399:179:1",
																				"nodeType": "YulIf",
																				"src": "8399:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8598:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8598:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8612:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "8612:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8620:1:1",
																											"nodeType": "YulLiteral",
																											"src": "8620:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8608:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "8608:3:1"
																									},
																									"nativeSrc": "8608:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "8608:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8624:1:1",
																									"nodeType": "YulLiteral",
																									"src": "8624:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8604:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8604:3:1"
																							},
																							"nativeSrc": "8604:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8604:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8591:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8591:6:1"
																					},
																					"nativeSrc": "8591:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8591:36:1"
																				},
																				"nativeSrc": "8591:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8591:36:1"
																			}
																		]
																	},
																	"nativeSrc": "8019:618:1",
																	"nodeType": "YulCase",
																	"src": "8019:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8024:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8024:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8654:222:1",
																		"nodeType": "YulBlock",
																		"src": "8654:222:1",
																		"statements": [
																			{
																				"nativeSrc": "8668:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8668:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8681:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8672:5:1",
																						"nodeType": "YulTypedName",
																						"src": "8672:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8705:67:1",
																					"nodeType": "YulBlock",
																					"src": "8705:67:1",
																					"statements": [
																						{
																							"nativeSrc": "8723:35:1",
																							"nodeType": "YulAssignment",
																							"src": "8723:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8742:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8742:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8747:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8747:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8738:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8738:3:1"
																										},
																										"nativeSrc": "8738:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8738:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8732:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8732:5:1"
																								},
																								"nativeSrc": "8732:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8732:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8723:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8723:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8698:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8698:6:1"
																				},
																				"nativeSrc": "8695:77:1",
																				"nodeType": "YulIf",
																				"src": "8695:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8792:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8792:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8851:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8851:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8858:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8858:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8798:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "8798:52:1"
																							},
																							"nativeSrc": "8798:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8798:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8785:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8785:6:1"
																					},
																					"nativeSrc": "8785:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8785:81:1"
																				},
																				"nativeSrc": "8785:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8785:81:1"
																			}
																		]
																	},
																	"nativeSrc": "8646:230:1",
																	"nodeType": "YulCase",
																	"src": "8646:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7999:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7999:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8007:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8007:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7996:2:1"
																},
																"nativeSrc": "7996:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7996:14:1"
															},
															"nativeSrc": "7989:887:1",
															"nodeType": "YulSwitch",
															"src": "7989:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7487:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7568:4:1",
														"nodeType": "YulTypedName",
														"src": "7568:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7574:3:1",
														"nodeType": "YulTypedName",
														"src": "7574:3:1",
														"type": ""
													}
												],
												"src": "7487:1395:1"
											},
											{
												"body": {
													"nativeSrc": "8953:53:1",
													"nodeType": "YulBlock",
													"src": "8953:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8970:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8993:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8993:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8975:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8975:17:1"
																		},
																		"nativeSrc": "8975:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8975:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8963:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:1"
																},
																"nativeSrc": "8963:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8963:37:1"
															},
															"nativeSrc": "8963:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8963:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8888:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8941:5:1",
														"nodeType": "YulTypedName",
														"src": "8941:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8948:3:1",
														"nodeType": "YulTypedName",
														"src": "8948:3:1",
														"type": ""
													}
												],
												"src": "8888:118:1"
											},
											{
												"body": {
													"nativeSrc": "9110:124:1",
													"nodeType": "YulBlock",
													"src": "9110:124:1",
													"statements": [
														{
															"nativeSrc": "9120:26:1",
															"nodeType": "YulAssignment",
															"src": "9120:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9132:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9132:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9143:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9128:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9128:3:1"
																},
																"nativeSrc": "9128:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9128:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9120:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9120:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9200:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9200:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9213:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9213:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9224:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9224:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9209:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:1"
																		},
																		"nativeSrc": "9209:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9209:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9156:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9156:43:1"
																},
																"nativeSrc": "9156:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9156:71:1"
															},
															"nativeSrc": "9156:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9156:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9012:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9082:9:1",
														"nodeType": "YulTypedName",
														"src": "9082:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9094:6:1",
														"nodeType": "YulTypedName",
														"src": "9094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9105:4:1",
														"nodeType": "YulTypedName",
														"src": "9105:4:1",
														"type": ""
													}
												],
												"src": "9012:222:1"
											},
											{
												"body": {
													"nativeSrc": "9336:73:1",
													"nodeType": "YulBlock",
													"src": "9336:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9353:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9358:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9358:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9346:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:1"
																},
																"nativeSrc": "9346:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9346:19:1"
															},
															"nativeSrc": "9346:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "9346:19:1"
														},
														{
															"nativeSrc": "9374:29:1",
															"nodeType": "YulAssignment",
															"src": "9374:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9393:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9398:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9389:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:1"
																},
																"nativeSrc": "9389:14:1",
																"nodeType": "YulFunctionCall",
																"src": "9389:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9374:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "9374:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9240:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9308:3:1",
														"nodeType": "YulTypedName",
														"src": "9308:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9313:6:1",
														"nodeType": "YulTypedName",
														"src": "9313:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9324:11:1",
														"nodeType": "YulTypedName",
														"src": "9324:11:1",
														"type": ""
													}
												],
												"src": "9240:169:1"
											},
											{
												"body": {
													"nativeSrc": "9521:122:1",
													"nodeType": "YulBlock",
													"src": "9521:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9543:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9543:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9551:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9551:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9539:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:1"
																		},
																		"nativeSrc": "9539:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9539:14:1"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373",
																		"kind": "string",
																		"nativeSrc": "9555:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9555:34:1",
																		"type": "",
																		"value": "At least one whitelisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:1"
																},
																"nativeSrc": "9532:58:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:58:1"
															},
															"nativeSrc": "9532:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "9532:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9611:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9611:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9619:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:1"
																		},
																		"nativeSrc": "9607:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:15:1"
																	},
																	{
																		"hexValue": "207265717569726564",
																		"kind": "string",
																		"nativeSrc": "9624:11:1",
																		"nodeType": "YulLiteral",
																		"src": "9624:11:1",
																		"type": "",
																		"value": " required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:1"
																},
																"nativeSrc": "9600:36:1",
																"nodeType": "YulFunctionCall",
																"src": "9600:36:1"
															},
															"nativeSrc": "9600:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "9600:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
												"nativeSrc": "9415:228:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9513:6:1",
														"nodeType": "YulTypedName",
														"src": "9513:6:1",
														"type": ""
													}
												],
												"src": "9415:228:1"
											},
											{
												"body": {
													"nativeSrc": "9795:220:1",
													"nodeType": "YulBlock",
													"src": "9795:220:1",
													"statements": [
														{
															"nativeSrc": "9805:74:1",
															"nodeType": "YulAssignment",
															"src": "9805:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9871:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9871:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9876:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9876:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9812:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9812:58:1"
																},
																"nativeSrc": "9812:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9812:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9805:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9805:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9977:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9977:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																	"nativeSrc": "9888:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9888:88:1"
																},
																"nativeSrc": "9888:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9888:93:1"
															},
															"nativeSrc": "9888:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9888:93:1"
														},
														{
															"nativeSrc": "9990:19:1",
															"nodeType": "YulAssignment",
															"src": "9990:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10001:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10001:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10006:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9997:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:1"
																},
																"nativeSrc": "9997:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9997:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9990:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9649:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9783:3:1",
														"nodeType": "YulTypedName",
														"src": "9783:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9791:3:1",
														"nodeType": "YulTypedName",
														"src": "9791:3:1",
														"type": ""
													}
												],
												"src": "9649:366:1"
											},
											{
												"body": {
													"nativeSrc": "10192:248:1",
													"nodeType": "YulBlock",
													"src": "10192:248:1",
													"statements": [
														{
															"nativeSrc": "10202:26:1",
															"nodeType": "YulAssignment",
															"src": "10202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10214:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10214:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10225:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10210:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10210:3:1"
																},
																"nativeSrc": "10210:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10202:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10249:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10260:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10260:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10245:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:1"
																		},
																		"nativeSrc": "10245:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10268:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10268:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10274:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10264:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10264:3:1"
																		},
																		"nativeSrc": "10264:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10264:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10238:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10238:6:1"
																},
																"nativeSrc": "10238:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10238:47:1"
															},
															"nativeSrc": "10238:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10238:47:1"
														},
														{
															"nativeSrc": "10294:139:1",
															"nodeType": "YulAssignment",
															"src": "10294:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10428:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10428:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10302:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10302:124:1"
																},
																"nativeSrc": "10302:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10302:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10294:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10294:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10021:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10172:9:1",
														"nodeType": "YulTypedName",
														"src": "10172:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10187:4:1",
														"nodeType": "YulTypedName",
														"src": "10187:4:1",
														"type": ""
													}
												],
												"src": "10021:419:1"
											},
											{
												"body": {
													"nativeSrc": "10474:152:1",
													"nodeType": "YulBlock",
													"src": "10474:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10491:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10491:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10494:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10494:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10484:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:1"
																},
																"nativeSrc": "10484:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10484:88:1"
															},
															"nativeSrc": "10484:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10484:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10588:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10588:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10591:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10591:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10581:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:1"
																},
																"nativeSrc": "10581:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10581:15:1"
															},
															"nativeSrc": "10581:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10581:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10615:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10615:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10605:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10605:6:1"
																},
																"nativeSrc": "10605:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10605:15:1"
															},
															"nativeSrc": "10605:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10605:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10446:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10446:180:1"
											},
											{
												"body": {
													"nativeSrc": "10660:152:1",
													"nodeType": "YulBlock",
													"src": "10660:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10677:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10677:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10680:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:1"
																},
																"nativeSrc": "10670:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10670:88:1"
															},
															"nativeSrc": "10670:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10670:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10774:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10774:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10777:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10777:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10767:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10767:6:1"
																},
																"nativeSrc": "10767:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10767:15:1"
															},
															"nativeSrc": "10767:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10767:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10798:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10798:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10801:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10801:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10791:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10791:6:1"
																},
																"nativeSrc": "10791:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10791:15:1"
															},
															"nativeSrc": "10791:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10791:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10632:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10632:180:1"
											},
											{
												"body": {
													"nativeSrc": "10862:147:1",
													"nodeType": "YulBlock",
													"src": "10862:147:1",
													"statements": [
														{
															"nativeSrc": "10872:25:1",
															"nodeType": "YulAssignment",
															"src": "10872:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10895:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10895:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10877:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10877:17:1"
																},
																"nativeSrc": "10877:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10877:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10872:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10872:1:1"
																}
															]
														},
														{
															"nativeSrc": "10906:25:1",
															"nodeType": "YulAssignment",
															"src": "10906:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10929:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10929:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10911:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10911:17:1"
																},
																"nativeSrc": "10911:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10911:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10906:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10906:1:1"
																}
															]
														},
														{
															"nativeSrc": "10940:16:1",
															"nodeType": "YulAssignment",
															"src": "10940:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10951:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10951:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10954:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10954:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10947:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10947:3:1"
																},
																"nativeSrc": "10947:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10947:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10940:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10940:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10980:22:1",
																"nodeType": "YulBlock",
																"src": "10980:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10982:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10982:16:1"
																			},
																			"nativeSrc": "10982:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10982:18:1"
																		},
																		"nativeSrc": "10982:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10982:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10972:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10972:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10975:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10969:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10969:2:1"
																},
																"nativeSrc": "10969:10:1",
																"nodeType": "YulFunctionCall",
																"src": "10969:10:1"
															},
															"nativeSrc": "10966:36:1",
															"nodeType": "YulIf",
															"src": "10966:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10818:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10849:1:1",
														"nodeType": "YulTypedName",
														"src": "10849:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10852:1:1",
														"nodeType": "YulTypedName",
														"src": "10852:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10858:3:1",
														"nodeType": "YulTypedName",
														"src": "10858:3:1",
														"type": ""
													}
												],
												"src": "10818:191:1"
											},
											{
												"body": {
													"nativeSrc": "11080:53:1",
													"nodeType": "YulBlock",
													"src": "11080:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11097:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11097:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11120:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11120:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11102:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "11102:17:1"
																		},
																		"nativeSrc": "11102:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11102:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11090:6:1"
																},
																"nativeSrc": "11090:37:1",
																"nodeType": "YulFunctionCall",
																"src": "11090:37:1"
															},
															"nativeSrc": "11090:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "11090:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11015:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11068:5:1",
														"nodeType": "YulTypedName",
														"src": "11068:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11075:3:1",
														"nodeType": "YulTypedName",
														"src": "11075:3:1",
														"type": ""
													}
												],
												"src": "11015:118:1"
											},
											{
												"body": {
													"nativeSrc": "11293:288:1",
													"nodeType": "YulBlock",
													"src": "11293:288:1",
													"statements": [
														{
															"nativeSrc": "11303:26:1",
															"nodeType": "YulAssignment",
															"src": "11303:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11315:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11315:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11326:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11326:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11311:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11311:3:1"
																},
																"nativeSrc": "11311:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11311:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11303:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11303:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11383:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11383:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11396:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11396:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11407:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11407:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11392:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11392:3:1"
																		},
																		"nativeSrc": "11392:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11392:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11339:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11339:43:1"
																},
																"nativeSrc": "11339:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11339:71:1"
															},
															"nativeSrc": "11339:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11339:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11464:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11464:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11477:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11488:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11488:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11473:3:1"
																		},
																		"nativeSrc": "11473:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11473:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11420:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11420:43:1"
																},
																"nativeSrc": "11420:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11420:72:1"
															},
															"nativeSrc": "11420:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11420:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11546:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11546:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11559:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11559:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11570:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11570:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11555:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11555:3:1"
																		},
																		"nativeSrc": "11555:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11555:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11502:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11502:43:1"
																},
																"nativeSrc": "11502:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11502:72:1"
															},
															"nativeSrc": "11502:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11502:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11139:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11249:9:1",
														"nodeType": "YulTypedName",
														"src": "11249:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11261:6:1",
														"nodeType": "YulTypedName",
														"src": "11261:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11269:6:1",
														"nodeType": "YulTypedName",
														"src": "11269:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11277:6:1",
														"nodeType": "YulTypedName",
														"src": "11277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11288:4:1",
														"nodeType": "YulTypedName",
														"src": "11288:4:1",
														"type": ""
													}
												],
												"src": "11139:442:1"
											},
											{
												"body": {
													"nativeSrc": "11685:124:1",
													"nodeType": "YulBlock",
													"src": "11685:124:1",
													"statements": [
														{
															"nativeSrc": "11695:26:1",
															"nodeType": "YulAssignment",
															"src": "11695:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11707:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11707:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11718:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11718:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11703:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11703:3:1"
																},
																"nativeSrc": "11703:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11703:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11695:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11695:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11775:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11788:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11788:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11799:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11799:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11784:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11784:3:1"
																		},
																		"nativeSrc": "11784:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11784:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11731:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11731:43:1"
																},
																"nativeSrc": "11731:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11731:71:1"
															},
															"nativeSrc": "11731:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11731:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11587:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11657:9:1",
														"nodeType": "YulTypedName",
														"src": "11657:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11669:6:1",
														"nodeType": "YulTypedName",
														"src": "11669:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11680:4:1",
														"nodeType": "YulTypedName",
														"src": "11680:4:1",
														"type": ""
													}
												],
												"src": "11587:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one whitelisted address\")\n\n        mstore(add(memPtr, 32), \" required\")\n\n    }\n\n    function abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612cc8380380612cc88339818101604052810190610031919061074a565b336040518060400160405280600381526020017f43434b00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43434b000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906109a1565b5080600490816100bd91906109a1565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610a7f565b60405180910390fd5b61013f8161022e60201b60201c565b505f815111610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610b18565b60405180910390fd5b5f5f90505b815181101561020d57600160065f8484815181106101a9576101a8610b36565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610188565b50610228336969e10de76676d08000006102f160201b60201c565b50610c20565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610361575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103589190610a7f565b60405180910390fd5b6103725f838361037660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103c6578060025f8282546103ba9190610b90565b92505081905550610494565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561044f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161044693929190610bd2565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104db578060025f8282540392505081905550610525565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105829190610c07565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105ea826105a4565b810181811067ffffffffffffffff82111715610609576106086105b4565b5b80604052505050565b5f61061b61058f565b905061062782826105e1565b919050565b5f67ffffffffffffffff821115610646576106456105b4565b5b602082029050602081019050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106848261065b565b9050919050565b6106948161067a565b811461069e575f5ffd5b50565b5f815190506106af8161068b565b92915050565b5f6106c76106c28461062c565b610612565b905080838252602082019050602084028301858111156106ea576106e9610657565b5b835b8181101561071357806106ff88826106a1565b8452602084019350506020810190506106ec565b5050509392505050565b5f82601f830112610731576107306105a0565b5b81516107418482602086016106b5565b91505092915050565b5f6020828403121561075f5761075e610598565b5b5f82015167ffffffffffffffff81111561077c5761077b61059c565b5b6107888482850161071d565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107df57607f821691505b6020821081036107f2576107f161079b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610819565b61085e8683610819565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6108a261089d61089884610876565b61087f565b610876565b9050919050565b5f819050919050565b6108bb83610888565b6108cf6108c7826108a9565b848454610825565b825550505050565b5f5f905090565b6108e66108d7565b6108f18184846108b2565b505050565b5b81811015610914576109095f826108de565b6001810190506108f7565b5050565b601f8211156109595761092a816107f8565b6109338461080a565b81016020851015610942578190505b61095661094e8561080a565b8301826108f6565b50505b505050565b5f82821c905092915050565b5f6109795f198460080261095e565b1980831691505092915050565b5f610991838361096a565b9150826002028217905092915050565b6109aa82610791565b67ffffffffffffffff8111156109c3576109c26105b4565b5b6109cd82546107c8565b6109d8828285610918565b5f60209050601f831160018114610a09575f84156109f7578287015190505b610a018582610986565b865550610a68565b601f198416610a17866107f8565b5f5b82811015610a3e57848901518255600182019150602085019450602081019050610a19565b86831015610a5b5784890151610a57601f89168261096a565b8355505b6001600288020188555050505b505050505050565b610a798161067a565b82525050565b5f602082019050610a925f830184610a70565b92915050565b5f82825260208201905092915050565b7f4174206c65617374206f6e652077686974656c697374656420616464726573735f8201527f2072657175697265640000000000000000000000000000000000000000000000602082015250565b5f610b02602983610a98565b9150610b0d82610aa8565b604082019050919050565b5f6020820190508181035f830152610b2f81610af6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b9a82610876565b9150610ba583610876565b9250828201905080821115610bbd57610bbc610b63565b5b92915050565b610bcc81610876565b82525050565b5f606082019050610be55f830186610a70565b610bf26020830185610bc3565b610bff6040830184610bc3565b949350505050565b5f602082019050610c1a5f830184610bc3565b92915050565b61209b80610c2d5f395ff3fe608060405234801561000f575f5ffd5b50600436106101ee575f3560e01c80638da5cb5b1161010d578063d0516650116100a0578063e43252d71161006f578063e43252d7146105c0578063e5839836146105dc578063eb91d37e1461060c578063f2fde38b1461062a576101ee565b8063d051665014610526578063da0239a614610556578063dd62ed3e14610574578063e08ba51a146105a4576101ee565b8063a9059cbb116100dc578063a9059cbb1461049e578063aba63705146104ce578063bdd3d825146104ec578063cb4b73ab1461050a576101ee565b80638da5cb5b14610414578063902d55a51461043257806395d89b41146104505780639b19251a1461046e576101ee565b8063313ce567116101855780636290865d116101545780636290865d146103a057806370a08231146103be578063715018a6146103ee5780638ab1d681146103f8576101ee565b8063313ce5671461032a57806340c10f191461034857806354fd4d50146103645780635c975abb14610382576101ee565b8063158b1a57116101c1578063158b1a571461028e57806318160ddd146102be57806323b872dd146102dc5780632d3802421461030c576101ee565b806306fdde03146101f2578063095ea7b31461021057806312cae7af14610240578063134e18f414610270575b5f5ffd5b6101fa610646565b60405161020791906117e3565b60405180910390f35b61022a60048036038101906102259190611894565b6106d6565b60405161023791906118ec565b60405180910390f35b61025a60048036038101906102559190611905565b6106f8565b604051610267919061193f565b60405180910390f35b610278610709565b6040516102859190611967565b60405180910390f35b6102a860048036038101906102a39190611905565b610710565b6040516102b5919061193f565b60405180910390f35b6102c6610719565b6040516102d3919061193f565b60405180910390f35b6102f660048036038101906102f19190611980565b610722565b60405161030391906118ec565b60405180910390f35b610314610815565b604051610321919061193f565b60405180910390f35b61033261081b565b60405161033f91906119eb565b60405180910390f35b610362600480360381019061035d9190611894565b610822565b005b61036c610933565b60405161037991906117e3565b60405180910390f35b61038a610970565b60405161039791906118ec565b60405180910390f35b6103a8610977565b6040516103b59190611967565b60405180910390f35b6103d860048036038101906103d39190611905565b61097e565b6040516103e5919061193f565b60405180910390f35b6103f66109c3565b005b610412600480360381019061040d9190611905565b6109d6565b005b61041c610a35565b6040516104299190611967565b60405180910390f35b61043a610a5d565b604051610447919061193f565b60405180910390f35b610458610a6b565b60405161046591906117e3565b60405180910390f35b61048860048036038101906104839190611905565b610afb565b60405161049591906118ec565b60405180910390f35b6104b860048036038101906104b39190611894565b610b18565b6040516104c591906118ec565b60405180910390f35b6104d6610c09565b6040516104e39190611967565b60405180910390f35b6104f4610c10565b6040516105019190611967565b60405180910390f35b610524600480360381019061051f9190611905565b610c35565b005b610540600480360381019061053b9190611905565b610c94565b60405161054d91906118ec565b60405180910390f35b61055e610cb1565b60405161056b919061193f565b60405180910390f35b61058e60048036038101906105899190611a04565b610ccf565b60405161059b919061193f565b60405180910390f35b6105be60048036038101906105b99190611905565b610d51565b005b6105da60048036038101906105d59190611905565b610db1565b005b6105f660048036038101906105f19190611905565b610e11565b60405161060391906118ec565b60405180910390f35b610614610e63565b604051610621919061193f565b60405180910390f35b610644600480360381019061063f9190611905565b610f52565b005b60606003805461065590611a6f565b80601f016020809104026020016040519081016040528092919081815260200182805461068190611a6f565b80156106cc5780601f106106a3576101008083540402835291602001916106cc565b820191905f5260205f20905b8154815290600101906020018083116106af57829003601f168201915b5050505050905090565b5f5f6106e0610fd6565b90506106ed818585610fdd565b600191505092915050565b5f6107028261097e565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611b51565b60405180910390fd5b61080c848484610fef565b90509392505050565b60095481565b5f5f905090565b61082a61101d565b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa90611bb9565b60405180910390fd5b6969e10de76676d0800000816009546108cc9190611c04565b111561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611c81565b60405180910390fd5b61091782826110a4565b8060095f8282546109289190611c04565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109cb61101d565b6109d45f611123565b565b6109de61101d565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a7a90611a6f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa690611a6f565b8015610af15780601f10610ac857610100808354040283529160200191610af1565b820191905f5260205f20905b815481529060010190602001808311610ad457829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9a90611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee90611b51565b60405180910390fd5b610c0183836111e6565b905092915050565b5f30905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c3d61101d565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f6009546969e10de76676d0800000610cca9190611c9f565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5961101d565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610db961101d565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610ed3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef79190611dbd565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610f3d9190611f89565b610f479190612000565b905080935050505090565b610f5a61101d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fca575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fc19190611967565b60405180910390fd5b610fd381611123565b50565b5f33905090565b610fea8383836001611208565b505050565b5f5f610ff9610fd6565b90506110068582856113d7565b61101185858561146a565b60019150509392505050565b611025610fd6565b73ffffffffffffffffffffffffffffffffffffffff16611043610a35565b73ffffffffffffffffffffffffffffffffffffffff16146110a257611066610fd6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110999190611967565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611114575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161110b9190611967565b60405180910390fd5b61111f5f838361155a565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6111f0610fd6565b90506111fd81858561146a565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611278575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161126f9190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112e8575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112df9190611967565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113d1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113c8919061193f565b60405180910390a35b50505050565b5f6113e28484610ccf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114645781811015611455578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144c93929190612030565b60405180910390fd5b61146384848484035f611208565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114da575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d19190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115419190611967565b60405180910390fd5b61155583838361155a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115aa578060025f82825461159e9190611c04565b92505081905550611678565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611633578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161162a93929190612030565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116bf578060025f8282540392505081905550611709565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611766919061193f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117b582611773565b6117bf818561177d565b93506117cf81856020860161178d565b6117d88161179b565b840191505092915050565b5f6020820190508181035f8301526117fb81846117ab565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61183082611807565b9050919050565b61184081611826565b811461184a575f5ffd5b50565b5f8135905061185b81611837565b92915050565b5f819050919050565b61187381611861565b811461187d575f5ffd5b50565b5f8135905061188e8161186a565b92915050565b5f5f604083850312156118aa576118a9611803565b5b5f6118b78582860161184d565b92505060206118c885828601611880565b9150509250929050565b5f8115159050919050565b6118e6816118d2565b82525050565b5f6020820190506118ff5f8301846118dd565b92915050565b5f6020828403121561191a57611919611803565b5b5f6119278482850161184d565b91505092915050565b61193981611861565b82525050565b5f6020820190506119525f830184611930565b92915050565b61196181611826565b82525050565b5f60208201905061197a5f830184611958565b92915050565b5f5f5f6060848603121561199757611996611803565b5b5f6119a48682870161184d565b93505060206119b58682870161184d565b92505060406119c686828701611880565b9150509250925092565b5f60ff82169050919050565b6119e5816119d0565b82525050565b5f6020820190506119fe5f8301846119dc565b92915050565b5f5f60408385031215611a1a57611a19611803565b5b5f611a278582860161184d565b9250506020611a388582860161184d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8657607f821691505b602082108103611a9957611a98611a42565b5b50919050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f611ad360108361177d565b9150611ade82611a9f565b602082019050919050565b5f6020820190508181035f830152611b0081611ac7565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611b3b60198361177d565b9150611b4682611b07565b602082019050919050565b5f6020820190508181035f830152611b6881611b2f565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611ba3600f8361177d565b9150611bae82611b6f565b602082019050919050565b5f6020820190508181035f830152611bd081611b97565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0e82611861565b9150611c1983611861565b9250828201905080821115611c3157611c30611bd7565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611c6b60158361177d565b9150611c7682611c37565b602082019050919050565b5f6020820190508181035f830152611c9881611c5f565b9050919050565b5f611ca982611861565b9150611cb483611861565b9250828203905081811115611ccc57611ccb611bd7565b5b92915050565b611cdb81611807565b8114611ce5575f5ffd5b50565b5f81519050611cf681611cd2565b92915050565b5f8160020b9050919050565b611d1181611cfc565b8114611d1b575f5ffd5b50565b5f81519050611d2c81611d08565b92915050565b5f61ffff82169050919050565b611d4881611d32565b8114611d52575f5ffd5b50565b5f81519050611d6381611d3f565b92915050565b611d72816119d0565b8114611d7c575f5ffd5b50565b5f81519050611d8d81611d69565b92915050565b611d9c816118d2565b8114611da6575f5ffd5b50565b5f81519050611db781611d93565b92915050565b5f5f5f5f5f5f5f60e0888a031215611dd857611dd7611803565b5b5f611de58a828b01611ce8565b9750506020611df68a828b01611d1e565b9650506040611e078a828b01611d55565b9550506060611e188a828b01611d55565b9450506080611e298a828b01611d55565b93505060a0611e3a8a828b01611d7f565b92505060c0611e4b8a828b01611da9565b91505092959891949750929550565b5f8160011c9050919050565b5f5f8291508390505b6001851115611eaf57808604811115611e8b57611e8a611bd7565b5b6001851615611e9a5780820291505b8081029050611ea885611e5a565b9450611e6f565b94509492505050565b5f82611ec75760019050611f82565b81611ed4575f9050611f82565b8160018114611eea5760028114611ef457611f23565b6001915050611f82565b60ff841115611f0657611f05611bd7565b5b8360020a915084821115611f1d57611f1c611bd7565b5b50611f82565b5060208310610133831016604e8410600b8410161715611f585782820a905083811115611f5357611f52611bd7565b5b611f82565b611f658484846001611e66565b92509050818404811115611f7c57611f7b611bd7565b5b81810290505b9392505050565b5f611f9382611861565b9150611f9e836119d0565b9250611fcb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611eb8565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61200a82611861565b915061201583611861565b92508261202557612024611fd3565b5b828204905092915050565b5f6060820190506120435f830186611958565b6120506020830185611930565b61205d6040830184611930565b94935050505056fea26469706673582212205da15f9409e8692779431923aac06f9dee197195a035f0b858f90bbac4fe436064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2CC8 CODESIZE SUB DUP1 PUSH2 0x2CC8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x74A JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x22E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP2 MLOAD GT PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0xB36 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x188 JUMP JUMPDEST POP PUSH2 0x228 CALLER PUSH10 0x69E10DE76676D0800000 PUSH2 0x2F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xC20 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x361 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x372 PUSH0 DUP4 DUP4 PUSH2 0x376 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x494 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x44F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x525 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x5EA DUP3 PUSH2 0x5A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x61B PUSH2 0x58F JUMP JUMPDEST SWAP1 POP PUSH2 0x627 DUP3 DUP3 PUSH2 0x5E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x646 JUMPI PUSH2 0x645 PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x684 DUP3 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP2 EQ PUSH2 0x69E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6AF DUP2 PUSH2 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C7 PUSH2 0x6C2 DUP5 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6E9 PUSH2 0x657 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x713 JUMPI DUP1 PUSH2 0x6FF DUP9 DUP3 PUSH2 0x6A1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6EC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x741 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x75F JUMPI PUSH2 0x75E PUSH2 0x598 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77C JUMPI PUSH2 0x77B PUSH2 0x59C JUMP JUMPDEST JUMPDEST PUSH2 0x788 DUP5 DUP3 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x79B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x854 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x85E DUP7 DUP4 PUSH2 0x819 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8A2 PUSH2 0x89D PUSH2 0x898 DUP5 PUSH2 0x876 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BB DUP4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x8CF PUSH2 0x8C7 DUP3 PUSH2 0x8A9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x825 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E6 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x8F1 DUP2 DUP5 DUP5 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x914 JUMPI PUSH2 0x909 PUSH0 DUP3 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x92A DUP2 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x933 DUP5 PUSH2 0x80A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x942 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x956 PUSH2 0x94E DUP6 PUSH2 0x80A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x979 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x95E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x991 DUP4 DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9AA DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C3 JUMPI PUSH2 0x9C2 PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST PUSH2 0x9CD DUP3 SLOAD PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x9D8 DUP3 DUP3 DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA09 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9F7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA01 DUP6 DUP3 PUSH2 0x986 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA17 DUP7 PUSH2 0x7F8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA3E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA19 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA5B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA57 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x96A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA79 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA92 PUSH0 DUP4 ADD DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652077686974656C69737465642061646472657373 PUSH0 DUP3 ADD MSTORE PUSH32 0x2072657175697265640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB02 PUSH1 0x29 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xB0D DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB9A DUP3 PUSH2 0x876 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA5 DUP4 PUSH2 0x876 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBD JUMPI PUSH2 0xBBC PUSH2 0xB63 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBCC DUP2 PUSH2 0x876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBE5 PUSH0 DUP4 ADD DUP7 PUSH2 0xA70 JUMP JUMPDEST PUSH2 0xBF2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBC3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC1A PUSH0 DUP4 ADD DUP5 PUSH2 0xBC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x209B DUP1 PUSH2 0xC2D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xD0516650 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE43252D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x62A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xD0516650 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x5A4 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x50A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x46E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6290865D GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x3F8 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x382 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x158B1A57 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x30C JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1FA PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36C PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH2 0x9C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55E PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x614 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x655 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x681 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6E0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x6ED DUP2 DUP6 DUP6 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x702 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80C DUP5 DUP5 DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x82A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x9 SLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST GT ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x917 DUP3 DUP3 PUSH2 0x10A4 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CB PUSH2 0x101D JUMP JUMPDEST PUSH2 0x9D4 PUSH0 PUSH2 0x1123 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA7A SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9A SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC01 DUP4 DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD59 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF5A PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD3 DUP2 PUSH2 0x1123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFEA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFF9 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1006 DUP6 DUP3 DUP6 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1011 DUP6 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1025 PUSH2 0xFD6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1043 PUSH2 0xA35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A2 JUMPI PUSH2 0x1066 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1114 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F PUSH0 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x11F0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD DUP2 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1278 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1464 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1455 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1463 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1555 DUP4 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x159E SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1678 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1633 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16BF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1709 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1766 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B5 DUP3 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x17BF DUP2 DUP6 PUSH2 0x177D JUMP JUMPDEST SWAP4 POP PUSH2 0x17CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x179B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17FB DUP2 DUP5 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1830 DUP3 PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1840 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP2 EQ PUSH2 0x184A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185B DUP2 PUSH2 0x1837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1873 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP2 EQ PUSH2 0x187D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188E DUP2 PUSH2 0x186A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH0 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191A JUMPI PUSH2 0x1919 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1927 DUP5 DUP3 DUP6 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1939 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1952 PUSH0 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1961 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197A PUSH0 DUP4 ADD DUP5 PUSH2 0x1958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A4 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FE PUSH0 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD3 PUSH1 0x10 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADE DUP3 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3B PUSH1 0x19 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B46 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B68 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA3 PUSH1 0xF DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BD0 DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0E DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6B PUSH1 0x15 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C76 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA9 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCB PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDB DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF6 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D11 DUP2 PUSH2 0x1CFC JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2C DUP2 PUSH2 0x1D08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D63 DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D72 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D8D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9C DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DB7 DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1CE8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DF6 DUP11 DUP3 DUP12 ADD PUSH2 0x1D1E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1E07 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1E18 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1E29 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1E3A DUP11 DUP3 DUP12 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1E4B DUP11 DUP3 DUP12 ADD PUSH2 0x1DA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1EAF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E8B JUMPI PUSH2 0x1E8A PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E9A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1EA8 DUP6 PUSH2 0x1E5A JUMP JUMPDEST SWAP5 POP PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1EC7 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH2 0x1ED4 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EF4 JUMPI PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F82 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F58 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1F65 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F7C JUMPI PUSH2 0x1F7B PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F93 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9E DUP4 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FCB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x200A DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x2015 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2025 JUMPI PUSH2 0x2024 PUSH2 0x1FD3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2043 PUSH0 DUP4 ADD DUP7 PUSH2 0x1958 JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x205D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE LOG1 PUSH0 SWAP5 MULMOD 0xE8 PUSH10 0x2779431923AAC06F9DEE NOT PUSH18 0x95A035F0B858F90BBAC4FE436064736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "51743:4283:0:-:0;;;52197:398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;52266:10;37626:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37700:5;37692;:13;;;;;;:::i;:::-;;37725:7;37715;:17;;;;;;:::i;:::-;;37626:113;;48193:1;48169:26;;:12;:26;;;48165:95;;48246:1;48218:31;;;;;;;;;;;:::i;:::-;;;;;;;;48165:95;48269:32;48288:12;48269:18;;;:32;;:::i;:::-;48121:187;52316:1:::2;52296:10;:17;:21;52288:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;52426:9;52438:1;52426:13;;52421:104;52445:10;:17;52441:1;:21;52421:104;;;52510:4;52483:9;:24;52493:10;52504:1;52493:13;;;;;;;;:::i;:::-;;;;;;;;52483:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;52464:3;;;;;;;52421:104;;;;52535:31;52541:10;51921:16;52535:5;;;:31;;:::i;:::-;52197:398:::0;51743:4283;;49808:187;49881:16;49900:6;;;;;;;;;;;49881:25;;49925:8;49916:6;;:17;;;;;;;;;;;;;;;;;;49979:8;49948:40;;49969:8;49948:40;;;;;;;;;;;;49871:124;49808:187;:::o;43483:208::-;43572:1;43553:21;;:7;:21;;;43549:91;;43626:1;43597:32;;;;;;;;;;;:::i;:::-;;;;;;;;43549:91;43649:35;43665:1;43669:7;43678:5;43649:7;;;:35;;:::i;:::-;43483:208;;:::o;42033:1107::-;42138:1;42122:18;;:4;:18;;;42118:540;;42274:5;42258:12;;:21;;;;;;;:::i;:::-;;;;;;;;42118:540;;;42310:19;42332:9;:15;42342:4;42332:15;;;;;;;;;;;;;;;;42310:37;;42379:5;42365:11;:19;42361:115;;;42436:4;42442:11;42455:5;42411:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;42361:115;42628:5;42614:11;:19;42596:9;:15;42606:4;42596:15;;;;;;;;;;;;;;;:37;;;;42296:362;42118:540;42686:1;42672:16;;:2;:16;;;42668:425;;42851:5;42835:12;;:21;;;;;;;;;;;42668:425;;;43063:5;43046:9;:13;43056:2;43046:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;42668:425;43123:2;43108:25;;43117:4;43108:25;;;43127:5;43108:25;;;;;;:::i;:::-;;;;;;;;42033:1107;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5941:1;5934:8;;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:118::-;8975:24;8993:5;8975:24;:::i;:::-;8970:3;8963:37;8888:118;;:::o;9012:222::-;9105:4;9143:2;9132:9;9128:18;9120:26;;9156:71;9224:1;9213:9;9209:17;9200:6;9156:71;:::i;:::-;9012:222;;;;:::o;9240:169::-;9324:11;9358:6;9353:3;9346:19;9398:4;9393:3;9389:14;9374:29;;9240:169;;;;:::o;9415:228::-;9555:34;9551:1;9543:6;9539:14;9532:58;9624:11;9619:2;9611:6;9607:15;9600:36;9415:228;:::o;9649:366::-;9791:3;9812:67;9876:2;9871:3;9812:67;:::i;:::-;9805:74;;9888:93;9977:3;9888:93;:::i;:::-;10006:2;10001:3;9997:12;9990:19;;9649:366;;;:::o;10021:419::-;10187:4;10225:2;10214:9;10210:18;10202:26;;10274:9;10268:4;10264:20;10260:1;10249:9;10245:17;10238:47;10302:131;10428:4;10302:131;:::i;:::-;10294:139;;10021:419;;;:::o;10446:180::-;10494:77;10491:1;10484:88;10591:4;10588:1;10581:15;10615:4;10612:1;10605:15;10632:180;10680:77;10677:1;10670:88;10777:4;10774:1;10767:15;10801:4;10798:1;10791:15;10818:191;10858:3;10877:20;10895:1;10877:20;:::i;:::-;10872:25;;10911:20;10929:1;10911:20;:::i;:::-;10906:25;;10954:1;10951;10947:9;10940:16;;10975:3;10972:1;10969:10;10966:36;;;10982:18;;:::i;:::-;10966:36;10818:191;;;;:::o;11015:118::-;11102:24;11120:5;11102:24;:::i;:::-;11097:3;11090:37;11015:118;;:::o;11139:442::-;11288:4;11326:2;11315:9;11311:18;11303:26;;11339:71;11407:1;11396:9;11392:17;11383:6;11339:71;:::i;:::-;11420:72;11488:2;11477:9;11473:18;11464:6;11420:72;:::i;:::-;11502;11570:2;11559:9;11555:18;11546:6;11502:72;:::i;:::-;11139:442;;;;;;:::o;11587:222::-;11680:4;11718:2;11707:9;11703:18;11695:26;;11731:71;11799:1;11788:9;11784:17;11775:6;11731:71;:::i;:::-;11587:222;;;;:::o;51743:4283:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1409": {
									"entryPoint": 2653,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1091": {
									"entryPoint": 4061,
									"id": 1091,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1151": {
									"entryPoint": 4616,
									"id": 1151,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_1282": {
									"entryPoint": 4125,
									"id": 1282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1040": {
									"entryPoint": 4260,
									"id": 1040,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_540": {
									"entryPoint": 4054,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1199": {
									"entryPoint": 5079,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1344": {
									"entryPoint": 4387,
									"id": 1344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_930": {
									"entryPoint": 5226,
									"id": 930,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1007": {
									"entryPoint": 5466,
									"id": 1007,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToWhitelist_1485": {
									"entryPoint": 3505,
									"id": 1485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_827": {
									"entryPoint": 3279,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_851": {
									"entryPoint": 1750,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfUser_1751": {
									"entryPoint": 1784,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_786": {
									"entryPoint": 2430,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@compliance_1582": {
									"entryPoint": 2423,
									"id": 1582,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1739": {
									"entryPoint": 2075,
									"id": 1739,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezeUser_1513": {
									"entryPoint": 3409,
									"id": 1513,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@frozen_1417": {
									"entryPoint": 3220,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentPrice_1787": {
									"entryPoint": 3683,
									"id": 1787,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFrozenTokens_1615": {
									"entryPoint": 1808,
									"id": 1615,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@identityRegistry_1570": {
									"entryPoint": 1801,
									"id": 1570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFrozen_1604": {
									"entryPoint": 3601,
									"id": 1604,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1730": {
									"entryPoint": 2082,
									"id": 1730,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintedAmount_1421": {
									"entryPoint": 2069,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_746": {
									"entryPoint": 1606,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onchainID_1549": {
									"entryPoint": 3081,
									"id": 1549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1265": {
									"entryPoint": 2613,
									"id": 1265,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1591": {
									"entryPoint": 2416,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingSupply_1537": {
									"entryPoint": 3249,
									"id": 1537,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_1499": {
									"entryPoint": 2518,
									"id": 1499,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_1296": {
									"entryPoint": 2499,
									"id": 1296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_755": {
									"entryPoint": 2667,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_773": {
									"entryPoint": 1817,
									"id": 773,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1695": {
									"entryPoint": 1826,
									"id": 1695,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_883": {
									"entryPoint": 4079,
									"id": 883,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1324": {
									"entryPoint": 3922,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1654": {
									"entryPoint": 2840,
									"id": 1654,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_810": {
									"entryPoint": 4582,
									"id": 810,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreezeUser_1527": {
									"entryPoint": 3125,
									"id": 1527,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapPool_1419": {
									"entryPoint": 3088,
									"id": 1419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@version_1558": {
									"entryPoint": 2355,
									"id": 1558,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whitelist_1413": {
									"entryPoint": 2811,
									"id": 1413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 7400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 7474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16868:1",
										"nodeType": "YulBlock",
										"src": "0:16868:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3405:263:1",
													"nodeType": "YulBlock",
													"src": "3405:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:1",
																"nodeType": "YulBlock",
																"src": "3451:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:1"
																			},
																			"nativeSrc": "3453:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:1"
																		},
																		"nativeSrc": "3453:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:1"
																		},
																		"nativeSrc": "3422:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:1"
																},
																"nativeSrc": "3418:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:1"
															},
															"nativeSrc": "3415:119:1",
															"nodeType": "YulIf",
															"src": "3415:119:1"
														},
														{
															"nativeSrc": "3544:117:1",
															"nodeType": "YulBlock",
															"src": "3544:117:1",
															"statements": [
																{
																	"nativeSrc": "3559:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:1"
																				},
																				"nativeSrc": "3619:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:1"
																		},
																		"nativeSrc": "3598:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:1",
														"nodeType": "YulTypedName",
														"src": "3375:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:1",
														"nodeType": "YulTypedName",
														"src": "3386:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:1",
														"nodeType": "YulTypedName",
														"src": "3398:6:1",
														"type": ""
													}
												],
												"src": "3339:329:1"
											},
											{
												"body": {
													"nativeSrc": "3739:53:1",
													"nodeType": "YulBlock",
													"src": "3739:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:1"
																		},
																		"nativeSrc": "3761:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:1"
																},
																"nativeSrc": "3749:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:1"
															},
															"nativeSrc": "3749:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:1",
														"nodeType": "YulTypedName",
														"src": "3727:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:1",
														"nodeType": "YulTypedName",
														"src": "3734:3:1",
														"type": ""
													}
												],
												"src": "3674:118:1"
											},
											{
												"body": {
													"nativeSrc": "3896:124:1",
													"nodeType": "YulBlock",
													"src": "3896:124:1",
													"statements": [
														{
															"nativeSrc": "3906:26:1",
															"nodeType": "YulAssignment",
															"src": "3906:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:1"
																},
																"nativeSrc": "3914:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:1"
																		},
																		"nativeSrc": "3995:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:1"
																},
																"nativeSrc": "3942:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:1"
															},
															"nativeSrc": "3942:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:1",
														"nodeType": "YulTypedName",
														"src": "3868:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:1",
														"nodeType": "YulTypedName",
														"src": "3880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:1",
														"nodeType": "YulTypedName",
														"src": "3891:4:1",
														"type": ""
													}
												],
												"src": "3798:222:1"
											},
											{
												"body": {
													"nativeSrc": "4091:53:1",
													"nodeType": "YulBlock",
													"src": "4091:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4108:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4131:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4131:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4113:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4113:17:1"
																		},
																		"nativeSrc": "4113:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:1"
																},
																"nativeSrc": "4101:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4101:37:1"
															},
															"nativeSrc": "4101:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4101:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4026:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4079:5:1",
														"nodeType": "YulTypedName",
														"src": "4079:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4086:3:1",
														"nodeType": "YulTypedName",
														"src": "4086:3:1",
														"type": ""
													}
												],
												"src": "4026:118:1"
											},
											{
												"body": {
													"nativeSrc": "4248:124:1",
													"nodeType": "YulBlock",
													"src": "4248:124:1",
													"statements": [
														{
															"nativeSrc": "4258:26:1",
															"nodeType": "YulAssignment",
															"src": "4258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:1"
																},
																"nativeSrc": "4266:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4258:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4338:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4351:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4362:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4347:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:1"
																		},
																		"nativeSrc": "4347:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4294:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4294:43:1"
																},
																"nativeSrc": "4294:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4294:71:1"
															},
															"nativeSrc": "4294:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4294:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4150:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:1",
														"nodeType": "YulTypedName",
														"src": "4220:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4232:6:1",
														"nodeType": "YulTypedName",
														"src": "4232:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4243:4:1",
														"nodeType": "YulTypedName",
														"src": "4243:4:1",
														"type": ""
													}
												],
												"src": "4150:222:1"
											},
											{
												"body": {
													"nativeSrc": "4478:519:1",
													"nodeType": "YulBlock",
													"src": "4478:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4524:83:1",
																"nodeType": "YulBlock",
																"src": "4524:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4526:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4526:77:1"
																			},
																			"nativeSrc": "4526:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:79:1"
																		},
																		"nativeSrc": "4526:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4499:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4499:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4495:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:1"
																		},
																		"nativeSrc": "4495:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4520:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4491:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:1"
																},
																"nativeSrc": "4491:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4491:32:1"
															},
															"nativeSrc": "4488:119:1",
															"nodeType": "YulIf",
															"src": "4488:119:1"
														},
														{
															"nativeSrc": "4617:117:1",
															"nodeType": "YulBlock",
															"src": "4617:117:1",
															"statements": [
																{
																	"nativeSrc": "4632:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4632:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4646:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4646:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4636:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4636:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4661:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4661:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4696:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4696:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4707:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4692:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4692:3:1"
																				},
																				"nativeSrc": "4692:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4692:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4716:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4671:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4671:20:1"
																		},
																		"nativeSrc": "4671:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4661:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4661:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4744:118:1",
															"nodeType": "YulBlock",
															"src": "4744:118:1",
															"statements": [
																{
																	"nativeSrc": "4759:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4759:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4773:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4773:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4763:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4763:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4789:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4789:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4824:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4824:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4835:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4835:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4820:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:1"
																				},
																				"nativeSrc": "4820:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4820:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4844:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4799:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4799:20:1"
																		},
																		"nativeSrc": "4799:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4789:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4789:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4872:118:1",
															"nodeType": "YulBlock",
															"src": "4872:118:1",
															"statements": [
																{
																	"nativeSrc": "4887:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4887:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4901:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4891:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4891:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:1"
																				},
																				"nativeSrc": "4948:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:1"
																		},
																		"nativeSrc": "4927:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4917:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4378:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4432:9:1",
														"nodeType": "YulTypedName",
														"src": "4432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4443:7:1",
														"nodeType": "YulTypedName",
														"src": "4443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4455:6:1",
														"nodeType": "YulTypedName",
														"src": "4455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4463:6:1",
														"nodeType": "YulTypedName",
														"src": "4463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4471:6:1",
														"nodeType": "YulTypedName",
														"src": "4471:6:1",
														"type": ""
													}
												],
												"src": "4378:619:1"
											},
											{
												"body": {
													"nativeSrc": "5046:43:1",
													"nodeType": "YulBlock",
													"src": "5046:43:1",
													"statements": [
														{
															"nativeSrc": "5056:27:1",
															"nodeType": "YulAssignment",
															"src": "5056:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5071:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5071:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5067:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:1"
																},
																"nativeSrc": "5067:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5067:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5056:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5056:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5003:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5028:5:1",
														"nodeType": "YulTypedName",
														"src": "5028:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5038:7:1",
														"nodeType": "YulTypedName",
														"src": "5038:7:1",
														"type": ""
													}
												],
												"src": "5003:86:1"
											},
											{
												"body": {
													"nativeSrc": "5156:51:1",
													"nodeType": "YulBlock",
													"src": "5156:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5194:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5178:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "5178:15:1"
																		},
																		"nativeSrc": "5178:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5178:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:1"
																},
																"nativeSrc": "5166:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5166:35:1"
															},
															"nativeSrc": "5166:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "5166:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5095:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5144:5:1",
														"nodeType": "YulTypedName",
														"src": "5144:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5151:3:1",
														"nodeType": "YulTypedName",
														"src": "5151:3:1",
														"type": ""
													}
												],
												"src": "5095:112:1"
											},
											{
												"body": {
													"nativeSrc": "5307:120:1",
													"nodeType": "YulBlock",
													"src": "5307:120:1",
													"statements": [
														{
															"nativeSrc": "5317:26:1",
															"nodeType": "YulAssignment",
															"src": "5317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5329:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5329:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5325:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:1"
																},
																"nativeSrc": "5325:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5317:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5317:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:1"
																		},
																		"nativeSrc": "5402:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5353:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "5353:39:1"
																},
																"nativeSrc": "5353:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5353:67:1"
															},
															"nativeSrc": "5353:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5353:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5213:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:1",
														"nodeType": "YulTypedName",
														"src": "5279:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5291:6:1",
														"nodeType": "YulTypedName",
														"src": "5291:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5302:4:1",
														"nodeType": "YulTypedName",
														"src": "5302:4:1",
														"type": ""
													}
												],
												"src": "5213:214:1"
											},
											{
												"body": {
													"nativeSrc": "5516:391:1",
													"nodeType": "YulBlock",
													"src": "5516:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:1",
																"nodeType": "YulBlock",
																"src": "5562:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:1"
																			},
																			"nativeSrc": "5564:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:1"
																		},
																		"nativeSrc": "5564:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:1"
																		},
																		"nativeSrc": "5533:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:1"
																},
																"nativeSrc": "5529:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:1"
															},
															"nativeSrc": "5526:119:1",
															"nodeType": "YulIf",
															"src": "5526:119:1"
														},
														{
															"nativeSrc": "5655:117:1",
															"nodeType": "YulBlock",
															"src": "5655:117:1",
															"statements": [
																{
																	"nativeSrc": "5670:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:1"
																				},
																				"nativeSrc": "5730:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:1"
																		},
																		"nativeSrc": "5709:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:1",
															"nodeType": "YulBlock",
															"src": "5782:118:1",
															"statements": [
																{
																	"nativeSrc": "5797:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:1"
																				},
																				"nativeSrc": "5858:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:1"
																		},
																		"nativeSrc": "5837:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:1",
														"nodeType": "YulTypedName",
														"src": "5478:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:1",
														"nodeType": "YulTypedName",
														"src": "5489:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:1",
														"nodeType": "YulTypedName",
														"src": "5501:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:1",
														"nodeType": "YulTypedName",
														"src": "5509:6:1",
														"type": ""
													}
												],
												"src": "5433:474:1"
											},
											{
												"body": {
													"nativeSrc": "5941:152:1",
													"nodeType": "YulBlock",
													"src": "5941:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:1",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:1"
																},
																"nativeSrc": "5951:88:1",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:1"
															},
															"nativeSrc": "5951:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:1"
																},
																"nativeSrc": "6048:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:1"
															},
															"nativeSrc": "6048:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:1"
																},
																"nativeSrc": "6072:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:1"
															},
															"nativeSrc": "6072:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:1"
											},
											{
												"body": {
													"nativeSrc": "6150:269:1",
													"nodeType": "YulBlock",
													"src": "6150:269:1",
													"statements": [
														{
															"nativeSrc": "6160:22:1",
															"nodeType": "YulAssignment",
															"src": "6160:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:1"
																},
																"nativeSrc": "6170:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:1"
																}
															]
														},
														{
															"nativeSrc": "6191:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:1"
																},
																"nativeSrc": "6217:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:1",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:1",
																"nodeType": "YulBlock",
																"src": "6268:51:1",
																"statements": [
																	{
																		"nativeSrc": "6282:27:1",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:1"
																			},
																			"nativeSrc": "6292:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:1"
																},
																"nativeSrc": "6241:26:1",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:1"
															},
															"nativeSrc": "6238:81:1",
															"nodeType": "YulIf",
															"src": "6238:81:1"
														},
														{
															"body": {
																"nativeSrc": "6371:42:1",
																"nodeType": "YulBlock",
																"src": "6371:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:1"
																			},
																			"nativeSrc": "6385:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:1"
																		},
																		"nativeSrc": "6385:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:1"
																		},
																		"nativeSrc": "6355:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:1"
																},
																"nativeSrc": "6332:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:1"
															},
															"nativeSrc": "6329:84:1",
															"nodeType": "YulIf",
															"src": "6329:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:1",
														"nodeType": "YulTypedName",
														"src": "6134:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:1",
														"nodeType": "YulTypedName",
														"src": "6143:6:1",
														"type": ""
													}
												],
												"src": "6099:320:1"
											},
											{
												"body": {
													"nativeSrc": "6531:60:1",
													"nodeType": "YulBlock",
													"src": "6531:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:1"
																		},
																		"nativeSrc": "6549:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:1"
																	},
																	{
																		"hexValue": "53656e6465722069732066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "6565:18:1",
																		"nodeType": "YulLiteral",
																		"src": "6565:18:1",
																		"type": "",
																		"value": "Sender is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:1"
																},
																"nativeSrc": "6542:42:1",
																"nodeType": "YulFunctionCall",
																"src": "6542:42:1"
															},
															"nativeSrc": "6542:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "6542:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
												"nativeSrc": "6425:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:1",
														"nodeType": "YulTypedName",
														"src": "6523:6:1",
														"type": ""
													}
												],
												"src": "6425:166:1"
											},
											{
												"body": {
													"nativeSrc": "6743:220:1",
													"nodeType": "YulBlock",
													"src": "6743:220:1",
													"statements": [
														{
															"nativeSrc": "6753:74:1",
															"nodeType": "YulAssignment",
															"src": "6753:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6819:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6819:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6824:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6760:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6760:58:1"
																},
																"nativeSrc": "6760:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6760:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6753:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6753:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6925:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6925:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																	"nativeSrc": "6836:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6836:88:1"
																},
																"nativeSrc": "6836:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6836:93:1"
															},
															"nativeSrc": "6836:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6836:93:1"
														},
														{
															"nativeSrc": "6938:19:1",
															"nodeType": "YulAssignment",
															"src": "6938:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6949:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6949:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6954:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6945:3:1"
																},
																"nativeSrc": "6945:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6945:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6938:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6938:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6597:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6731:3:1",
														"nodeType": "YulTypedName",
														"src": "6731:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6739:3:1",
														"nodeType": "YulTypedName",
														"src": "6739:3:1",
														"type": ""
													}
												],
												"src": "6597:366:1"
											},
											{
												"body": {
													"nativeSrc": "7140:248:1",
													"nodeType": "YulBlock",
													"src": "7140:248:1",
													"statements": [
														{
															"nativeSrc": "7150:26:1",
															"nodeType": "YulAssignment",
															"src": "7150:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7162:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7162:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7173:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7173:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7158:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:1"
																},
																"nativeSrc": "7158:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7158:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7150:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7150:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7197:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7197:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7208:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7208:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7193:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7193:3:1"
																		},
																		"nativeSrc": "7193:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7193:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7216:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7216:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7222:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7212:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7212:3:1"
																		},
																		"nativeSrc": "7212:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7186:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:1"
																},
																"nativeSrc": "7186:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7186:47:1"
															},
															"nativeSrc": "7186:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7186:47:1"
														},
														{
															"nativeSrc": "7242:139:1",
															"nodeType": "YulAssignment",
															"src": "7242:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7376:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7376:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7250:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7250:124:1"
																},
																"nativeSrc": "7250:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7250:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7242:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7242:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6969:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7120:9:1",
														"nodeType": "YulTypedName",
														"src": "7120:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7135:4:1",
														"nodeType": "YulTypedName",
														"src": "7135:4:1",
														"type": ""
													}
												],
												"src": "6969:419:1"
											},
											{
												"body": {
													"nativeSrc": "7500:69:1",
													"nodeType": "YulBlock",
													"src": "7500:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7522:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7522:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7530:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7530:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7518:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:1"
																		},
																		"nativeSrc": "7518:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7518:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
																		"kind": "string",
																		"nativeSrc": "7534:27:1",
																		"nodeType": "YulLiteral",
																		"src": "7534:27:1",
																		"type": "",
																		"value": "Amount must be an integer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7511:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7511:6:1"
																},
																"nativeSrc": "7511:51:1",
																"nodeType": "YulFunctionCall",
																"src": "7511:51:1"
															},
															"nativeSrc": "7511:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "7511:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
												"nativeSrc": "7394:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7492:6:1",
														"nodeType": "YulTypedName",
														"src": "7492:6:1",
														"type": ""
													}
												],
												"src": "7394:175:1"
											},
											{
												"body": {
													"nativeSrc": "7721:220:1",
													"nodeType": "YulBlock",
													"src": "7721:220:1",
													"statements": [
														{
															"nativeSrc": "7731:74:1",
															"nodeType": "YulAssignment",
															"src": "7731:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7797:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7797:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7802:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7738:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7738:58:1"
																},
																"nativeSrc": "7738:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7738:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7731:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7903:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7903:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																	"nativeSrc": "7814:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7814:88:1"
																},
																"nativeSrc": "7814:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7814:93:1"
															},
															"nativeSrc": "7814:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7814:93:1"
														},
														{
															"nativeSrc": "7916:19:1",
															"nodeType": "YulAssignment",
															"src": "7916:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7927:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7927:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7923:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7923:3:1"
																},
																"nativeSrc": "7923:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7923:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7575:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7709:3:1",
														"nodeType": "YulTypedName",
														"src": "7709:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7717:3:1",
														"nodeType": "YulTypedName",
														"src": "7717:3:1",
														"type": ""
													}
												],
												"src": "7575:366:1"
											},
											{
												"body": {
													"nativeSrc": "8118:248:1",
													"nodeType": "YulBlock",
													"src": "8118:248:1",
													"statements": [
														{
															"nativeSrc": "8128:26:1",
															"nodeType": "YulAssignment",
															"src": "8128:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8140:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8140:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8151:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8136:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8136:3:1"
																},
																"nativeSrc": "8136:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8136:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8128:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8128:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8175:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8186:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8186:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8171:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:1"
																		},
																		"nativeSrc": "8171:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8171:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8194:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8194:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8200:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8200:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:1"
																		},
																		"nativeSrc": "8190:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:1"
																},
																"nativeSrc": "8164:47:1",
																"nodeType": "YulFunctionCall",
																"src": "8164:47:1"
															},
															"nativeSrc": "8164:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "8164:47:1"
														},
														{
															"nativeSrc": "8220:139:1",
															"nodeType": "YulAssignment",
															"src": "8220:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8354:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8354:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8228:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "8228:124:1"
																},
																"nativeSrc": "8228:131:1",
																"nodeType": "YulFunctionCall",
																"src": "8228:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8220:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8220:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7947:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8098:9:1",
														"nodeType": "YulTypedName",
														"src": "8098:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8113:4:1",
														"nodeType": "YulTypedName",
														"src": "8113:4:1",
														"type": ""
													}
												],
												"src": "7947:419:1"
											},
											{
												"body": {
													"nativeSrc": "8478:59:1",
													"nodeType": "YulBlock",
													"src": "8478:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8500:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8500:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8508:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8508:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:1"
																		},
																		"nativeSrc": "8496:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:14:1"
																	},
																	{
																		"hexValue": "4e6f742077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "8512:17:1",
																		"nodeType": "YulLiteral",
																		"src": "8512:17:1",
																		"type": "",
																		"value": "Not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8489:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8489:6:1"
																},
																"nativeSrc": "8489:41:1",
																"nodeType": "YulFunctionCall",
																"src": "8489:41:1"
															},
															"nativeSrc": "8489:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "8489:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
												"nativeSrc": "8372:165:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8470:6:1",
														"nodeType": "YulTypedName",
														"src": "8470:6:1",
														"type": ""
													}
												],
												"src": "8372:165:1"
											},
											{
												"body": {
													"nativeSrc": "8689:220:1",
													"nodeType": "YulBlock",
													"src": "8689:220:1",
													"statements": [
														{
															"nativeSrc": "8699:74:1",
															"nodeType": "YulAssignment",
															"src": "8699:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8765:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8765:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8770:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8770:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8706:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8706:58:1"
																},
																"nativeSrc": "8706:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8706:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8699:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8699:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8871:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8871:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																	"nativeSrc": "8782:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "8782:88:1"
																},
																"nativeSrc": "8782:93:1",
																"nodeType": "YulFunctionCall",
																"src": "8782:93:1"
															},
															"nativeSrc": "8782:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "8782:93:1"
														},
														{
															"nativeSrc": "8884:19:1",
															"nodeType": "YulAssignment",
															"src": "8884:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8895:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8895:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8900:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8900:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8891:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8891:3:1"
																},
																"nativeSrc": "8891:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8891:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8884:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8884:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8543:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8677:3:1",
														"nodeType": "YulTypedName",
														"src": "8677:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8685:3:1",
														"nodeType": "YulTypedName",
														"src": "8685:3:1",
														"type": ""
													}
												],
												"src": "8543:366:1"
											},
											{
												"body": {
													"nativeSrc": "9086:248:1",
													"nodeType": "YulBlock",
													"src": "9086:248:1",
													"statements": [
														{
															"nativeSrc": "9096:26:1",
															"nodeType": "YulAssignment",
															"src": "9096:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9108:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9108:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9119:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9119:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9104:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9104:3:1"
																},
																"nativeSrc": "9104:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9104:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9096:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9096:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9154:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9154:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9139:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:1"
																		},
																		"nativeSrc": "9139:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9139:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9162:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9168:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9168:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9158:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:1"
																		},
																		"nativeSrc": "9158:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9132:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:1"
																},
																"nativeSrc": "9132:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9132:47:1"
															},
															"nativeSrc": "9132:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9132:47:1"
														},
														{
															"nativeSrc": "9188:139:1",
															"nodeType": "YulAssignment",
															"src": "9188:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9322:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9322:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9196:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9196:124:1"
																},
																"nativeSrc": "9196:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9196:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9188:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8915:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9066:9:1",
														"nodeType": "YulTypedName",
														"src": "9066:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9081:4:1",
														"nodeType": "YulTypedName",
														"src": "9081:4:1",
														"type": ""
													}
												],
												"src": "8915:419:1"
											},
											{
												"body": {
													"nativeSrc": "9368:152:1",
													"nodeType": "YulBlock",
													"src": "9368:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9385:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9388:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9388:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9378:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9378:6:1"
																},
																"nativeSrc": "9378:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9378:88:1"
															},
															"nativeSrc": "9378:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9378:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9482:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9482:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9485:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9485:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9475:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9475:6:1"
																},
																"nativeSrc": "9475:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9475:15:1"
															},
															"nativeSrc": "9475:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9475:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9506:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9506:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9509:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9509:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:1"
																},
																"nativeSrc": "9499:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9499:15:1"
															},
															"nativeSrc": "9499:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9499:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9340:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9340:180:1"
											},
											{
												"body": {
													"nativeSrc": "9570:147:1",
													"nodeType": "YulBlock",
													"src": "9570:147:1",
													"statements": [
														{
															"nativeSrc": "9580:25:1",
															"nodeType": "YulAssignment",
															"src": "9580:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9603:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9603:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9585:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9585:17:1"
																},
																"nativeSrc": "9585:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9585:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9580:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9580:1:1"
																}
															]
														},
														{
															"nativeSrc": "9614:25:1",
															"nodeType": "YulAssignment",
															"src": "9614:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9637:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9637:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9619:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9619:17:1"
																},
																"nativeSrc": "9619:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9619:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9614:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9614:1:1"
																}
															]
														},
														{
															"nativeSrc": "9648:16:1",
															"nodeType": "YulAssignment",
															"src": "9648:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9659:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9659:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9662:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9662:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9655:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9655:3:1"
																},
																"nativeSrc": "9655:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9655:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9648:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9688:22:1",
																"nodeType": "YulBlock",
																"src": "9688:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9690:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9690:16:1"
																			},
																			"nativeSrc": "9690:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9690:18:1"
																		},
																		"nativeSrc": "9690:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9690:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9680:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9680:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9683:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9683:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9677:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9677:2:1"
																},
																"nativeSrc": "9677:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9677:10:1"
															},
															"nativeSrc": "9674:36:1",
															"nodeType": "YulIf",
															"src": "9674:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9526:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9557:1:1",
														"nodeType": "YulTypedName",
														"src": "9557:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9560:1:1",
														"nodeType": "YulTypedName",
														"src": "9560:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9566:3:1",
														"nodeType": "YulTypedName",
														"src": "9566:3:1",
														"type": ""
													}
												],
												"src": "9526:191:1"
											},
											{
												"body": {
													"nativeSrc": "9829:65:1",
													"nodeType": "YulBlock",
													"src": "9829:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9851:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9851:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9859:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9859:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9847:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9847:3:1"
																		},
																		"nativeSrc": "9847:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9847:14:1"
																	},
																	{
																		"hexValue": "546f74616c20737570706c79206578636565646564",
																		"kind": "string",
																		"nativeSrc": "9863:23:1",
																		"nodeType": "YulLiteral",
																		"src": "9863:23:1",
																		"type": "",
																		"value": "Total supply exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9840:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9840:6:1"
																},
																"nativeSrc": "9840:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9840:47:1"
															},
															"nativeSrc": "9840:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9840:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
												"nativeSrc": "9723:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9821:6:1",
														"nodeType": "YulTypedName",
														"src": "9821:6:1",
														"type": ""
													}
												],
												"src": "9723:171:1"
											},
											{
												"body": {
													"nativeSrc": "10046:220:1",
													"nodeType": "YulBlock",
													"src": "10046:220:1",
													"statements": [
														{
															"nativeSrc": "10056:74:1",
															"nodeType": "YulAssignment",
															"src": "10056:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10122:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10122:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10127:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10127:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10063:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "10063:58:1"
																},
																"nativeSrc": "10063:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10063:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10056:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10056:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10228:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10228:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																	"nativeSrc": "10139:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10139:88:1"
																},
																"nativeSrc": "10139:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10139:93:1"
															},
															"nativeSrc": "10139:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10139:93:1"
														},
														{
															"nativeSrc": "10241:19:1",
															"nodeType": "YulAssignment",
															"src": "10241:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10252:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10252:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10248:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10248:3:1"
																},
																"nativeSrc": "10248:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10248:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10241:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9900:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10034:3:1",
														"nodeType": "YulTypedName",
														"src": "10034:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10042:3:1",
														"nodeType": "YulTypedName",
														"src": "10042:3:1",
														"type": ""
													}
												],
												"src": "9900:366:1"
											},
											{
												"body": {
													"nativeSrc": "10443:248:1",
													"nodeType": "YulBlock",
													"src": "10443:248:1",
													"statements": [
														{
															"nativeSrc": "10453:26:1",
															"nodeType": "YulAssignment",
															"src": "10453:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10465:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10465:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10476:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10476:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10461:3:1"
																},
																"nativeSrc": "10461:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10461:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10453:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10453:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10511:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10511:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10496:3:1"
																		},
																		"nativeSrc": "10496:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10496:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10519:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10519:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10525:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10525:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10515:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10515:3:1"
																		},
																		"nativeSrc": "10515:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10515:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10489:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10489:6:1"
																},
																"nativeSrc": "10489:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10489:47:1"
															},
															"nativeSrc": "10489:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10489:47:1"
														},
														{
															"nativeSrc": "10545:139:1",
															"nodeType": "YulAssignment",
															"src": "10545:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10679:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10679:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10553:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10553:124:1"
																},
																"nativeSrc": "10553:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10553:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10545:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10545:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10272:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10423:9:1",
														"nodeType": "YulTypedName",
														"src": "10423:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10438:4:1",
														"nodeType": "YulTypedName",
														"src": "10438:4:1",
														"type": ""
													}
												],
												"src": "10272:419:1"
											},
											{
												"body": {
													"nativeSrc": "10742:149:1",
													"nodeType": "YulBlock",
													"src": "10742:149:1",
													"statements": [
														{
															"nativeSrc": "10752:25:1",
															"nodeType": "YulAssignment",
															"src": "10752:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10775:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10775:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10757:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10757:17:1"
																},
																"nativeSrc": "10757:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10757:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10752:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10752:1:1"
																}
															]
														},
														{
															"nativeSrc": "10786:25:1",
															"nodeType": "YulAssignment",
															"src": "10786:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10809:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10809:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10791:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10791:17:1"
																},
																"nativeSrc": "10791:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10791:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10786:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10786:1:1"
																}
															]
														},
														{
															"nativeSrc": "10820:17:1",
															"nodeType": "YulAssignment",
															"src": "10820:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10832:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10832:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10835:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10835:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10828:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:1"
																},
																"nativeSrc": "10828:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10828:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10820:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10820:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10862:22:1",
																"nodeType": "YulBlock",
																"src": "10862:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10864:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10864:16:1"
																			},
																			"nativeSrc": "10864:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10864:18:1"
																		},
																		"nativeSrc": "10864:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10864:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10853:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10853:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10859:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10859:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10850:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10850:2:1"
																},
																"nativeSrc": "10850:11:1",
																"nodeType": "YulFunctionCall",
																"src": "10850:11:1"
															},
															"nativeSrc": "10847:37:1",
															"nodeType": "YulIf",
															"src": "10847:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10697:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10728:1:1",
														"nodeType": "YulTypedName",
														"src": "10728:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10731:1:1",
														"nodeType": "YulTypedName",
														"src": "10731:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10737:4:1",
														"nodeType": "YulTypedName",
														"src": "10737:4:1",
														"type": ""
													}
												],
												"src": "10697:194:1"
											},
											{
												"body": {
													"nativeSrc": "10940:79:1",
													"nodeType": "YulBlock",
													"src": "10940:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10997:16:1",
																"nodeType": "YulBlock",
																"src": "10997:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11006:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11006:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11009:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11009:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10999:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10999:6:1"
																			},
																			"nativeSrc": "10999:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10999:12:1"
																		},
																		"nativeSrc": "10999:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10999:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10963:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10963:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10988:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10988:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "10970:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "10970:17:1"
																				},
																				"nativeSrc": "10970:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10970:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10960:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10960:2:1"
																		},
																		"nativeSrc": "10960:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:1"
																},
																"nativeSrc": "10953:43:1",
																"nodeType": "YulFunctionCall",
																"src": "10953:43:1"
															},
															"nativeSrc": "10950:63:1",
															"nodeType": "YulIf",
															"src": "10950:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "10897:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10933:5:1",
														"nodeType": "YulTypedName",
														"src": "10933:5:1",
														"type": ""
													}
												],
												"src": "10897:122:1"
											},
											{
												"body": {
													"nativeSrc": "11088:80:1",
													"nodeType": "YulBlock",
													"src": "11088:80:1",
													"statements": [
														{
															"nativeSrc": "11098:22:1",
															"nodeType": "YulAssignment",
															"src": "11098:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11113:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11113:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11107:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11107:5:1"
																},
																"nativeSrc": "11107:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11107:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11098:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11098:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11156:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11156:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "11129:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "11129:26:1"
																},
																"nativeSrc": "11129:33:1",
																"nodeType": "YulFunctionCall",
																"src": "11129:33:1"
															},
															"nativeSrc": "11129:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "11129:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "11025:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11066:6:1",
														"nodeType": "YulTypedName",
														"src": "11066:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11074:3:1",
														"nodeType": "YulTypedName",
														"src": "11074:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11082:5:1",
														"nodeType": "YulTypedName",
														"src": "11082:5:1",
														"type": ""
													}
												],
												"src": "11025:143:1"
											},
											{
												"body": {
													"nativeSrc": "11217:47:1",
													"nodeType": "YulBlock",
													"src": "11217:47:1",
													"statements": [
														{
															"nativeSrc": "11227:31:1",
															"nodeType": "YulAssignment",
															"src": "11227:31:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11249:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11249:1:1",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11252:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11252:5:1"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "11238:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "11238:10:1"
																},
																"nativeSrc": "11238:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11238:20:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11227:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "11227:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "11174:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11199:5:1",
														"nodeType": "YulTypedName",
														"src": "11199:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11209:7:1",
														"nodeType": "YulTypedName",
														"src": "11209:7:1",
														"type": ""
													}
												],
												"src": "11174:90:1"
											},
											{
												"body": {
													"nativeSrc": "11311:77:1",
													"nodeType": "YulBlock",
													"src": "11311:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11366:16:1",
																"nodeType": "YulBlock",
																"src": "11366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11378:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11368:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11368:6:1"
																			},
																			"nativeSrc": "11368:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11368:12:1"
																		},
																		"nativeSrc": "11368:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11334:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11334:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11357:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "11357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "11341:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "11341:15:1"
																				},
																				"nativeSrc": "11341:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11341:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11331:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11331:2:1"
																		},
																		"nativeSrc": "11331:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11331:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11324:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11324:6:1"
																},
																"nativeSrc": "11324:41:1",
																"nodeType": "YulFunctionCall",
																"src": "11324:41:1"
															},
															"nativeSrc": "11321:61:1",
															"nodeType": "YulIf",
															"src": "11321:61:1"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "11270:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11304:5:1",
														"nodeType": "YulTypedName",
														"src": "11304:5:1",
														"type": ""
													}
												],
												"src": "11270:118:1"
											},
											{
												"body": {
													"nativeSrc": "11455:78:1",
													"nodeType": "YulBlock",
													"src": "11455:78:1",
													"statements": [
														{
															"nativeSrc": "11465:22:1",
															"nodeType": "YulAssignment",
															"src": "11465:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11480:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11480:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11474:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11474:5:1"
																},
																"nativeSrc": "11474:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11474:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11465:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11465:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11521:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "11496:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "11496:24:1"
																},
																"nativeSrc": "11496:31:1",
																"nodeType": "YulFunctionCall",
																"src": "11496:31:1"
															},
															"nativeSrc": "11496:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "11496:31:1"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "11394:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11433:6:1",
														"nodeType": "YulTypedName",
														"src": "11433:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11441:3:1",
														"nodeType": "YulTypedName",
														"src": "11441:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11449:5:1",
														"nodeType": "YulTypedName",
														"src": "11449:5:1",
														"type": ""
													}
												],
												"src": "11394:139:1"
											},
											{
												"body": {
													"nativeSrc": "11583:45:1",
													"nodeType": "YulBlock",
													"src": "11583:45:1",
													"statements": [
														{
															"nativeSrc": "11593:29:1",
															"nodeType": "YulAssignment",
															"src": "11593:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11608:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11608:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11615:6:1",
																		"nodeType": "YulLiteral",
																		"src": "11615:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11604:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:1"
																},
																"nativeSrc": "11604:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11604:18:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11593:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "11593:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "11539:89:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11565:5:1",
														"nodeType": "YulTypedName",
														"src": "11565:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11575:7:1",
														"nodeType": "YulTypedName",
														"src": "11575:7:1",
														"type": ""
													}
												],
												"src": "11539:89:1"
											},
											{
												"body": {
													"nativeSrc": "11676:78:1",
													"nodeType": "YulBlock",
													"src": "11676:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11732:16:1",
																"nodeType": "YulBlock",
																"src": "11732:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11741:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11741:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11744:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11744:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11734:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11734:6:1"
																			},
																			"nativeSrc": "11734:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11734:12:1"
																		},
																		"nativeSrc": "11734:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11734:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11699:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11699:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11723:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "11723:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "11706:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "11706:16:1"
																				},
																				"nativeSrc": "11706:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11706:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11696:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11696:2:1"
																		},
																		"nativeSrc": "11696:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11696:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11689:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11689:6:1"
																},
																"nativeSrc": "11689:42:1",
																"nodeType": "YulFunctionCall",
																"src": "11689:42:1"
															},
															"nativeSrc": "11686:62:1",
															"nodeType": "YulIf",
															"src": "11686:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "11634:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11669:5:1",
														"nodeType": "YulTypedName",
														"src": "11669:5:1",
														"type": ""
													}
												],
												"src": "11634:120:1"
											},
											{
												"body": {
													"nativeSrc": "11822:79:1",
													"nodeType": "YulBlock",
													"src": "11822:79:1",
													"statements": [
														{
															"nativeSrc": "11832:22:1",
															"nodeType": "YulAssignment",
															"src": "11832:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11847:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11841:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11841:5:1"
																},
																"nativeSrc": "11841:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11841:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11832:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11832:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11889:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11889:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "11863:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "11863:25:1"
																},
																"nativeSrc": "11863:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11863:32:1"
															},
															"nativeSrc": "11863:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "11863:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "11760:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11800:6:1",
														"nodeType": "YulTypedName",
														"src": "11800:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11808:3:1",
														"nodeType": "YulTypedName",
														"src": "11808:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11816:5:1",
														"nodeType": "YulTypedName",
														"src": "11816:5:1",
														"type": ""
													}
												],
												"src": "11760:141:1"
											},
											{
												"body": {
													"nativeSrc": "11948:77:1",
													"nodeType": "YulBlock",
													"src": "11948:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12003:16:1",
																"nodeType": "YulBlock",
																"src": "12003:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12012:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12012:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12015:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12015:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12005:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12005:6:1"
																			},
																			"nativeSrc": "12005:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12005:12:1"
																		},
																		"nativeSrc": "12005:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12005:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11971:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11971:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11994:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "11994:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "11978:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "11978:15:1"
																				},
																				"nativeSrc": "11978:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11978:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11968:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11968:2:1"
																		},
																		"nativeSrc": "11968:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11968:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:1"
																},
																"nativeSrc": "11961:41:1",
																"nodeType": "YulFunctionCall",
																"src": "11961:41:1"
															},
															"nativeSrc": "11958:61:1",
															"nodeType": "YulIf",
															"src": "11958:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "11907:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11941:5:1",
														"nodeType": "YulTypedName",
														"src": "11941:5:1",
														"type": ""
													}
												],
												"src": "11907:118:1"
											},
											{
												"body": {
													"nativeSrc": "12092:78:1",
													"nodeType": "YulBlock",
													"src": "12092:78:1",
													"statements": [
														{
															"nativeSrc": "12102:22:1",
															"nodeType": "YulAssignment",
															"src": "12102:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12117:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12117:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12111:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12111:5:1"
																},
																"nativeSrc": "12111:13:1",
																"nodeType": "YulFunctionCall",
																"src": "12111:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12102:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12102:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12158:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12158:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "12133:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "12133:24:1"
																},
																"nativeSrc": "12133:31:1",
																"nodeType": "YulFunctionCall",
																"src": "12133:31:1"
															},
															"nativeSrc": "12133:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "12133:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "12031:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12070:6:1",
														"nodeType": "YulTypedName",
														"src": "12070:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12078:3:1",
														"nodeType": "YulTypedName",
														"src": "12078:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12086:5:1",
														"nodeType": "YulTypedName",
														"src": "12086:5:1",
														"type": ""
													}
												],
												"src": "12031:139:1"
											},
											{
												"body": {
													"nativeSrc": "12216:76:1",
													"nodeType": "YulBlock",
													"src": "12216:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12270:16:1",
																"nodeType": "YulBlock",
																"src": "12270:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12279:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12279:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12282:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12282:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12272:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12272:6:1"
																			},
																			"nativeSrc": "12272:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12272:12:1"
																		},
																		"nativeSrc": "12272:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12272:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12239:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12239:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12261:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "12261:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12246:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "12246:14:1"
																				},
																				"nativeSrc": "12246:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12246:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12236:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12236:2:1"
																		},
																		"nativeSrc": "12236:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12236:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12229:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12229:6:1"
																},
																"nativeSrc": "12229:40:1",
																"nodeType": "YulFunctionCall",
																"src": "12229:40:1"
															},
															"nativeSrc": "12226:60:1",
															"nodeType": "YulIf",
															"src": "12226:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12176:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12209:5:1",
														"nodeType": "YulTypedName",
														"src": "12209:5:1",
														"type": ""
													}
												],
												"src": "12176:116:1"
											},
											{
												"body": {
													"nativeSrc": "12358:77:1",
													"nodeType": "YulBlock",
													"src": "12358:77:1",
													"statements": [
														{
															"nativeSrc": "12368:22:1",
															"nodeType": "YulAssignment",
															"src": "12368:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12383:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12383:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12377:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12377:5:1"
																},
																"nativeSrc": "12377:13:1",
																"nodeType": "YulFunctionCall",
																"src": "12377:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12368:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12368:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12423:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12423:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12399:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "12399:23:1"
																},
																"nativeSrc": "12399:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12399:30:1"
															},
															"nativeSrc": "12399:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12399:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12298:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12336:6:1",
														"nodeType": "YulTypedName",
														"src": "12336:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12344:3:1",
														"nodeType": "YulTypedName",
														"src": "12344:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12352:5:1",
														"nodeType": "YulTypedName",
														"src": "12352:5:1",
														"type": ""
													}
												],
												"src": "12298:137:1"
											},
											{
												"body": {
													"nativeSrc": "12610:1102:1",
													"nodeType": "YulBlock",
													"src": "12610:1102:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12657:83:1",
																"nodeType": "YulBlock",
																"src": "12657:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12659:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12659:77:1"
																			},
																			"nativeSrc": "12659:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12659:79:1"
																		},
																		"nativeSrc": "12659:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12659:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12631:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12631:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12640:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12640:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12627:3:1"
																		},
																		"nativeSrc": "12627:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12627:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12652:3:1",
																		"nodeType": "YulLiteral",
																		"src": "12652:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12623:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12623:3:1"
																},
																"nativeSrc": "12623:33:1",
																"nodeType": "YulFunctionCall",
																"src": "12623:33:1"
															},
															"nativeSrc": "12620:120:1",
															"nodeType": "YulIf",
															"src": "12620:120:1"
														},
														{
															"nativeSrc": "12750:128:1",
															"nodeType": "YulBlock",
															"src": "12750:128:1",
															"statements": [
																{
																	"nativeSrc": "12765:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12765:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12779:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12779:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12769:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12769:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12794:74:1",
																	"nodeType": "YulAssignment",
																	"src": "12794:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12840:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12840:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12851:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12836:3:1"
																				},
																				"nativeSrc": "12836:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12860:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "12804:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "12804:31:1"
																		},
																		"nativeSrc": "12804:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12804:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12794:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12794:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12888:127:1",
															"nodeType": "YulBlock",
															"src": "12888:127:1",
															"statements": [
																{
																	"nativeSrc": "12903:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12903:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12907:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12933:72:1",
																	"nodeType": "YulAssignment",
																	"src": "12933:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12977:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12977:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12988:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12988:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12973:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12973:3:1"
																				},
																				"nativeSrc": "12973:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12973:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12997:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12997:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "12943:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "12943:29:1"
																		},
																		"nativeSrc": "12943:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12943:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12933:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13025:128:1",
															"nodeType": "YulBlock",
															"src": "13025:128:1",
															"statements": [
																{
																	"nativeSrc": "13040:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13040:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13054:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13044:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13044:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13070:73:1",
																	"nodeType": "YulAssignment",
																	"src": "13070:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13115:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13115:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13126:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13126:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13111:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13111:3:1"
																				},
																				"nativeSrc": "13111:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13111:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13135:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13135:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "13080:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "13080:30:1"
																		},
																		"nativeSrc": "13080:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13080:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13070:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13070:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13163:128:1",
															"nodeType": "YulBlock",
															"src": "13163:128:1",
															"statements": [
																{
																	"nativeSrc": "13178:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13178:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13192:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13192:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13182:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13182:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13208:73:1",
																	"nodeType": "YulAssignment",
																	"src": "13208:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13253:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13253:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13264:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13264:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13249:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13249:3:1"
																				},
																				"nativeSrc": "13249:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13249:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13273:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13273:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "13218:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "13218:30:1"
																		},
																		"nativeSrc": "13218:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13218:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13208:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13208:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13301:129:1",
															"nodeType": "YulBlock",
															"src": "13301:129:1",
															"statements": [
																{
																	"nativeSrc": "13316:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13316:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13330:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13330:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13320:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13320:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13347:73:1",
																	"nodeType": "YulAssignment",
																	"src": "13347:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13392:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13392:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13403:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13403:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13388:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13388:3:1"
																				},
																				"nativeSrc": "13388:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13388:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13412:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13412:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "13357:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "13357:30:1"
																		},
																		"nativeSrc": "13357:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13357:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13347:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13347:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13440:128:1",
															"nodeType": "YulBlock",
															"src": "13440:128:1",
															"statements": [
																{
																	"nativeSrc": "13455:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13455:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13469:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13469:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13459:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13459:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13486:72:1",
																	"nodeType": "YulAssignment",
																	"src": "13486:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13530:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13530:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13541:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13541:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13526:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13526:3:1"
																				},
																				"nativeSrc": "13526:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13526:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13550:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13550:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "13496:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "13496:29:1"
																		},
																		"nativeSrc": "13496:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13496:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "13486:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13486:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13578:127:1",
															"nodeType": "YulBlock",
															"src": "13578:127:1",
															"statements": [
																{
																	"nativeSrc": "13593:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13593:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13607:3:1",
																		"nodeType": "YulLiteral",
																		"src": "13607:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13597:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13597:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13624:71:1",
																	"nodeType": "YulAssignment",
																	"src": "13624:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13667:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13667:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13678:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13678:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13663:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13663:3:1"
																				},
																				"nativeSrc": "13663:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13663:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13687:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13687:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13634:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "13634:28:1"
																		},
																		"nativeSrc": "13634:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13634:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "13624:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13624:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "12441:1271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12532:9:1",
														"nodeType": "YulTypedName",
														"src": "12532:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12543:7:1",
														"nodeType": "YulTypedName",
														"src": "12543:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12555:6:1",
														"nodeType": "YulTypedName",
														"src": "12555:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12563:6:1",
														"nodeType": "YulTypedName",
														"src": "12563:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12571:6:1",
														"nodeType": "YulTypedName",
														"src": "12571:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12579:6:1",
														"nodeType": "YulTypedName",
														"src": "12579:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12587:6:1",
														"nodeType": "YulTypedName",
														"src": "12587:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12595:6:1",
														"nodeType": "YulTypedName",
														"src": "12595:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "12603:6:1",
														"nodeType": "YulTypedName",
														"src": "12603:6:1",
														"type": ""
													}
												],
												"src": "12441:1271:1"
											},
											{
												"body": {
													"nativeSrc": "13769:51:1",
													"nodeType": "YulBlock",
													"src": "13769:51:1",
													"statements": [
														{
															"nativeSrc": "13779:34:1",
															"nodeType": "YulAssignment",
															"src": "13779:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13804:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13804:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13807:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13807:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13800:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13800:3:1"
																},
																"nativeSrc": "13800:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13800:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13779:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "13779:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "13718:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13750:5:1",
														"nodeType": "YulTypedName",
														"src": "13750:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13760:8:1",
														"nodeType": "YulTypedName",
														"src": "13760:8:1",
														"type": ""
													}
												],
												"src": "13718:102:1"
											},
											{
												"body": {
													"nativeSrc": "13899:775:1",
													"nodeType": "YulBlock",
													"src": "13899:775:1",
													"statements": [
														{
															"nativeSrc": "13909:15:1",
															"nodeType": "YulAssignment",
															"src": "13909:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "13918:6:1",
																"nodeType": "YulIdentifier",
																"src": "13918:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13909:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13909:5:1"
																}
															]
														},
														{
															"nativeSrc": "13933:14:1",
															"nodeType": "YulAssignment",
															"src": "13933:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "13942:5:1",
																"nodeType": "YulIdentifier",
																"src": "13942:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13933:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13933:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13991:677:1",
																"nodeType": "YulBlock",
																"src": "13991:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "14079:22:1",
																			"nodeType": "YulBlock",
																			"src": "14079:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "14081:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "14081:16:1"
																						},
																						"nativeSrc": "14081:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "14081:18:1"
																					},
																					"nativeSrc": "14081:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "14081:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14057:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "14057:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "14067:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "14067:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "14072:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "14072:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "14063:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "14063:3:1"
																					},
																					"nativeSrc": "14063:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "14063:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14054:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "14054:2:1"
																			},
																			"nativeSrc": "14054:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14054:24:1"
																		},
																		"nativeSrc": "14051:50:1",
																		"nodeType": "YulIf",
																		"src": "14051:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "14146:419:1",
																			"nodeType": "YulBlock",
																			"src": "14146:419:1",
																			"statements": [
																				{
																					"nativeSrc": "14526:25:1",
																					"nodeType": "YulAssignment",
																					"src": "14526:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "14539:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "14539:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "14546:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "14546:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "14535:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "14535:3:1"
																						},
																						"nativeSrc": "14535:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "14535:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "14526:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "14526:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14121:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "14121:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "14131:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14117:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "14117:3:1"
																			},
																			"nativeSrc": "14117:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14117:16:1"
																		},
																		"nativeSrc": "14114:451:1",
																		"nodeType": "YulIf",
																		"src": "14114:451:1"
																	},
																	{
																		"nativeSrc": "14578:23:1",
																		"nodeType": "YulAssignment",
																		"src": "14578:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14590:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "14590:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14596:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "14596:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14586:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "14586:3:1"
																			},
																			"nativeSrc": "14586:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14586:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "14578:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "14578:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14614:44:1",
																		"nodeType": "YulAssignment",
																		"src": "14614:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14649:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "14649:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "14626:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "14626:22:1"
																			},
																			"nativeSrc": "14626:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "14626:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14614:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "14614:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13967:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "13967:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13977:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13977:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13964:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13964:2:1"
																},
																"nativeSrc": "13964:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13964:15:1"
															},
															"nativeSrc": "13956:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13980:2:1",
																"nodeType": "YulBlock",
																"src": "13980:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13960:3:1",
																"nodeType": "YulBlock",
																"src": "13960:3:1",
																"statements": []
															},
															"src": "13956:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13826:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "13854:6:1",
														"nodeType": "YulTypedName",
														"src": "13854:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "13862:5:1",
														"nodeType": "YulTypedName",
														"src": "13862:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13869:8:1",
														"nodeType": "YulTypedName",
														"src": "13869:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "13879:3:1",
														"nodeType": "YulTypedName",
														"src": "13879:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13887:5:1",
														"nodeType": "YulTypedName",
														"src": "13887:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13894:4:1",
														"nodeType": "YulTypedName",
														"src": "13894:4:1",
														"type": ""
													}
												],
												"src": "13826:848:1"
											},
											{
												"body": {
													"nativeSrc": "14740:1013:1",
													"nodeType": "YulBlock",
													"src": "14740:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "14935:20:1",
																"nodeType": "YulBlock",
																"src": "14935:20:1",
																"statements": [
																	{
																		"nativeSrc": "14937:10:1",
																		"nodeType": "YulAssignment",
																		"src": "14937:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14946:1:1",
																			"nodeType": "YulLiteral",
																			"src": "14946:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14937:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14948:5:1",
																		"nodeType": "YulLeave",
																		"src": "14948:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14925:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "14925:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14918:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14918:6:1"
																},
																"nativeSrc": "14918:16:1",
																"nodeType": "YulFunctionCall",
																"src": "14918:16:1"
															},
															"nativeSrc": "14915:40:1",
															"nodeType": "YulIf",
															"src": "14915:40:1"
														},
														{
															"body": {
																"nativeSrc": "14980:20:1",
																"nodeType": "YulBlock",
																"src": "14980:20:1",
																"statements": [
																	{
																		"nativeSrc": "14982:10:1",
																		"nodeType": "YulAssignment",
																		"src": "14982:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14991:1:1",
																			"nodeType": "YulLiteral",
																			"src": "14991:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14982:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14982:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14993:5:1",
																		"nodeType": "YulLeave",
																		"src": "14993:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14974:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14974:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14967:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:1"
																},
																"nativeSrc": "14967:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14967:12:1"
															},
															"nativeSrc": "14964:36:1",
															"nodeType": "YulIf",
															"src": "14964:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15110:20:1",
																		"nodeType": "YulBlock",
																		"src": "15110:20:1",
																		"statements": [
																			{
																				"nativeSrc": "15112:10:1",
																				"nodeType": "YulAssignment",
																				"src": "15112:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15121:1:1",
																					"nodeType": "YulLiteral",
																					"src": "15121:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15112:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "15112:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "15123:5:1",
																				"nodeType": "YulLeave",
																				"src": "15123:5:1"
																			}
																		]
																	},
																	"nativeSrc": "15103:27:1",
																	"nodeType": "YulCase",
																	"src": "15103:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15108:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15108:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15154:176:1",
																		"nodeType": "YulBlock",
																		"src": "15154:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "15189:22:1",
																					"nodeType": "YulBlock",
																					"src": "15189:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15191:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "15191:16:1"
																								},
																								"nativeSrc": "15191:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "15191:18:1"
																							},
																							"nativeSrc": "15191:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "15191:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "15174:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "15174:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15184:3:1",
																							"nodeType": "YulLiteral",
																							"src": "15184:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15171:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "15171:2:1"
																					},
																					"nativeSrc": "15171:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "15171:17:1"
																				},
																				"nativeSrc": "15168:43:1",
																				"nodeType": "YulIf",
																				"src": "15168:43:1"
																			},
																			{
																				"nativeSrc": "15224:25:1",
																				"nodeType": "YulAssignment",
																				"src": "15224:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15237:1:1",
																							"nodeType": "YulLiteral",
																							"src": "15237:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "15240:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "15240:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "15233:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "15233:3:1"
																					},
																					"nativeSrc": "15233:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "15233:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "15224:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15280:22:1",
																					"nodeType": "YulBlock",
																					"src": "15280:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15282:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "15282:16:1"
																								},
																								"nativeSrc": "15282:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "15282:18:1"
																							},
																							"nativeSrc": "15282:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "15282:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "15268:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "15268:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "15275:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "15275:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15265:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "15265:2:1"
																					},
																					"nativeSrc": "15265:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "15265:14:1"
																				},
																				"nativeSrc": "15262:40:1",
																				"nodeType": "YulIf",
																				"src": "15262:40:1"
																			},
																			{
																				"nativeSrc": "15315:5:1",
																				"nodeType": "YulLeave",
																				"src": "15315:5:1"
																			}
																		]
																	},
																	"nativeSrc": "15139:191:1",
																	"nodeType": "YulCase",
																	"src": "15139:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15144:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15144:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "15060:4:1",
																"nodeType": "YulIdentifier",
																"src": "15060:4:1"
															},
															"nativeSrc": "15053:277:1",
															"nodeType": "YulSwitch",
															"src": "15053:277:1"
														},
														{
															"body": {
																"nativeSrc": "15462:123:1",
																"nodeType": "YulBlock",
																"src": "15462:123:1",
																"statements": [
																	{
																		"nativeSrc": "15476:28:1",
																		"nodeType": "YulAssignment",
																		"src": "15476:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15489:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "15489:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "15495:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "15495:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "15485:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15485:3:1"
																			},
																			"nativeSrc": "15485:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15485:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15476:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15476:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15535:22:1",
																			"nodeType": "YulBlock",
																			"src": "15535:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15537:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "15537:16:1"
																						},
																						"nativeSrc": "15537:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "15537:18:1"
																					},
																					"nativeSrc": "15537:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "15537:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "15523:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "15523:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "15530:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "15530:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "15520:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "15520:2:1"
																			},
																			"nativeSrc": "15520:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15520:14:1"
																		},
																		"nativeSrc": "15517:40:1",
																		"nodeType": "YulIf",
																		"src": "15517:40:1"
																	},
																	{
																		"nativeSrc": "15570:5:1",
																		"nodeType": "YulLeave",
																		"src": "15570:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15365:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "15365:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15371:2:1",
																						"nodeType": "YulLiteral",
																						"src": "15371:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15362:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15362:2:1"
																				},
																				"nativeSrc": "15362:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15362:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15379:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "15379:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15389:2:1",
																						"nodeType": "YulLiteral",
																						"src": "15389:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15376:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15376:2:1"
																				},
																				"nativeSrc": "15376:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15376:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15358:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15358:3:1"
																		},
																		"nativeSrc": "15358:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15358:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15414:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "15414:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15420:3:1",
																						"nodeType": "YulLiteral",
																						"src": "15420:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15411:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15411:2:1"
																				},
																				"nativeSrc": "15411:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15411:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15429:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "15429:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15439:2:1",
																						"nodeType": "YulLiteral",
																						"src": "15439:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15426:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15426:2:1"
																				},
																				"nativeSrc": "15426:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15426:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15407:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15407:3:1"
																		},
																		"nativeSrc": "15407:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15407:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15342:2:1"
																},
																"nativeSrc": "15342:111:1",
																"nodeType": "YulFunctionCall",
																"src": "15342:111:1"
															},
															"nativeSrc": "15339:246:1",
															"nodeType": "YulIf",
															"src": "15339:246:1"
														},
														{
															"nativeSrc": "15595:57:1",
															"nodeType": "YulAssignment",
															"src": "15595:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15629:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15629:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15632:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15632:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15638:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15638:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "15648:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15648:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15610:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "15610:18:1"
																},
																"nativeSrc": "15610:42:1",
																"nodeType": "YulFunctionCall",
																"src": "15610:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15595:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15595:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "15602:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15602:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15691:22:1",
																"nodeType": "YulBlock",
																"src": "15691:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15693:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15693:16:1"
																			},
																			"nativeSrc": "15693:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15693:18:1"
																		},
																		"nativeSrc": "15693:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15693:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15668:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15668:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "15679:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15679:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "15684:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15684:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15675:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15675:3:1"
																		},
																		"nativeSrc": "15675:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15675:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15665:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15665:2:1"
																},
																"nativeSrc": "15665:25:1",
																"nodeType": "YulFunctionCall",
																"src": "15665:25:1"
															},
															"nativeSrc": "15662:51:1",
															"nodeType": "YulIf",
															"src": "15662:51:1"
														},
														{
															"nativeSrc": "15722:25:1",
															"nodeType": "YulAssignment",
															"src": "15722:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15735:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15735:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15742:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15742:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15731:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15731:3:1"
																},
																"nativeSrc": "15731:16:1",
																"nodeType": "YulFunctionCall",
																"src": "15731:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15722:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15722:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14680:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14710:4:1",
														"nodeType": "YulTypedName",
														"src": "14710:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14716:8:1",
														"nodeType": "YulTypedName",
														"src": "14716:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "14726:3:1",
														"nodeType": "YulTypedName",
														"src": "14726:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14734:5:1",
														"nodeType": "YulTypedName",
														"src": "14734:5:1",
														"type": ""
													}
												],
												"src": "14680:1073:1"
											},
											{
												"body": {
													"nativeSrc": "15823:217:1",
													"nodeType": "YulBlock",
													"src": "15823:217:1",
													"statements": [
														{
															"nativeSrc": "15833:31:1",
															"nodeType": "YulAssignment",
															"src": "15833:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15859:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15859:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15841:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15841:17:1"
																},
																"nativeSrc": "15841:23:1",
																"nodeType": "YulFunctionCall",
																"src": "15841:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15833:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15833:4:1"
																}
															]
														},
														{
															"nativeSrc": "15873:37:1",
															"nodeType": "YulAssignment",
															"src": "15873:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15901:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15901:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15885:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "15885:15:1"
																},
																"nativeSrc": "15885:25:1",
																"nodeType": "YulFunctionCall",
																"src": "15885:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "15873:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "15873:8:1"
																}
															]
														},
														{
															"nativeSrc": "15920:113:1",
															"nodeType": "YulAssignment",
															"src": "15920:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15950:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15950:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15956:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "15956:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15966:66:1",
																		"nodeType": "YulLiteral",
																		"src": "15966:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15929:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "15929:20:1"
																},
																"nativeSrc": "15929:104:1",
																"nodeType": "YulFunctionCall",
																"src": "15929:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15920:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15920:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "15759:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15798:4:1",
														"nodeType": "YulTypedName",
														"src": "15798:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15804:8:1",
														"nodeType": "YulTypedName",
														"src": "15804:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15817:5:1",
														"nodeType": "YulTypedName",
														"src": "15817:5:1",
														"type": ""
													}
												],
												"src": "15759:281:1"
											},
											{
												"body": {
													"nativeSrc": "16074:152:1",
													"nodeType": "YulBlock",
													"src": "16074:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16091:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16091:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16094:77:1",
																		"nodeType": "YulLiteral",
																		"src": "16094:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16084:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16084:6:1"
																},
																"nativeSrc": "16084:88:1",
																"nodeType": "YulFunctionCall",
																"src": "16084:88:1"
															},
															"nativeSrc": "16084:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "16084:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16188:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16188:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16191:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16191:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16181:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:1"
																},
																"nativeSrc": "16181:15:1",
																"nodeType": "YulFunctionCall",
																"src": "16181:15:1"
															},
															"nativeSrc": "16181:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "16181:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16212:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16212:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16215:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16215:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16205:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16205:6:1"
																},
																"nativeSrc": "16205:15:1",
																"nodeType": "YulFunctionCall",
																"src": "16205:15:1"
															},
															"nativeSrc": "16205:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "16205:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16046:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "16046:180:1"
											},
											{
												"body": {
													"nativeSrc": "16274:143:1",
													"nodeType": "YulBlock",
													"src": "16274:143:1",
													"statements": [
														{
															"nativeSrc": "16284:25:1",
															"nodeType": "YulAssignment",
															"src": "16284:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16307:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16307:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16289:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "16289:17:1"
																},
																"nativeSrc": "16289:20:1",
																"nodeType": "YulFunctionCall",
																"src": "16289:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16284:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "16284:1:1"
																}
															]
														},
														{
															"nativeSrc": "16318:25:1",
															"nodeType": "YulAssignment",
															"src": "16318:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16341:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16341:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16323:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "16323:17:1"
																},
																"nativeSrc": "16323:20:1",
																"nodeType": "YulFunctionCall",
																"src": "16323:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16318:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "16318:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16365:22:1",
																"nodeType": "YulBlock",
																"src": "16365:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16367:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "16367:16:1"
																			},
																			"nativeSrc": "16367:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16367:18:1"
																		},
																		"nativeSrc": "16367:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16367:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16362:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16362:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16355:6:1"
																},
																"nativeSrc": "16355:9:1",
																"nodeType": "YulFunctionCall",
																"src": "16355:9:1"
															},
															"nativeSrc": "16352:35:1",
															"nodeType": "YulIf",
															"src": "16352:35:1"
														},
														{
															"nativeSrc": "16397:14:1",
															"nodeType": "YulAssignment",
															"src": "16397:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16406:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16406:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16409:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16409:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16402:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16402:3:1"
																},
																"nativeSrc": "16402:9:1",
																"nodeType": "YulFunctionCall",
																"src": "16402:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16397:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "16397:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16232:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16263:1:1",
														"nodeType": "YulTypedName",
														"src": "16263:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16266:1:1",
														"nodeType": "YulTypedName",
														"src": "16266:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16272:1:1",
														"nodeType": "YulTypedName",
														"src": "16272:1:1",
														"type": ""
													}
												],
												"src": "16232:185:1"
											},
											{
												"body": {
													"nativeSrc": "16577:288:1",
													"nodeType": "YulBlock",
													"src": "16577:288:1",
													"statements": [
														{
															"nativeSrc": "16587:26:1",
															"nodeType": "YulAssignment",
															"src": "16587:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16599:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16599:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16610:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16610:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16595:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16595:3:1"
																},
																"nativeSrc": "16595:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16595:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16587:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16587:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16667:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16667:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16680:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16680:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16691:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16691:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16676:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16676:3:1"
																		},
																		"nativeSrc": "16676:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16676:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16623:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16623:43:1"
																},
																"nativeSrc": "16623:71:1",
																"nodeType": "YulFunctionCall",
																"src": "16623:71:1"
															},
															"nativeSrc": "16623:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "16623:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16748:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16748:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16761:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16761:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16772:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16772:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16757:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16757:3:1"
																		},
																		"nativeSrc": "16757:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16757:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16704:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16704:43:1"
																},
																"nativeSrc": "16704:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16704:72:1"
															},
															"nativeSrc": "16704:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16704:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16830:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16830:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16843:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16843:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16854:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16854:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16839:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16839:3:1"
																		},
																		"nativeSrc": "16839:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16839:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16786:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16786:43:1"
																},
																"nativeSrc": "16786:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16786:72:1"
															},
															"nativeSrc": "16786:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16786:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16423:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16533:9:1",
														"nodeType": "YulTypedName",
														"src": "16533:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16545:6:1",
														"nodeType": "YulTypedName",
														"src": "16545:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16553:6:1",
														"nodeType": "YulTypedName",
														"src": "16553:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16561:6:1",
														"nodeType": "YulTypedName",
														"src": "16561:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16572:4:1",
														"nodeType": "YulTypedName",
														"src": "16572:4:1",
														"type": ""
													}
												],
												"src": "16423:442:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be an integer\")\n\n    }\n\n    function abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total supply exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101ee575f3560e01c80638da5cb5b1161010d578063d0516650116100a0578063e43252d71161006f578063e43252d7146105c0578063e5839836146105dc578063eb91d37e1461060c578063f2fde38b1461062a576101ee565b8063d051665014610526578063da0239a614610556578063dd62ed3e14610574578063e08ba51a146105a4576101ee565b8063a9059cbb116100dc578063a9059cbb1461049e578063aba63705146104ce578063bdd3d825146104ec578063cb4b73ab1461050a576101ee565b80638da5cb5b14610414578063902d55a51461043257806395d89b41146104505780639b19251a1461046e576101ee565b8063313ce567116101855780636290865d116101545780636290865d146103a057806370a08231146103be578063715018a6146103ee5780638ab1d681146103f8576101ee565b8063313ce5671461032a57806340c10f191461034857806354fd4d50146103645780635c975abb14610382576101ee565b8063158b1a57116101c1578063158b1a571461028e57806318160ddd146102be57806323b872dd146102dc5780632d3802421461030c576101ee565b806306fdde03146101f2578063095ea7b31461021057806312cae7af14610240578063134e18f414610270575b5f5ffd5b6101fa610646565b60405161020791906117e3565b60405180910390f35b61022a60048036038101906102259190611894565b6106d6565b60405161023791906118ec565b60405180910390f35b61025a60048036038101906102559190611905565b6106f8565b604051610267919061193f565b60405180910390f35b610278610709565b6040516102859190611967565b60405180910390f35b6102a860048036038101906102a39190611905565b610710565b6040516102b5919061193f565b60405180910390f35b6102c6610719565b6040516102d3919061193f565b60405180910390f35b6102f660048036038101906102f19190611980565b610722565b60405161030391906118ec565b60405180910390f35b610314610815565b604051610321919061193f565b60405180910390f35b61033261081b565b60405161033f91906119eb565b60405180910390f35b610362600480360381019061035d9190611894565b610822565b005b61036c610933565b60405161037991906117e3565b60405180910390f35b61038a610970565b60405161039791906118ec565b60405180910390f35b6103a8610977565b6040516103b59190611967565b60405180910390f35b6103d860048036038101906103d39190611905565b61097e565b6040516103e5919061193f565b60405180910390f35b6103f66109c3565b005b610412600480360381019061040d9190611905565b6109d6565b005b61041c610a35565b6040516104299190611967565b60405180910390f35b61043a610a5d565b604051610447919061193f565b60405180910390f35b610458610a6b565b60405161046591906117e3565b60405180910390f35b61048860048036038101906104839190611905565b610afb565b60405161049591906118ec565b60405180910390f35b6104b860048036038101906104b39190611894565b610b18565b6040516104c591906118ec565b60405180910390f35b6104d6610c09565b6040516104e39190611967565b60405180910390f35b6104f4610c10565b6040516105019190611967565b60405180910390f35b610524600480360381019061051f9190611905565b610c35565b005b610540600480360381019061053b9190611905565b610c94565b60405161054d91906118ec565b60405180910390f35b61055e610cb1565b60405161056b919061193f565b60405180910390f35b61058e60048036038101906105899190611a04565b610ccf565b60405161059b919061193f565b60405180910390f35b6105be60048036038101906105b99190611905565b610d51565b005b6105da60048036038101906105d59190611905565b610db1565b005b6105f660048036038101906105f19190611905565b610e11565b60405161060391906118ec565b60405180910390f35b610614610e63565b604051610621919061193f565b60405180910390f35b610644600480360381019061063f9190611905565b610f52565b005b60606003805461065590611a6f565b80601f016020809104026020016040519081016040528092919081815260200182805461068190611a6f565b80156106cc5780601f106106a3576101008083540402835291602001916106cc565b820191905f5260205f20905b8154815290600101906020018083116106af57829003601f168201915b5050505050905090565b5f5f6106e0610fd6565b90506106ed818585610fdd565b600191505092915050565b5f6107028261097e565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611b51565b60405180910390fd5b61080c848484610fef565b90509392505050565b60095481565b5f5f905090565b61082a61101d565b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa90611bb9565b60405180910390fd5b6969e10de76676d0800000816009546108cc9190611c04565b111561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611c81565b60405180910390fd5b61091782826110a4565b8060095f8282546109289190611c04565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109cb61101d565b6109d45f611123565b565b6109de61101d565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a7a90611a6f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa690611a6f565b8015610af15780601f10610ac857610100808354040283529160200191610af1565b820191905f5260205f20905b815481529060010190602001808311610ad457829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9a90611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee90611b51565b60405180910390fd5b610c0183836111e6565b905092915050565b5f30905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c3d61101d565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f6009546969e10de76676d0800000610cca9190611c9f565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5961101d565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610db961101d565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610ed3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef79190611dbd565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610f3d9190611f89565b610f479190612000565b905080935050505090565b610f5a61101d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fca575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fc19190611967565b60405180910390fd5b610fd381611123565b50565b5f33905090565b610fea8383836001611208565b505050565b5f5f610ff9610fd6565b90506110068582856113d7565b61101185858561146a565b60019150509392505050565b611025610fd6565b73ffffffffffffffffffffffffffffffffffffffff16611043610a35565b73ffffffffffffffffffffffffffffffffffffffff16146110a257611066610fd6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110999190611967565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611114575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161110b9190611967565b60405180910390fd5b61111f5f838361155a565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6111f0610fd6565b90506111fd81858561146a565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611278575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161126f9190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112e8575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112df9190611967565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113d1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113c8919061193f565b60405180910390a35b50505050565b5f6113e28484610ccf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114645781811015611455578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144c93929190612030565b60405180910390fd5b61146384848484035f611208565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114da575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d19190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115419190611967565b60405180910390fd5b61155583838361155a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115aa578060025f82825461159e9190611c04565b92505081905550611678565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611633578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161162a93929190612030565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116bf578060025f8282540392505081905550611709565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611766919061193f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117b582611773565b6117bf818561177d565b93506117cf81856020860161178d565b6117d88161179b565b840191505092915050565b5f6020820190508181035f8301526117fb81846117ab565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61183082611807565b9050919050565b61184081611826565b811461184a575f5ffd5b50565b5f8135905061185b81611837565b92915050565b5f819050919050565b61187381611861565b811461187d575f5ffd5b50565b5f8135905061188e8161186a565b92915050565b5f5f604083850312156118aa576118a9611803565b5b5f6118b78582860161184d565b92505060206118c885828601611880565b9150509250929050565b5f8115159050919050565b6118e6816118d2565b82525050565b5f6020820190506118ff5f8301846118dd565b92915050565b5f6020828403121561191a57611919611803565b5b5f6119278482850161184d565b91505092915050565b61193981611861565b82525050565b5f6020820190506119525f830184611930565b92915050565b61196181611826565b82525050565b5f60208201905061197a5f830184611958565b92915050565b5f5f5f6060848603121561199757611996611803565b5b5f6119a48682870161184d565b93505060206119b58682870161184d565b92505060406119c686828701611880565b9150509250925092565b5f60ff82169050919050565b6119e5816119d0565b82525050565b5f6020820190506119fe5f8301846119dc565b92915050565b5f5f60408385031215611a1a57611a19611803565b5b5f611a278582860161184d565b9250506020611a388582860161184d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8657607f821691505b602082108103611a9957611a98611a42565b5b50919050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f611ad360108361177d565b9150611ade82611a9f565b602082019050919050565b5f6020820190508181035f830152611b0081611ac7565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611b3b60198361177d565b9150611b4682611b07565b602082019050919050565b5f6020820190508181035f830152611b6881611b2f565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611ba3600f8361177d565b9150611bae82611b6f565b602082019050919050565b5f6020820190508181035f830152611bd081611b97565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0e82611861565b9150611c1983611861565b9250828201905080821115611c3157611c30611bd7565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611c6b60158361177d565b9150611c7682611c37565b602082019050919050565b5f6020820190508181035f830152611c9881611c5f565b9050919050565b5f611ca982611861565b9150611cb483611861565b9250828203905081811115611ccc57611ccb611bd7565b5b92915050565b611cdb81611807565b8114611ce5575f5ffd5b50565b5f81519050611cf681611cd2565b92915050565b5f8160020b9050919050565b611d1181611cfc565b8114611d1b575f5ffd5b50565b5f81519050611d2c81611d08565b92915050565b5f61ffff82169050919050565b611d4881611d32565b8114611d52575f5ffd5b50565b5f81519050611d6381611d3f565b92915050565b611d72816119d0565b8114611d7c575f5ffd5b50565b5f81519050611d8d81611d69565b92915050565b611d9c816118d2565b8114611da6575f5ffd5b50565b5f81519050611db781611d93565b92915050565b5f5f5f5f5f5f5f60e0888a031215611dd857611dd7611803565b5b5f611de58a828b01611ce8565b9750506020611df68a828b01611d1e565b9650506040611e078a828b01611d55565b9550506060611e188a828b01611d55565b9450506080611e298a828b01611d55565b93505060a0611e3a8a828b01611d7f565b92505060c0611e4b8a828b01611da9565b91505092959891949750929550565b5f8160011c9050919050565b5f5f8291508390505b6001851115611eaf57808604811115611e8b57611e8a611bd7565b5b6001851615611e9a5780820291505b8081029050611ea885611e5a565b9450611e6f565b94509492505050565b5f82611ec75760019050611f82565b81611ed4575f9050611f82565b8160018114611eea5760028114611ef457611f23565b6001915050611f82565b60ff841115611f0657611f05611bd7565b5b8360020a915084821115611f1d57611f1c611bd7565b5b50611f82565b5060208310610133831016604e8410600b8410161715611f585782820a905083811115611f5357611f52611bd7565b5b611f82565b611f658484846001611e66565b92509050818404811115611f7c57611f7b611bd7565b5b81810290505b9392505050565b5f611f9382611861565b9150611f9e836119d0565b9250611fcb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611eb8565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61200a82611861565b915061201583611861565b92508261202557612024611fd3565b5b828204905092915050565b5f6060820190506120435f830186611958565b6120506020830185611930565b61205d6040830184611930565b94935050505056fea26469706673582212205da15f9409e8692779431923aac06f9dee197195a035f0b858f90bbac4fe436064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xD0516650 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE43252D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x62A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xD0516650 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x5A4 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x50A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x46E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6290865D GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x3F8 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x382 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x158B1A57 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x30C JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1FA PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36C PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH2 0x9C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55E PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x614 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x655 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x681 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6E0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x6ED DUP2 DUP6 DUP6 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x702 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80C DUP5 DUP5 DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x82A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x9 SLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST GT ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x917 DUP3 DUP3 PUSH2 0x10A4 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CB PUSH2 0x101D JUMP JUMPDEST PUSH2 0x9D4 PUSH0 PUSH2 0x1123 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA7A SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9A SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC01 DUP4 DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD59 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF5A PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD3 DUP2 PUSH2 0x1123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFEA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFF9 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1006 DUP6 DUP3 DUP6 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1011 DUP6 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1025 PUSH2 0xFD6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1043 PUSH2 0xA35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A2 JUMPI PUSH2 0x1066 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1114 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F PUSH0 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x11F0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD DUP2 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1278 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1464 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1455 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1463 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1555 DUP4 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x159E SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1678 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1633 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16BF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1709 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1766 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B5 DUP3 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x17BF DUP2 DUP6 PUSH2 0x177D JUMP JUMPDEST SWAP4 POP PUSH2 0x17CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x179B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17FB DUP2 DUP5 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1830 DUP3 PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1840 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP2 EQ PUSH2 0x184A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185B DUP2 PUSH2 0x1837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1873 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP2 EQ PUSH2 0x187D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188E DUP2 PUSH2 0x186A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH0 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191A JUMPI PUSH2 0x1919 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1927 DUP5 DUP3 DUP6 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1939 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1952 PUSH0 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1961 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197A PUSH0 DUP4 ADD DUP5 PUSH2 0x1958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A4 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FE PUSH0 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD3 PUSH1 0x10 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADE DUP3 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3B PUSH1 0x19 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B46 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B68 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA3 PUSH1 0xF DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BD0 DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0E DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6B PUSH1 0x15 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C76 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA9 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCB PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDB DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF6 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D11 DUP2 PUSH2 0x1CFC JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2C DUP2 PUSH2 0x1D08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D63 DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D72 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D8D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9C DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DB7 DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1CE8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DF6 DUP11 DUP3 DUP12 ADD PUSH2 0x1D1E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1E07 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1E18 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1E29 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1E3A DUP11 DUP3 DUP12 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1E4B DUP11 DUP3 DUP12 ADD PUSH2 0x1DA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1EAF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E8B JUMPI PUSH2 0x1E8A PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E9A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1EA8 DUP6 PUSH2 0x1E5A JUMP JUMPDEST SWAP5 POP PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1EC7 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH2 0x1ED4 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EF4 JUMPI PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F82 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F58 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1F65 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F7C JUMPI PUSH2 0x1F7B PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F93 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9E DUP4 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FCB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x200A DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x2015 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2025 JUMPI PUSH2 0x2024 PUSH2 0x1FD3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2043 PUSH0 DUP4 ADD DUP7 PUSH2 0x1958 JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x205D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE LOG1 PUSH0 SWAP5 MULMOD 0xE8 PUSH10 0x2779431923AAC06F9DEE NOT PUSH18 0x95A035F0B858F90BBAC4FE436064736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "51743:4283:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37804:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40023:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55475:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53546:137;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54069:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38874:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54614:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;52135:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55315:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54970:259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;53443:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53823:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53689:128;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39029:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49189:101;;;:::i;:::-;;52765:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;48534:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;51882:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38006:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;51959:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54295:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53338:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;52079:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53012:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;52019:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;53154:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39576:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;52897:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;52630:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;53915:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55652:372;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49439:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;37804:89;37849:13;37881:5;37874:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37804:89;:::o;40023:186::-;40096:4;40112:13;40128:12;:10;:12::i;:::-;40112:28;;40150:31;40159:5;40166:7;40175:5;40150:8;:31::i;:::-;40198:4;40191:11;;;40023:186;;;;:::o;55475:141::-;55535:7;55561:15;55571:4;55561:9;:15::i;:::-;55554:22;;55475:141;;;:::o;53546:137::-;53606:7;53640:1;53625:17;;53546:137;:::o;54069:149::-;54147:7;54173:1;54166:8;;54069:149;;;:::o;38874:97::-;38926:7;38952:12;;38945:19;;38874:97;:::o;54614:309::-;54712:4;54737:6;:14;54744:6;54737:14;;;;;;;;;;;;;;;;;;;;;;;;;54736:15;54728:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;54816:6;54800:24;;54790:6;:34;54782:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;54871:45;54890:6;54898:9;54909:6;54871:18;:45::i;:::-;54864:52;;54614:309;;;;;:::o;52135:27::-;;;;:::o;55315:109::-;55373:5;55397:1;55390:8;;55315:109;:::o;54970:259::-;48427:13;:11;:13::i;:::-;55049:9:::1;:13;55059:2;55049:13;;;;;;;;;;;;;;;;;;;;;;;;;55041:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;51921:16;55115:6;55100:12;;:21;;;;:::i;:::-;:37;;55092:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;55173:17;55179:2;55183:6;55173:5;:17::i;:::-;55216:6;55200:12;;:22;;;;;;;:::i;:::-;;;;;;;;54970:259:::0;;:::o;53443:97::-;53494:13;53519:14;;;;;;;;;;;;;;;;;;;53443:97;:::o;53823:86::-;53873:4;53896:5;53889:12;;53823:86;:::o;53689:128::-;53743:7;53777:1;53762:17;;53689:128;:::o;39029:116::-;39094:7;39120:9;:18;39130:7;39120:18;;;;;;;;;;;;;;;;39113:25;;39029:116;;;:::o;49189:101::-;48427:13;:11;:13::i;:::-;49253:30:::1;49280:1;49253:18;:30::i;:::-;49189:101::o:0;52765:106::-;48427:13;:11;:13::i;:::-;52859:5:::1;52839:9;:17;52849:6;52839:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;52765:106:::0;:::o;48534:85::-;48580:7;48606:6;;;;;;;;;;;48599:13;;48534:85;:::o;51882:55::-;51921:16;51882:55;:::o;38006:93::-;38053:13;38085:7;38078:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38006:93;:::o;51959:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;54295:281::-;54373:4;54398:6;:18;54405:10;54398:18;;;;;;;;;;;;;;;;;;;;;;;;;54397:19;54389:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;54481:6;54465:24;;54455:6;:34;54447:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;54536:33;54551:9;54562:6;54536:14;:33::i;:::-;54529:40;;54295:281;;;;:::o;53338:99::-;53391:7;53425:4;53410:20;;53338:99;:::o;52079:26::-;;;;;;;;;;;;;:::o;53012:92::-;48427:13;:11;:13::i;:::-;53092:5:::1;53077:6;:12;53084:4;53077:12;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;53012:92:::0;:::o;52019:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;53154:144::-;53204:7;53245:12;;51921:16;53230:27;;;;:::i;:::-;53223:34;;53154:144;:::o;39576:140::-;39656:7;39682:11;:18;39694:5;39682:18;;;;;;;;;;;;;;;:27;39701:7;39682:27;;;;;;;;;;;;;;;;39675:34;;39576:140;;;;:::o;52897:89::-;48427:13;:11;:13::i;:::-;52975:4:::1;52960:6;:12;52967:4;52960:12;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;52897:89:::0;:::o;52630:100::-;48427:13;:11;:13::i;:::-;52719:4:::1;52699:9;:17;52709:6;52699:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;52630:100:::0;:::o;53915:148::-;53986:4;54009:6;:19;54016:11;54009:19;;;;;;;;;;;;;;;;;;;;;;;;;54002:26;;53915:148;;;:::o;55652:372::-;55702:7;55721:19;55758:11;;;;;;;;;;;55721:49;;55781:20;55817:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55780:49;;;;;;;;55894:13;55940:10;55935:1;55918:12;55910:21;;:26;;;;:::i;:::-;:41;;;;:::i;:::-;55894:57;;55990:5;55983:12;;;;;55652:372;:::o;49439:215::-;48427:13;:11;:13::i;:::-;49543:1:::1;49523:22;;:8;:22;;::::0;49519:91:::1;;49596:1;49568:31;;;;;;;;;;;:::i;:::-;;;;;;;;49519:91;49619:28;49638:8;49619:18;:28::i;:::-;49439:215:::0;:::o;29352:96::-;29405:7;29431:10;29424:17;;29352:96;:::o;44751:128::-;44835:37;44844:5;44851:7;44860:5;44867:4;44835:8;:37::i;:::-;44751:128;;;:::o;40801:244::-;40888:4;40904:15;40922:12;:10;:12::i;:::-;40904:30;;40944:37;40960:4;40966:7;40975:5;40944:15;:37::i;:::-;40991:26;41001:4;41007:2;41011:5;40991:9;:26::i;:::-;41034:4;41027:11;;;40801:244;;;;;:::o;48692:162::-;48762:12;:10;:12::i;:::-;48751:23;;:7;:5;:7::i;:::-;:23;;;48747:101;;48824:12;:10;:12::i;:::-;48797:40;;;;;;;;;;;:::i;:::-;;;;;;;;48747:101;48692:162::o;43483:208::-;43572:1;43553:21;;:7;:21;;;43549:91;;43626:1;43597:32;;;;;;;;;;;:::i;:::-;;;;;;;;43549:91;43649:35;43665:1;43669:7;43678:5;43649:7;:35::i;:::-;43483:208;;:::o;49808:187::-;49881:16;49900:6;;;;;;;;;;;49881:25;;49925:8;49916:6;;:17;;;;;;;;;;;;;;;;;;49979:8;49948:40;;49969:8;49948:40;;;;;;;;;;;;49871:124;49808:187;:::o;39340:178::-;39409:4;39425:13;39441:12;:10;:12::i;:::-;39425:28;;39463:27;39473:5;39480:2;39484:5;39463:9;:27::i;:::-;39507:4;39500:11;;;39340:178;;;;:::o;45726:432::-;45855:1;45838:19;;:5;:19;;;45834:89;;45909:1;45880:32;;;;;;;;;;;:::i;:::-;;;;;;;;45834:89;45955:1;45936:21;;:7;:21;;;45932:90;;46008:1;45980:31;;;;;;;;;;;:::i;:::-;;;;;;;;45932:90;46061:5;46031:11;:18;46043:5;46031:18;;;;;;;;;;;;;;;:27;46050:7;46031:27;;;;;;;;;;;;;;;:35;;;;46080:9;46076:76;;;46126:7;46110:31;;46119:5;46110:31;;;46135:5;46110:31;;;;;;:::i;:::-;;;;;;;;46076:76;45726:432;;;;:::o;46440:476::-;46539:24;46566:25;46576:5;46583:7;46566:9;:25::i;:::-;46539:52;;46624:17;46605:16;:36;46601:309;;;46680:5;46661:16;:24;46657:130;;;46739:7;46748:16;46766:5;46712:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;46657:130;46828:57;46837:5;46844:7;46872:5;46853:16;:24;46879:5;46828:8;:57::i;:::-;46601:309;46529:387;46440:476;;;:::o;41418:300::-;41517:1;41501:18;;:4;:18;;;41497:86;;41569:1;41542:30;;;;;;;;;;;:::i;:::-;;;;;;;;41497:86;41610:1;41596:16;;:2;:16;;;41592:86;;41664:1;41635:32;;;;;;;;;;;:::i;:::-;;;;;;;;41592:86;41687:24;41695:4;41701:2;41705:5;41687:7;:24::i;:::-;41418:300;;;:::o;42033:1107::-;42138:1;42122:18;;:4;:18;;;42118:540;;42274:5;42258:12;;:21;;;;;;;:::i;:::-;;;;;;;;42118:540;;;42310:19;42332:9;:15;42342:4;42332:15;;;;;;;;;;;;;;;;42310:37;;42379:5;42365:11;:19;42361:115;;;42436:4;42442:11;42455:5;42411:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;42361:115;42628:5;42614:11;:19;42596:9;:15;42606:4;42596:15;;;;;;;;;;;;;;;:37;;;;42296:362;42118:540;42686:1;42672:16;;:2;:16;;;42668:425;;42851:5;42835:12;;:21;;;;;;;;;;;42668:425;;;43063:5;43046:9;:13;43056:2;43046:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;42668:425;43123:2;43108:25;;43117:4;43108:25;;;43127:5;43108:25;;;;;;:::i;:::-;;;;;;;;42033:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:118::-;4113:24;4131:5;4113:24;:::i;:::-;4108:3;4101:37;4026:118;;:::o;4150:222::-;4243:4;4281:2;4270:9;4266:18;4258:26;;4294:71;4362:1;4351:9;4347:17;4338:6;4294:71;:::i;:::-;4150:222;;;;:::o;4378:619::-;4455:6;4463;4471;4520:2;4508:9;4499:7;4495:23;4491:32;4488:119;;;4526:79;;:::i;:::-;4488:119;4646:1;4671:53;4716:7;4707:6;4696:9;4692:22;4671:53;:::i;:::-;4661:63;;4617:117;4773:2;4799:53;4844:7;4835:6;4824:9;4820:22;4799:53;:::i;:::-;4789:63;;4744:118;4901:2;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4872:118;4378:619;;;;;:::o;5003:86::-;5038:7;5078:4;5071:5;5067:16;5056:27;;5003:86;;;:::o;5095:112::-;5178:22;5194:5;5178:22;:::i;:::-;5173:3;5166:35;5095:112;;:::o;5213:214::-;5302:4;5340:2;5329:9;5325:18;5317:26;;5353:67;5417:1;5406:9;5402:17;5393:6;5353:67;:::i;:::-;5213:214;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:166::-;6565:18;6561:1;6553:6;6549:14;6542:42;6425:166;:::o;6597:366::-;6739:3;6760:67;6824:2;6819:3;6760:67;:::i;:::-;6753:74;;6836:93;6925:3;6836:93;:::i;:::-;6954:2;6949:3;6945:12;6938:19;;6597:366;;;:::o;6969:419::-;7135:4;7173:2;7162:9;7158:18;7150:26;;7222:9;7216:4;7212:20;7208:1;7197:9;7193:17;7186:47;7250:131;7376:4;7250:131;:::i;:::-;7242:139;;6969:419;;;:::o;7394:175::-;7534:27;7530:1;7522:6;7518:14;7511:51;7394:175;:::o;7575:366::-;7717:3;7738:67;7802:2;7797:3;7738:67;:::i;:::-;7731:74;;7814:93;7903:3;7814:93;:::i;:::-;7932:2;7927:3;7923:12;7916:19;;7575:366;;;:::o;7947:419::-;8113:4;8151:2;8140:9;8136:18;8128:26;;8200:9;8194:4;8190:20;8186:1;8175:9;8171:17;8164:47;8228:131;8354:4;8228:131;:::i;:::-;8220:139;;7947:419;;;:::o;8372:165::-;8512:17;8508:1;8500:6;8496:14;8489:41;8372:165;:::o;8543:366::-;8685:3;8706:67;8770:2;8765:3;8706:67;:::i;:::-;8699:74;;8782:93;8871:3;8782:93;:::i;:::-;8900:2;8895:3;8891:12;8884:19;;8543:366;;;:::o;8915:419::-;9081:4;9119:2;9108:9;9104:18;9096:26;;9168:9;9162:4;9158:20;9154:1;9143:9;9139:17;9132:47;9196:131;9322:4;9196:131;:::i;:::-;9188:139;;8915:419;;;:::o;9340:180::-;9388:77;9385:1;9378:88;9485:4;9482:1;9475:15;9509:4;9506:1;9499:15;9526:191;9566:3;9585:20;9603:1;9585:20;:::i;:::-;9580:25;;9619:20;9637:1;9619:20;:::i;:::-;9614:25;;9662:1;9659;9655:9;9648:16;;9683:3;9680:1;9677:10;9674:36;;;9690:18;;:::i;:::-;9674:36;9526:191;;;;:::o;9723:171::-;9863:23;9859:1;9851:6;9847:14;9840:47;9723:171;:::o;9900:366::-;10042:3;10063:67;10127:2;10122:3;10063:67;:::i;:::-;10056:74;;10139:93;10228:3;10139:93;:::i;:::-;10257:2;10252:3;10248:12;10241:19;;9900:366;;;:::o;10272:419::-;10438:4;10476:2;10465:9;10461:18;10453:26;;10525:9;10519:4;10515:20;10511:1;10500:9;10496:17;10489:47;10553:131;10679:4;10553:131;:::i;:::-;10545:139;;10272:419;;;:::o;10697:194::-;10737:4;10757:20;10775:1;10757:20;:::i;:::-;10752:25;;10791:20;10809:1;10791:20;:::i;:::-;10786:25;;10835:1;10832;10828:9;10820:17;;10859:1;10853:4;10850:11;10847:37;;;10864:18;;:::i;:::-;10847:37;10697:194;;;;:::o;10897:122::-;10970:24;10988:5;10970:24;:::i;:::-;10963:5;10960:35;10950:63;;11009:1;11006;10999:12;10950:63;10897:122;:::o;11025:143::-;11082:5;11113:6;11107:13;11098:22;;11129:33;11156:5;11129:33;:::i;:::-;11025:143;;;;:::o;11174:90::-;11209:7;11252:5;11249:1;11238:20;11227:31;;11174:90;;;:::o;11270:118::-;11341:22;11357:5;11341:22;:::i;:::-;11334:5;11331:33;11321:61;;11378:1;11375;11368:12;11321:61;11270:118;:::o;11394:139::-;11449:5;11480:6;11474:13;11465:22;;11496:31;11521:5;11496:31;:::i;:::-;11394:139;;;;:::o;11539:89::-;11575:7;11615:6;11608:5;11604:18;11593:29;;11539:89;;;:::o;11634:120::-;11706:23;11723:5;11706:23;:::i;:::-;11699:5;11696:34;11686:62;;11744:1;11741;11734:12;11686:62;11634:120;:::o;11760:141::-;11816:5;11847:6;11841:13;11832:22;;11863:32;11889:5;11863:32;:::i;:::-;11760:141;;;;:::o;11907:118::-;11978:22;11994:5;11978:22;:::i;:::-;11971:5;11968:33;11958:61;;12015:1;12012;12005:12;11958:61;11907:118;:::o;12031:139::-;12086:5;12117:6;12111:13;12102:22;;12133:31;12158:5;12133:31;:::i;:::-;12031:139;;;;:::o;12176:116::-;12246:21;12261:5;12246:21;:::i;:::-;12239:5;12236:32;12226:60;;12282:1;12279;12272:12;12226:60;12176:116;:::o;12298:137::-;12352:5;12383:6;12377:13;12368:22;;12399:30;12423:5;12399:30;:::i;:::-;12298:137;;;;:::o;12441:1271::-;12555:6;12563;12571;12579;12587;12595;12603;12652:3;12640:9;12631:7;12627:23;12623:33;12620:120;;;12659:79;;:::i;:::-;12620:120;12779:1;12804:64;12860:7;12851:6;12840:9;12836:22;12804:64;:::i;:::-;12794:74;;12750:128;12917:2;12943:62;12997:7;12988:6;12977:9;12973:22;12943:62;:::i;:::-;12933:72;;12888:127;13054:2;13080:63;13135:7;13126:6;13115:9;13111:22;13080:63;:::i;:::-;13070:73;;13025:128;13192:2;13218:63;13273:7;13264:6;13253:9;13249:22;13218:63;:::i;:::-;13208:73;;13163:128;13330:3;13357:63;13412:7;13403:6;13392:9;13388:22;13357:63;:::i;:::-;13347:73;;13301:129;13469:3;13496:62;13550:7;13541:6;13530:9;13526:22;13496:62;:::i;:::-;13486:72;;13440:128;13607:3;13634:61;13687:7;13678:6;13667:9;13663:22;13634:61;:::i;:::-;13624:71;;13578:127;12441:1271;;;;;;;;;;:::o;13718:102::-;13760:8;13807:5;13804:1;13800:13;13779:34;;13718:102;;;:::o;13826:848::-;13887:5;13894:4;13918:6;13909:15;;13942:5;13933:14;;13956:712;13977:1;13967:8;13964:15;13956:712;;;14072:4;14067:3;14063:14;14057:4;14054:24;14051:50;;;14081:18;;:::i;:::-;14051:50;14131:1;14121:8;14117:16;14114:451;;;14546:4;14539:5;14535:16;14526:25;;14114:451;14596:4;14590;14586:15;14578:23;;14626:32;14649:8;14626:32;:::i;:::-;14614:44;;13956:712;;;13826:848;;;;;;;:::o;14680:1073::-;14734:5;14925:8;14915:40;;14946:1;14937:10;;14948:5;;14915:40;14974:4;14964:36;;14991:1;14982:10;;14993:5;;14964:36;15060:4;15108:1;15103:27;;;;15144:1;15139:191;;;;15053:277;;15103:27;15121:1;15112:10;;15123:5;;;15139:191;15184:3;15174:8;15171:17;15168:43;;;15191:18;;:::i;:::-;15168:43;15240:8;15237:1;15233:16;15224:25;;15275:3;15268:5;15265:14;15262:40;;;15282:18;;:::i;:::-;15262:40;15315:5;;;15053:277;;15439:2;15429:8;15426:16;15420:3;15414:4;15411:13;15407:36;15389:2;15379:8;15376:16;15371:2;15365:4;15362:12;15358:35;15342:111;15339:246;;;15495:8;15489:4;15485:19;15476:28;;15530:3;15523:5;15520:14;15517:40;;;15537:18;;:::i;:::-;15517:40;15570:5;;15339:246;15610:42;15648:3;15638:8;15632:4;15629:1;15610:42;:::i;:::-;15595:57;;;;15684:4;15679:3;15675:14;15668:5;15665:25;15662:51;;;15693:18;;:::i;:::-;15662:51;15742:4;15735:5;15731:16;15722:25;;14680:1073;;;;;;:::o;15759:281::-;15817:5;15841:23;15859:4;15841:23;:::i;:::-;15833:31;;15885:25;15901:8;15885:25;:::i;:::-;15873:37;;15929:104;15966:66;15956:8;15950:4;15929:104;:::i;:::-;15920:113;;15759:281;;;;:::o;16046:180::-;16094:77;16091:1;16084:88;16191:4;16188:1;16181:15;16215:4;16212:1;16205:15;16232:185;16272:1;16289:20;16307:1;16289:20;:::i;:::-;16284:25;;16323:20;16341:1;16323:20;:::i;:::-;16318:25;;16362:1;16352:35;;16367:18;;:::i;:::-;16352:35;16409:1;16406;16402:9;16397:14;;16232:185;;;;:::o;16423:442::-;16572:4;16610:2;16599:9;16595:18;16587:26;;16623:71;16691:1;16680:9;16676:17;16667:6;16623:71;:::i;:::-;16704:72;16772:2;16761:9;16757:18;16748:6;16704:72;:::i;:::-;16786;16854:2;16843:9;16839:18;16830:6;16786:72;:::i;:::-;16423:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1669400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_SUPPLY()": "393",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"balanceOfUser(address)": "2961",
								"compliance()": "424",
								"decimals()": "383",
								"freezeUser(address)": "infinite",
								"frozen(address)": "2878",
								"getCurrentPrice()": "infinite",
								"getFrozenTokens(address)": "686",
								"identityRegistry()": "492",
								"isFrozen(address)": "2936",
								"mint(address,uint256)": "infinite",
								"mintedAmount()": "2537",
								"name()": "infinite",
								"onchainID()": "446",
								"owner()": "2561",
								"paused()": "449",
								"remainingSupply()": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreezeUser(address)": "infinite",
								"uniswapPool()": "2597",
								"version()": "infinite",
								"whitelist(address)": "2945"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 52197,
									"end": 52595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52266,
									"end": 52276,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "PUSH",
									"source": 0,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37700,
									"end": 37705,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37697,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 37692,
									"end": 37705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37692,
									"end": 37705,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37725,
									"end": 37732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37722,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 37715,
									"end": 37732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37715,
									"end": 37732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37626,
									"end": 37739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 48193,
									"end": 48194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48169,
									"end": 48195,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 48169,
									"end": 48195,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 48169,
									"end": 48181,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48169,
									"end": 48195,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 48169,
									"end": 48195,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 48169,
									"end": 48195,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 48165,
									"end": 48260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 48165,
									"end": 48260,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 48246,
									"end": 48247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 48218,
									"end": 48249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 48218,
									"end": 48249,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 48165,
									"end": 48260,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 48165,
									"end": 48260,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48269,
									"end": 48301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 48288,
									"end": 48300,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48269,
									"end": 48287,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 48269,
									"end": 48287,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48269,
									"end": 48287,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 48269,
									"end": 48301,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 48269,
									"end": 48301,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 48269,
									"end": 48301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 48269,
									"end": 48301,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 48269,
									"end": 48301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 48121,
									"end": 48308,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52316,
									"end": 52317,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52296,
									"end": 52306,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52296,
									"end": 52313,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52296,
									"end": 52317,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52288,
									"end": 52363,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 52288,
									"end": 52363,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52426,
									"end": 52435,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52438,
									"end": 52439,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52426,
									"end": 52439,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52426,
									"end": 52439,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52445,
									"end": 52455,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52445,
									"end": 52462,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52441,
									"end": 52442,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52441,
									"end": 52462,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52510,
									"end": 52514,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52483,
									"end": 52492,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52493,
									"end": 52503,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 52504,
									"end": 52505,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 52493,
									"end": 52506,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52493,
									"end": 52506,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52483,
									"end": 52514,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52464,
									"end": 52467,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52421,
									"end": 52525,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52535,
									"end": 52566,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 52541,
									"end": 52551,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 51921,
									"end": 51937,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 52535,
									"end": 52540,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 52535,
									"end": 52540,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52535,
									"end": 52540,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 52535,
									"end": 52566,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 52535,
									"end": 52566,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 52535,
									"end": 52566,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52535,
									"end": 52566,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 52535,
									"end": 52566,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52197,
									"end": 52595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 49808,
									"end": 49995,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 49808,
									"end": 49995,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49881,
									"end": 49897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 49900,
									"end": 49906,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49881,
									"end": 49906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49881,
									"end": 49906,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 49925,
									"end": 49933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49922,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 49916,
									"end": 49922,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 49916,
									"end": 49933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 49979,
									"end": 49987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49969,
									"end": 49977,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 49948,
									"end": 49988,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 49871,
									"end": 49995,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 49808,
									"end": 49995,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 49808,
									"end": 49995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43691,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 43483,
									"end": 43691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43572,
									"end": 43573,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43553,
									"end": 43574,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 43553,
									"end": 43574,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43553,
									"end": 43560,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43553,
									"end": 43574,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 43553,
									"end": 43574,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43553,
									"end": 43574,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 43549,
									"end": 43640,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 43549,
									"end": 43640,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43626,
									"end": 43627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 43597,
									"end": 43629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43597,
									"end": 43629,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 43549,
									"end": 43640,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 43549,
									"end": 43640,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43649,
									"end": 43684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 43665,
									"end": 43666,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43669,
									"end": 43676,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43678,
									"end": 43683,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43649,
									"end": 43656,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 43649,
									"end": 43656,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43649,
									"end": 43656,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 43649,
									"end": 43684,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43649,
									"end": 43684,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 43649,
									"end": 43684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43649,
									"end": 43684,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 43649,
									"end": 43684,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43483,
									"end": 43691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42033,
									"end": 43140,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 42033,
									"end": 43140,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42138,
									"end": 42139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42122,
									"end": 42140,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42122,
									"end": 42140,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42122,
									"end": 42126,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 42122,
									"end": 42140,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42122,
									"end": 42140,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42122,
									"end": 42140,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 42274,
									"end": 42279,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42270,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 42258,
									"end": 42270,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 42258,
									"end": 42279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 42258,
									"end": 42279,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42310,
									"end": 42329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42332,
									"end": 42341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42342,
									"end": 42346,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 42332,
									"end": 42347,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 42310,
									"end": 42347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42310,
									"end": 42347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42379,
									"end": 42384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42365,
									"end": 42376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42365,
									"end": 42384,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 42361,
									"end": 42476,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 42361,
									"end": 42476,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 42361,
									"end": 42476,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 42436,
									"end": 42440,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 42442,
									"end": 42453,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42455,
									"end": 42460,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 42411,
									"end": 42461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42411,
									"end": 42461,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 42361,
									"end": 42476,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 42361,
									"end": 42476,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42628,
									"end": 42633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42614,
									"end": 42625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42614,
									"end": 42633,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42605,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42606,
									"end": 42610,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42596,
									"end": 42611,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42633,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 42596,
									"end": 42633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42296,
									"end": 42658,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42118,
									"end": 42658,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42686,
									"end": 42687,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42672,
									"end": 42688,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42672,
									"end": 42688,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42672,
									"end": 42674,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42672,
									"end": 42688,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 42672,
									"end": 42688,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 42672,
									"end": 42688,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 42851,
									"end": 42856,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42847,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 42835,
									"end": 42847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 42835,
									"end": 42856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43063,
									"end": 43068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43055,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43056,
									"end": 43058,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43046,
									"end": 43068,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 42668,
									"end": 43093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43123,
									"end": 43125,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43117,
									"end": 43121,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 43127,
									"end": 43132,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 43108,
									"end": 43133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43108,
									"end": 43133,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 42033,
									"end": 43140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42033,
									"end": 43140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42033,
									"end": 43140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 42033,
									"end": 43140,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3431,
									"end": 3433,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3419,
									"end": 3428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3417,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3406,
									"end": 3429,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3402,
									"end": 3434,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3437,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3579,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3576,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3563,
									"end": 3580,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3557,
									"end": 3581,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3608,
									"end": 3626,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3606,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3597,
									"end": 3627,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3630,
									"end": 3709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3816,
									"end": 3823,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3807,
									"end": 3813,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3796,
									"end": 3805,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3792,
									"end": 3814,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3735,
									"end": 3824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3528,
									"end": 3834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3899,
									"end": 3905,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3933,
									"end": 3938,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3847,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4077,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3997,
									"end": 3998,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3990,
									"end": 4078,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4094,
									"end": 4095,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4087,
									"end": 4102,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4121,
									"end": 4125,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4118,
									"end": 4119,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4111,
									"end": 4126,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4182,
									"end": 4188,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4219,
									"end": 4220,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4209,
									"end": 4221,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4267,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4260,
									"end": 4264,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4256,
									"end": 4268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4343,
									"end": 4347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 4335,
									"end": 4341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4397,
									"end": 4403,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4394,
									"end": 4408,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4409,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 4424,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4189,
									"end": 4458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4138,
									"end": 4458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4513,
									"end": 4517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4536,
									"end": 4539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4559,
									"end": 4562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4556,
									"end": 4557,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4563,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4593,
									"end": 4597,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4590,
									"end": 4591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4648,
									"end": 4654,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4695,
									"end": 4697,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4690,
									"end": 4692,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4683,
									"end": 4688,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4679,
									"end": 4693,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4675,
									"end": 4698,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4611,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4809,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 4810,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4710,
									"end": 4817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4892,
									"end": 4898,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4943,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4930,
									"end": 4940,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4926,
									"end": 4944,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 4995,
									"end": 5061,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4984,
									"end": 4993,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 4965,
									"end": 5062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5113,
									"end": 5121,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5102,
									"end": 5111,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 5083,
									"end": 5122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5151,
									"end": 5160,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5149,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5140,
									"end": 5161,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5194,
									"end": 5202,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5190,
									"end": 5209,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5183,
									"end": 5188,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5180,
									"end": 5210,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4823,
									"end": 5216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5259,
									"end": 5266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5288,
									"end": 5293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5222,
									"end": 5299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5336,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5359,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5305,
									"end": 5365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5481,
									"end": 5505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 5472,
									"end": 5506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5454,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5371,
									"end": 5513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5583,
									"end": 5588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5519,
									"end": 5594,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 5741,
									"end": 5748,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 5710,
									"end": 5749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5844,
									"end": 5860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 5820,
									"end": 5861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5818,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5799,
									"end": 5810,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 5771,
									"end": 5862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5765,
									"end": 5769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5758,
									"end": 5863,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5676,
									"end": 5869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5920,
									"end": 5923,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5941,
									"end": 5942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5934,
									"end": 5942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5934,
									"end": 5942,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5875,
									"end": 5948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 6031,
									"end": 6063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6130,
									"end": 6136,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6122,
									"end": 6128,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6116,
									"end": 6120,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 6072,
									"end": 6137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6007,
									"end": 6143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5954,
									"end": 6143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6226,
									"end": 6229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6219,
									"end": 6224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6216,
									"end": 6230,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6280,
									"end": 6319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6254,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6246,
									"end": 6251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6242,
									"end": 6255,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6442,
									"end": 6444,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6437,
									"end": 6440,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6434,
									"end": 6445,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 6508,
									"end": 6513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 6476,
									"end": 6514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 6578,
									"end": 6588,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 6560,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6550,
									"end": 6558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6590,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6743,
									"end": 6745,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6728,
									"end": 6746,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6764,
									"end": 6772,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 6861,
									"end": 6864,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 6843,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6833,
									"end": 6841,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6816,
									"end": 6827,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 6787,
									"end": 6867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6944,
									"end": 6952,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6994,
									"end": 6999,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6988,
									"end": 6992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6984,
									"end": 7000,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6890,
									"end": 7007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7057,
									"end": 7063,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7134,
									"end": 7140,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7126,
									"end": 7131,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7123,
									"end": 7124,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7119,
									"end": 7132,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 7090,
									"end": 7141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7086,
									"end": 7142,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7171,
									"end": 7175,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7165,
									"end": 7169,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7161,
									"end": 7176,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7013,
									"end": 7182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 7434,
									"end": 7437,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7428,
									"end": 7432,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 7409,
									"end": 7438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7471,
									"end": 7474,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7468,
									"end": 7469,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7464,
									"end": 7475,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7458,
									"end": 7462,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7455,
									"end": 7476,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7187,
									"end": 7482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 7637,
									"end": 7640,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 7604,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7706,
									"end": 7724,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7698,
									"end": 7704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7695,
									"end": 7725,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 7728,
									"end": 7746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 7804,
									"end": 7808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7798,
									"end": 7809,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7772,
									"end": 7810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7903,
									"end": 7907,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 7857,
									"end": 7924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7951,
									"end": 7952,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7975,
									"end": 7979,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8007,
									"end": 8009,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7999,
									"end": 8005,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7996,
									"end": 8010,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8024,
									"end": 8025,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8681,
									"end": 8682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8698,
									"end": 8704,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8756,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8742,
									"end": 8745,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8738,
									"end": 8757,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8732,
									"end": 8758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8858,
									"end": 8864,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8851,
									"end": 8856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 8798,
									"end": 8865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8792,
									"end": 8796,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8785,
									"end": 8866,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8654,
									"end": 8876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8071,
									"end": 8075,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8067,
									"end": 8076,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8059,
									"end": 8065,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8055,
									"end": 8077,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 8137,
									"end": 8141,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 8105,
									"end": 8142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8165,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8192,
									"end": 8199,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8189,
									"end": 8190,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8186,
									"end": 8200,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8271,
									"end": 8280,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8269,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8262,
									"end": 8281,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8256,
									"end": 8282,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8241,
									"end": 8283,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8322,
									"end": 8323,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8314,
									"end": 8320,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8310,
									"end": 8324,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8369,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8358,
									"end": 8367,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8354,
									"end": 8372,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8215,
									"end": 8219,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8212,
									"end": 8213,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8208,
									"end": 8220,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8414,
									"end": 8420,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8405,
									"end": 8412,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8402,
									"end": 8421,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8472,
									"end": 8481,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8467,
									"end": 8470,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8463,
									"end": 8482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8457,
									"end": 8483,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 8557,
									"end": 8561,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8549,
									"end": 8555,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8545,
									"end": 8562,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8543,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 8515,
									"end": 8563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8507,
									"end": 8513,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8500,
									"end": 8564,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8422,
									"end": 8578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8624,
									"end": 8625,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8620,
									"end": 8621,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8612,
									"end": 8618,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8608,
									"end": 8622,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8604,
									"end": 8626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8598,
									"end": 8602,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8591,
									"end": 8627,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7487,
									"end": 8882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 8993,
									"end": 8998,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 8975,
									"end": 8999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8970,
									"end": 8973,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8963,
									"end": 9000,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8888,
									"end": 9006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9143,
									"end": 9145,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9132,
									"end": 9141,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9128,
									"end": 9146,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9224,
									"end": 9225,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9213,
									"end": 9222,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9209,
									"end": 9226,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9200,
									"end": 9206,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 9156,
									"end": 9227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9012,
									"end": 9234,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9324,
									"end": 9335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9358,
									"end": 9364,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9353,
									"end": 9356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9346,
									"end": 9365,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9398,
									"end": 9402,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9393,
									"end": 9396,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9389,
									"end": 9403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9240,
									"end": 9409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9555,
									"end": 9589,
									"name": "PUSH",
									"source": 1,
									"value": "4174206C65617374206F6E652077686974656C69737465642061646472657373"
								},
								{
									"begin": 9551,
									"end": 9552,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9543,
									"end": 9549,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9539,
									"end": 9553,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9590,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9624,
									"end": 9635,
									"name": "PUSH",
									"source": 1,
									"value": "2072657175697265640000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9619,
									"end": 9621,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9611,
									"end": 9617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9607,
									"end": 9622,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9600,
									"end": 9636,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9415,
									"end": 9643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9791,
									"end": 9794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 9876,
									"end": 9878,
									"name": "PUSH",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 9871,
									"end": 9874,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 9812,
									"end": 9879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "tag",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 9879,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 9879,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9977,
									"end": 9980,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 9888,
									"end": 9981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10006,
									"end": 10008,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10001,
									"end": 10004,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9997,
									"end": 10009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9990,
									"end": 10009,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9990,
									"end": 10009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9649,
									"end": 10015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10187,
									"end": 10191,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10225,
									"end": 10227,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10214,
									"end": 10223,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10210,
									"end": 10228,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10202,
									"end": 10228,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10202,
									"end": 10228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10274,
									"end": 10283,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10268,
									"end": 10272,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10264,
									"end": 10284,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10260,
									"end": 10261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10249,
									"end": 10258,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10245,
									"end": 10262,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10238,
									"end": 10285,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 10428,
									"end": 10432,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 10302,
									"end": 10433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10294,
									"end": 10433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10294,
									"end": 10433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10021,
									"end": 10440,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10446,
									"end": 10626,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 10446,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10494,
									"end": 10571,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10491,
									"end": 10492,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10484,
									"end": 10572,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10591,
									"end": 10595,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 10588,
									"end": 10589,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10581,
									"end": 10596,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10615,
									"end": 10619,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 10612,
									"end": 10613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10605,
									"end": 10620,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10632,
									"end": 10812,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 10632,
									"end": 10812,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10757,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10677,
									"end": 10678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10670,
									"end": 10758,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10777,
									"end": 10781,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 10774,
									"end": 10775,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10767,
									"end": 10782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10801,
									"end": 10805,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 10798,
									"end": 10799,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 10806,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10858,
									"end": 10861,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10895,
									"end": 10896,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 10877,
									"end": 10897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10872,
									"end": 10897,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10872,
									"end": 10897,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10929,
									"end": 10930,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 10911,
									"end": 10931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10906,
									"end": 10931,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10906,
									"end": 10931,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10954,
									"end": 10955,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10951,
									"end": 10952,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10947,
									"end": 10956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10940,
									"end": 10956,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10940,
									"end": 10956,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10975,
									"end": 10978,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10972,
									"end": 10973,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10969,
									"end": 10979,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 10982,
									"end": 11000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "tag",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10818,
									"end": 11009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 11120,
									"end": 11125,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 11102,
									"end": 11126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "tag",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11097,
									"end": 11100,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11090,
									"end": 11127,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11015,
									"end": 11133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11288,
									"end": 11292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11326,
									"end": 11328,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 11315,
									"end": 11324,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11311,
									"end": 11329,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11303,
									"end": 11329,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11303,
									"end": 11329,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 11407,
									"end": 11408,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11396,
									"end": 11405,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11392,
									"end": 11409,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11383,
									"end": 11389,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 11339,
									"end": 11410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "tag",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 11488,
									"end": 11490,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11477,
									"end": 11486,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11473,
									"end": 11491,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11464,
									"end": 11470,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 11420,
									"end": 11492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "tag",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 11570,
									"end": 11572,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 11559,
									"end": 11568,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11555,
									"end": 11573,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11546,
									"end": 11552,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 11502,
									"end": 11574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11139,
									"end": 11581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11684,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11718,
									"end": 11720,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11707,
									"end": 11716,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11703,
									"end": 11721,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11695,
									"end": 11721,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11695,
									"end": 11721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 11799,
									"end": 11800,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11788,
									"end": 11797,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11784,
									"end": 11801,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11775,
									"end": 11781,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 11731,
									"end": 11802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "tag",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11587,
									"end": 11809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51743,
									"end": 56026,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205da15f9409e8692779431923aac06f9dee197195a035f0b858f90bbac4fe436064736f6c634300081e0033",
									".code": [
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "D0516650"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "E43252D7"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "E43252D7"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "E5839836"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "EB91D37E"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "D0516650"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "DA0239A6"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "E08BA51A"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "ABA63705"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "BDD3D825"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "CB4B73AB"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "9B19251A"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "6290865D"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "6290865D"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "8AB1D681"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "158B1A57"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "158B1A57"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "2D380242"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "12CAE7AF"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "134E18F4"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51743,
											"end": 56026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37804,
											"end": 37893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 37804,
											"end": 37893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40023,
											"end": 40209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40023,
											"end": 40209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40023,
											"end": 40209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 55475,
											"end": 55616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 55475,
											"end": 55616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55475,
											"end": 55616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53546,
											"end": 53683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53546,
											"end": 53683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54069,
											"end": 54218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54069,
											"end": 54218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 54069,
											"end": 54218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 38874,
											"end": 38971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38874,
											"end": 38971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 54614,
											"end": 54923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 54614,
											"end": 54923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54614,
											"end": 54923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 52135,
											"end": 52162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 52135,
											"end": 52162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 55315,
											"end": 55424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55315,
											"end": 55424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 54970,
											"end": 55229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 54970,
											"end": 55229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 53443,
											"end": 53540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 53443,
											"end": 53540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53823,
											"end": 53909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 53823,
											"end": 53909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53689,
											"end": 53817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53689,
											"end": 53817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 39029,
											"end": 39145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 39029,
											"end": 39145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 39029,
											"end": 39145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 49189,
											"end": 49290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 52765,
											"end": 52871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 52765,
											"end": 52871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 48534,
											"end": 48619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 48534,
											"end": 48619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 51882,
											"end": 51937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 51882,
											"end": 51937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38006,
											"end": 38099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38006,
											"end": 38099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 51959,
											"end": 52000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 51959,
											"end": 52000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 51959,
											"end": 52000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 54295,
											"end": 54576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 54295,
											"end": 54576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54295,
											"end": 54576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 53338,
											"end": 53437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53338,
											"end": 53437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 52079,
											"end": 52105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 52079,
											"end": 52105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 53012,
											"end": 53104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 53012,
											"end": 53104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 52019,
											"end": 52057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 52019,
											"end": 52057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 52019,
											"end": 52057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 53154,
											"end": 53298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 53154,
											"end": 53298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 39576,
											"end": 39716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 39576,
											"end": 39716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 39576,
											"end": 39716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 52897,
											"end": 52986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 52897,
											"end": 52986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 52630,
											"end": 52730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 52630,
											"end": 52730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 53915,
											"end": 54063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 53915,
											"end": 54063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 53915,
											"end": 54063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 55652,
											"end": 56024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55652,
											"end": 56024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 49439,
											"end": 49654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 49439,
											"end": 49654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37849,
											"end": 37862,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37881,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37874,
											"end": 37886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 37874,
											"end": 37886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37874,
											"end": 37886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37804,
											"end": 37893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40096,
											"end": 40100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40112,
											"end": 40125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40128,
											"end": 40140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 40128,
											"end": 40138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 40128,
											"end": 40140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40128,
											"end": 40140,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 40128,
											"end": 40140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40112,
											"end": 40140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40112,
											"end": 40140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40150,
											"end": 40181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 40159,
											"end": 40164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40166,
											"end": 40173,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40175,
											"end": 40180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40150,
											"end": 40158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 40150,
											"end": 40181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40150,
											"end": 40181,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 40150,
											"end": 40181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40198,
											"end": 40202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40191,
											"end": 40202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40191,
											"end": 40202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40191,
											"end": 40202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40023,
											"end": 40209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55535,
											"end": 55542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55561,
											"end": 55576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 55571,
											"end": 55575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 55561,
											"end": 55576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55561,
											"end": 55576,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 55561,
											"end": 55576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55554,
											"end": 55576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55554,
											"end": 55576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55475,
											"end": 55616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53606,
											"end": 53613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53640,
											"end": 53641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53625,
											"end": 53642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53625,
											"end": 53642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53546,
											"end": 53683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54147,
											"end": 54154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54173,
											"end": 54174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54166,
											"end": 54174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54166,
											"end": 54174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54069,
											"end": 54218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38926,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38952,
											"end": 38964,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38952,
											"end": 38964,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 38964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38945,
											"end": 38964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38874,
											"end": 38971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54712,
											"end": 54716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54737,
											"end": 54743,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54744,
											"end": 54750,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54737,
											"end": 54751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54736,
											"end": 54751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 54728,
											"end": 54772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 54728,
											"end": 54772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54816,
											"end": 54822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54800,
											"end": 54824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54800,
											"end": 54824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54790,
											"end": 54796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54790,
											"end": 54824,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 54782,
											"end": 54854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 54782,
											"end": 54854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54871,
											"end": 54916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 54890,
											"end": 54896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 54907,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54909,
											"end": 54915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54871,
											"end": 54889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 54871,
											"end": 54916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54871,
											"end": 54916,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 54871,
											"end": 54916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54864,
											"end": 54916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54864,
											"end": 54916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54614,
											"end": 54923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52135,
											"end": 52162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55373,
											"end": 55378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55397,
											"end": 55398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55390,
											"end": 55398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55390,
											"end": 55398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 55424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55059,
											"end": 55061,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 55049,
											"end": 55062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 55041,
											"end": 55082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 55041,
											"end": 55082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51921,
											"end": 51937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 55115,
											"end": 55121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55100,
											"end": 55112,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 55100,
											"end": 55121,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 55100,
											"end": 55121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 55100,
											"end": 55121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55137,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55100,
											"end": 55137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 55092,
											"end": 55163,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 55092,
											"end": 55163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55173,
											"end": 55190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 55179,
											"end": 55181,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55183,
											"end": 55189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55173,
											"end": 55178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 55173,
											"end": 55190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55173,
											"end": 55190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 55173,
											"end": 55190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55216,
											"end": 55222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55200,
											"end": 55212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 55200,
											"end": 55222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55200,
											"end": 55222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54970,
											"end": 55229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53494,
											"end": 53507,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "PUSH",
											"source": 0,
											"value": "312E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53873,
											"end": 53877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53896,
											"end": 53901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53889,
											"end": 53901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53889,
											"end": 53901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53823,
											"end": 53909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53743,
											"end": 53750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53777,
											"end": 53778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53762,
											"end": 53779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53762,
											"end": 53779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39094,
											"end": 39101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39120,
											"end": 39129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39130,
											"end": 39137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39113,
											"end": 39138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39113,
											"end": 39138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39029,
											"end": 39145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 49189,
											"end": 49290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49253,
											"end": 49283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 49280,
											"end": 49281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49253,
											"end": 49271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 49253,
											"end": 49283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49253,
											"end": 49283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 49253,
											"end": 49283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49189,
											"end": 49290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52859,
											"end": 52864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52839,
											"end": 52848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52849,
											"end": 52855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52839,
											"end": 52864,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52765,
											"end": 52871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48580,
											"end": 48587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48606,
											"end": 48612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48599,
											"end": 48612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48599,
											"end": 48612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48534,
											"end": 48619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51921,
											"end": 51937,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 51882,
											"end": 51937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51882,
											"end": 51937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38053,
											"end": 38066,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38085,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 38078,
											"end": 38092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 38078,
											"end": 38092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38078,
											"end": 38092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38006,
											"end": 38099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51959,
											"end": 52000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54373,
											"end": 54377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54398,
											"end": 54404,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54405,
											"end": 54415,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54398,
											"end": 54416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54397,
											"end": 54416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 54389,
											"end": 54437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 54389,
											"end": 54437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54481,
											"end": 54487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54465,
											"end": 54489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54455,
											"end": 54461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54455,
											"end": 54489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 54447,
											"end": 54519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 54447,
											"end": 54519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54536,
											"end": 54569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 54551,
											"end": 54560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54562,
											"end": 54568,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54536,
											"end": 54550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 54536,
											"end": 54569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54536,
											"end": 54569,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 54536,
											"end": 54569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54529,
											"end": 54569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54529,
											"end": 54569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54295,
											"end": 54576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53391,
											"end": 53398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53425,
											"end": 53429,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53410,
											"end": 53430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53410,
											"end": 53430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53338,
											"end": 53437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52079,
											"end": 52105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53092,
											"end": 53097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53077,
											"end": 53083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53084,
											"end": 53088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53077,
											"end": 53097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53012,
											"end": 53104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52019,
											"end": 52057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53204,
											"end": 53211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53245,
											"end": 53257,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 53245,
											"end": 53257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51921,
											"end": 51937,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 53230,
											"end": 53257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 53230,
											"end": 53257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53230,
											"end": 53257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53230,
											"end": 53257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 53230,
											"end": 53257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53230,
											"end": 53257,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 53230,
											"end": 53257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53223,
											"end": 53257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53223,
											"end": 53257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53154,
											"end": 53298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39656,
											"end": 39663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39682,
											"end": 39693,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39694,
											"end": 39699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39682,
											"end": 39700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39701,
											"end": 39708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39682,
											"end": 39709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39675,
											"end": 39709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39675,
											"end": 39709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52975,
											"end": 52979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52960,
											"end": 52966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52967,
											"end": 52971,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52960,
											"end": 52979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52897,
											"end": 52986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52719,
											"end": 52723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52699,
											"end": 52708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52709,
											"end": 52715,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52699,
											"end": 52723,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52630,
											"end": 52730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53986,
											"end": 53990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54009,
											"end": 54015,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54016,
											"end": 54027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54009,
											"end": 54028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54002,
											"end": 54028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54002,
											"end": 54028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 54063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55702,
											"end": 55709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55721,
											"end": 55740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55758,
											"end": 55769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55721,
											"end": 55770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55721,
											"end": 55770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55781,
											"end": 55801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55817,
											"end": 55821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55817,
											"end": 55827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55827,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 55817,
											"end": 55829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 55817,
											"end": 55829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55780,
											"end": 55829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55894,
											"end": 55907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55940,
											"end": 55950,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55935,
											"end": 55936,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55918,
											"end": 55930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55910,
											"end": 55931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 55910,
											"end": 55936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 55910,
											"end": 55936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55936,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 55910,
											"end": 55936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 55910,
											"end": 55951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 55910,
											"end": 55951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55910,
											"end": 55951,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 55910,
											"end": 55951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55894,
											"end": 55951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55894,
											"end": 55951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55990,
											"end": 55995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55983,
											"end": 55995,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55983,
											"end": 55995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55983,
											"end": 55995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55983,
											"end": 55995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55983,
											"end": 55995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55652,
											"end": 56024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 48427,
											"end": 48438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48427,
											"end": 48440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 48427,
											"end": 48440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49543,
											"end": 49544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49523,
											"end": 49545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49523,
											"end": 49545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49523,
											"end": 49531,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49523,
											"end": 49545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49523,
											"end": 49545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49523,
											"end": 49545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49519,
											"end": 49610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 49519,
											"end": 49610,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 49597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 49568,
											"end": 49599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49568,
											"end": 49599,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49519,
											"end": 49610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 49519,
											"end": 49610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49619,
											"end": 49647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 49638,
											"end": 49646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49619,
											"end": 49637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 49619,
											"end": 49647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49619,
											"end": 49647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 49619,
											"end": 49647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29448,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29352,
											"end": 29448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29431,
											"end": 29441,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29424,
											"end": 29441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29424,
											"end": 29441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44879,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 44751,
											"end": 44879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44835,
											"end": 44872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 44844,
											"end": 44849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44851,
											"end": 44858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44860,
											"end": 44865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44867,
											"end": 44871,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44835,
											"end": 44843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 44835,
											"end": 44872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44835,
											"end": 44872,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 44835,
											"end": 44872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44751,
											"end": 44879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40888,
											"end": 40892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40904,
											"end": 40919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40922,
											"end": 40934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 40922,
											"end": 40932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 40922,
											"end": 40934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40922,
											"end": 40934,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 40922,
											"end": 40934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40904,
											"end": 40934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40904,
											"end": 40934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 40960,
											"end": 40964,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40966,
											"end": 40973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 40944,
											"end": 40981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40944,
											"end": 40981,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 40944,
											"end": 40981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40991,
											"end": 41017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 41001,
											"end": 41005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41007,
											"end": 41009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41011,
											"end": 41016,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40991,
											"end": 41000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 40991,
											"end": 41017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40991,
											"end": 41017,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 40991,
											"end": 41017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41034,
											"end": 41038,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41027,
											"end": 41038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41027,
											"end": 41038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41027,
											"end": 41038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40801,
											"end": 41045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48692,
											"end": 48854,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 48692,
											"end": 48854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48762,
											"end": 48774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 48762,
											"end": 48772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 48762,
											"end": 48774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48762,
											"end": 48774,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 48762,
											"end": 48774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48751,
											"end": 48774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48751,
											"end": 48774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48751,
											"end": 48758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 48751,
											"end": 48756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 48751,
											"end": 48758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48751,
											"end": 48758,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 48751,
											"end": 48758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48751,
											"end": 48774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48751,
											"end": 48774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48751,
											"end": 48774,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48747,
											"end": 48848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 48747,
											"end": 48848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48824,
											"end": 48836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 48824,
											"end": 48834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 48824,
											"end": 48836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48824,
											"end": 48836,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 48824,
											"end": 48836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 48797,
											"end": 48837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48797,
											"end": 48837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48747,
											"end": 48848,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 48747,
											"end": 48848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48692,
											"end": 48854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43483,
											"end": 43691,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 43483,
											"end": 43691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43572,
											"end": 43573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43553,
											"end": 43574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43553,
											"end": 43574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43553,
											"end": 43574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43549,
											"end": 43640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 43549,
											"end": 43640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43626,
											"end": 43627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 43597,
											"end": 43629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43597,
											"end": 43629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43549,
											"end": 43640,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 43549,
											"end": 43640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43649,
											"end": 43684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 43665,
											"end": 43666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43669,
											"end": 43676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43678,
											"end": 43683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43649,
											"end": 43656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 43649,
											"end": 43684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43649,
											"end": 43684,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 43649,
											"end": 43684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43483,
											"end": 43691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43483,
											"end": 43691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43483,
											"end": 43691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49808,
											"end": 49995,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 49808,
											"end": 49995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49881,
											"end": 49897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49900,
											"end": 49906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49881,
											"end": 49906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49881,
											"end": 49906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49925,
											"end": 49933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49922,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 49916,
											"end": 49922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49916,
											"end": 49933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49979,
											"end": 49987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49969,
											"end": 49977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49948,
											"end": 49988,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 49995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49808,
											"end": 49995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49808,
											"end": 49995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39340,
											"end": 39518,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 39340,
											"end": 39518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39409,
											"end": 39413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39425,
											"end": 39438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39441,
											"end": 39453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 39441,
											"end": 39451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 39441,
											"end": 39453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39441,
											"end": 39453,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 39441,
											"end": 39453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39425,
											"end": 39453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39425,
											"end": 39453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39463,
											"end": 39490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 39473,
											"end": 39478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39480,
											"end": 39482,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39484,
											"end": 39489,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39463,
											"end": 39472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 39463,
											"end": 39490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39463,
											"end": 39490,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 39463,
											"end": 39490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39507,
											"end": 39511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39500,
											"end": 39511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39500,
											"end": 39511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39340,
											"end": 39518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39340,
											"end": 39518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39340,
											"end": 39518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39340,
											"end": 39518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39340,
											"end": 39518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 46158,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 45726,
											"end": 46158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45855,
											"end": 45856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45838,
											"end": 45857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45838,
											"end": 45857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45838,
											"end": 45843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45838,
											"end": 45857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45838,
											"end": 45857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45838,
											"end": 45857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45834,
											"end": 45923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 45834,
											"end": 45923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 45880,
											"end": 45912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45834,
											"end": 45923,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 45834,
											"end": 45923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45955,
											"end": 45956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45936,
											"end": 45957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45936,
											"end": 45957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45936,
											"end": 45943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45936,
											"end": 45957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45936,
											"end": 45957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45936,
											"end": 45957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45932,
											"end": 46022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 45932,
											"end": 46022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46008,
											"end": 46009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 45980,
											"end": 46011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45932,
											"end": 46022,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 45932,
											"end": 46022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46061,
											"end": 46066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46043,
											"end": 46048,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46031,
											"end": 46049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46050,
											"end": 46057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46031,
											"end": 46058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46066,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46080,
											"end": 46089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46076,
											"end": 46152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46076,
											"end": 46152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 46076,
											"end": 46152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46126,
											"end": 46133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46119,
											"end": 46124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 46135,
											"end": 46140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 46110,
											"end": 46141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46110,
											"end": 46141,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 46076,
											"end": 46152,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 46076,
											"end": 46152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 46158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 46158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 46158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 46158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 46158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46440,
											"end": 46916,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 46440,
											"end": 46916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46566,
											"end": 46591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 46576,
											"end": 46581,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46583,
											"end": 46590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46566,
											"end": 46575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 46566,
											"end": 46591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46566,
											"end": 46591,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 46566,
											"end": 46591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46539,
											"end": 46591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46624,
											"end": 46641,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46605,
											"end": 46621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46605,
											"end": 46641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46601,
											"end": 46910,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46601,
											"end": 46910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 46601,
											"end": 46910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46680,
											"end": 46685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46661,
											"end": 46677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46661,
											"end": 46685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46657,
											"end": 46787,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46657,
											"end": 46787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 46657,
											"end": 46787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46739,
											"end": 46746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46748,
											"end": 46764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46766,
											"end": 46771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 46712,
											"end": 46772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46712,
											"end": 46772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46657,
											"end": 46787,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 46657,
											"end": 46787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46828,
											"end": 46885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 46837,
											"end": 46842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46844,
											"end": 46851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46872,
											"end": 46877,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46853,
											"end": 46869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46853,
											"end": 46877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46879,
											"end": 46884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46828,
											"end": 46836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 46828,
											"end": 46885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46828,
											"end": 46885,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 46828,
											"end": 46885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46601,
											"end": 46910,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 46601,
											"end": 46910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46529,
											"end": 46916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46440,
											"end": 46916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46440,
											"end": 46916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46440,
											"end": 46916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46440,
											"end": 46916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41718,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 41418,
											"end": 41718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41517,
											"end": 41518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41501,
											"end": 41519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41501,
											"end": 41519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41501,
											"end": 41519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41501,
											"end": 41519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41497,
											"end": 41583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 41497,
											"end": 41583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41569,
											"end": 41570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41542,
											"end": 41572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41542,
											"end": 41572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41497,
											"end": 41583,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 41497,
											"end": 41583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41610,
											"end": 41611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41596,
											"end": 41612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41596,
											"end": 41612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41596,
											"end": 41598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41596,
											"end": 41612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41596,
											"end": 41612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41596,
											"end": 41612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41592,
											"end": 41678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 41592,
											"end": 41678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41664,
											"end": 41665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41635,
											"end": 41667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41635,
											"end": 41667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41592,
											"end": 41678,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 41592,
											"end": 41678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41687,
											"end": 41711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 41695,
											"end": 41699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41701,
											"end": 41703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41705,
											"end": 41710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41687,
											"end": 41694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41687,
											"end": 41711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41687,
											"end": 41711,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 41687,
											"end": 41711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 43140,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 42033,
											"end": 43140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42138,
											"end": 42139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42122,
											"end": 42140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42122,
											"end": 42140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42122,
											"end": 42126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42122,
											"end": 42140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42122,
											"end": 42140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42122,
											"end": 42140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42274,
											"end": 42279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42270,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42258,
											"end": 42270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 42258,
											"end": 42279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42310,
											"end": 42329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42332,
											"end": 42341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42342,
											"end": 42346,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42332,
											"end": 42347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42310,
											"end": 42347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42310,
											"end": 42347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42365,
											"end": 42376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42365,
											"end": 42384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42361,
											"end": 42476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42361,
											"end": 42476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 42361,
											"end": 42476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42436,
											"end": 42440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42442,
											"end": 42453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42455,
											"end": 42460,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 42411,
											"end": 42461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42411,
											"end": 42461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42361,
											"end": 42476,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 42361,
											"end": 42476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42628,
											"end": 42633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42614,
											"end": 42625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42614,
											"end": 42633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42606,
											"end": 42610,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42596,
											"end": 42611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 42596,
											"end": 42633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42296,
											"end": 42658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 42118,
											"end": 42658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42686,
											"end": 42687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42672,
											"end": 42688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42672,
											"end": 42688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42672,
											"end": 42674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42672,
											"end": 42688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42672,
											"end": 42688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42672,
											"end": 42688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42851,
											"end": 42856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42847,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42835,
											"end": 42847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 42835,
											"end": 42856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43063,
											"end": 43068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43056,
											"end": 43058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 42668,
											"end": 43093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43123,
											"end": 43125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43117,
											"end": 43121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 43127,
											"end": 43132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 43108,
											"end": 43133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43108,
											"end": 43133,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 43140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 43140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 43140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42033,
											"end": 43140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4113,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 4294,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4523,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4526,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4671,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4799,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5071,
											"end": 5076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5178,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5353,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6591,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6425,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "53656E6465722069732066726F7A656E00000000000000000000000000000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 6824,
											"end": 6826,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6819,
											"end": 6822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6760,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6925,
											"end": 6928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6836,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6597,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7222,
											"end": 7231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7212,
											"end": 7232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7186,
											"end": 7233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7250,
											"end": 7381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7569,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7394,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7561,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D75737420626520616E20696E746567657200000000000000"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7518,
											"end": 7532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7738,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7814,
											"end": 7907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7927,
											"end": 7930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7923,
											"end": 7935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8140,
											"end": 8149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8184,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 8228,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 8359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 8366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8537,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 8372,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F742077686974656C69737465640000000000000000000000000000000000"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8530,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8372,
											"end": 8537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 8770,
											"end": 8772,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 8765,
											"end": 8768,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 8706,
											"end": 8773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 8871,
											"end": 8874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 8782,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8900,
											"end": 8902,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8895,
											"end": 8898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8891,
											"end": 8903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8884,
											"end": 8903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8884,
											"end": 8903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9081,
											"end": 9085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9158,
											"end": 9178,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9143,
											"end": 9152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9139,
											"end": 9156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9196,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9340,
											"end": 9520,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9340,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9465,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9385,
											"end": 9386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9485,
											"end": 9489,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9475,
											"end": 9490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9509,
											"end": 9513,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9514,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 9585,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9637,
											"end": 9638,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 9619,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9659,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9655,
											"end": 9664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9648,
											"end": 9664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9677,
											"end": 9687,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9690,
											"end": 9708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9894,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 9723,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9886,
											"name": "PUSH",
											"source": 1,
											"value": "546F74616C20737570706C792065786365656465640000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 10063,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 10228,
											"end": 10231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10139,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10248,
											"end": 10260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10453,
											"end": 10479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10453,
											"end": 10479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10515,
											"end": 10535,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10679,
											"end": 10683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 10553,
											"end": 10684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10272,
											"end": 10691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 10775,
											"end": 10776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10757,
											"end": 10777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10809,
											"end": 10810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10791,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10786,
											"end": 10811,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10786,
											"end": 10811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10837,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10859,
											"end": 10860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10853,
											"end": 10857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10850,
											"end": 10861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 10864,
											"end": 10882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11019,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10897,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 10988,
											"end": 10993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10970,
											"end": 10994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10960,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 11019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 11156,
											"end": 11161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 11129,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11388,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 11270,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 11357,
											"end": 11362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 11341,
											"end": 11363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11334,
											"end": 11339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11474,
											"end": 11487,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 11496,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 11608,
											"end": 11613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11754,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 11634,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 11723,
											"end": 11728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 11706,
											"end": 11729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11699,
											"end": 11704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11696,
											"end": 11730,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11734,
											"end": 11746,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11816,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11854,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 11863,
											"end": 11895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11907,
											"end": 12025,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 11907,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 11994,
											"end": 11999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 11978,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11971,
											"end": 11976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 12001,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12015,
											"end": 12016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12005,
											"end": 12017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11907,
											"end": 12025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11907,
											"end": 12025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12111,
											"end": 12124,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12102,
											"end": 12124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12102,
											"end": 12124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 12133,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12292,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 12176,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 12261,
											"end": 12266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12246,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12239,
											"end": 12244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12268,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12284,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12377,
											"end": 12390,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 12423,
											"end": 12428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 12399,
											"end": 12429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12603,
											"end": 12609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12655,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12640,
											"end": 12649,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 12638,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12623,
											"end": 12656,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 12659,
											"end": 12738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12779,
											"end": 12780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 12860,
											"end": 12867,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 12851,
											"end": 12857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12840,
											"end": 12849,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12804,
											"end": 12868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12868,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 12997,
											"end": 13004,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 12988,
											"end": 12994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12977,
											"end": 12986,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 12943,
											"end": 13005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 13005,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 13005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 13015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13054,
											"end": 13056,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 13135,
											"end": 13142,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13124,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13111,
											"end": 13133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13080,
											"end": 13143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13070,
											"end": 13143,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13070,
											"end": 13143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13192,
											"end": 13194,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 13273,
											"end": 13280,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13264,
											"end": 13270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13253,
											"end": 13262,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13218,
											"end": 13281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13281,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13163,
											"end": 13291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13333,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 13412,
											"end": 13419,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13403,
											"end": 13409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13392,
											"end": 13401,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13357,
											"end": 13420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13420,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13347,
											"end": 13420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13472,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 13550,
											"end": 13557,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13541,
											"end": 13547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13526,
											"end": 13548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 13496,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13440,
											"end": 13568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 13687,
											"end": 13694,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 13678,
											"end": 13684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13667,
											"end": 13676,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 13663,
											"end": 13685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 13634,
											"end": 13695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13624,
											"end": 13695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13624,
											"end": 13695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13578,
											"end": 13705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 13712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13760,
											"end": 13768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13804,
											"end": 13805,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 13779,
											"end": 13813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13779,
											"end": 13813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13887,
											"end": 13892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13894,
											"end": 13898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13918,
											"end": 13924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13942,
											"end": 13947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 13978,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13967,
											"end": 13975,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13964,
											"end": 13979,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14067,
											"end": 14070,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14057,
											"end": 14061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14081,
											"end": 14099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14121,
											"end": 14129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14117,
											"end": 14133,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14546,
											"end": 14550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14539,
											"end": 14544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14535,
											"end": 14551,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14596,
											"end": 14600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14601,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 14649,
											"end": 14657,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14626,
											"end": 14658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14658,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 14674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14734,
											"end": 14739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14946,
											"end": 14947,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14937,
											"end": 14947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14937,
											"end": 14947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14948,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14948,
											"end": 14953,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14974,
											"end": 14978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14991,
											"end": 14992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14982,
											"end": 14992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14982,
											"end": 14992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14993,
											"end": 14998,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15060,
											"end": 15064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15144,
											"end": 15145,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15121,
											"end": 15122,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15112,
											"end": 15122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15112,
											"end": 15122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 15123,
											"end": 15128,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15184,
											"end": 15187,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15174,
											"end": 15182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15171,
											"end": 15188,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 15191,
											"end": 15209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15240,
											"end": 15248,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15237,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 15233,
											"end": 15249,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15224,
											"end": 15249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15224,
											"end": 15249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15275,
											"end": 15278,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15268,
											"end": 15273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15279,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 15282,
											"end": 15300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15429,
											"end": 15437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15442,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 15414,
											"end": 15418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15411,
											"end": 15424,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15407,
											"end": 15443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15391,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 15379,
											"end": 15387,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15376,
											"end": 15392,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15371,
											"end": 15373,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15362,
											"end": 15374,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15358,
											"end": 15393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15342,
											"end": 15453,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15495,
											"end": 15503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15485,
											"end": 15504,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15476,
											"end": 15504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15476,
											"end": 15504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15530,
											"end": 15533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15523,
											"end": 15528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15520,
											"end": 15534,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 15537,
											"end": 15555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15570,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 15570,
											"end": 15575,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 15648,
											"end": 15651,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15646,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15632,
											"end": 15636,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15629,
											"end": 15630,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 15610,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15684,
											"end": 15688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15679,
											"end": 15682,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15675,
											"end": 15689,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15668,
											"end": 15673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15690,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 15693,
											"end": 15711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15742,
											"end": 15746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15735,
											"end": 15740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15731,
											"end": 15747,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15722,
											"end": 15747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15722,
											"end": 15747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 15753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15817,
											"end": 15822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 15841,
											"end": 15864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15833,
											"end": 15864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15833,
											"end": 15864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 15901,
											"end": 15909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 15885,
											"end": 15910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15873,
											"end": 15910,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15873,
											"end": 15910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 15966,
											"end": 16032,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15956,
											"end": 15964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15950,
											"end": 15954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 15929,
											"end": 16033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15920,
											"end": 16033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15920,
											"end": 16033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 16040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16046,
											"end": 16226,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 16046,
											"end": 16226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16094,
											"end": 16171,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16091,
											"end": 16092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16084,
											"end": 16172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16191,
											"end": 16195,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16181,
											"end": 16196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16215,
											"end": 16219,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16212,
											"end": 16213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16205,
											"end": 16220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16272,
											"end": 16273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 16307,
											"end": 16308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 16289,
											"end": 16309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 16341,
											"end": 16342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 16323,
											"end": 16343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16362,
											"end": 16363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 16367,
											"end": 16385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16409,
											"end": 16410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16406,
											"end": 16407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16402,
											"end": 16411,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16232,
											"end": 16417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16572,
											"end": 16576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16610,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16599,
											"end": 16608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16587,
											"end": 16613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16587,
											"end": 16613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 16691,
											"end": 16692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16689,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16676,
											"end": 16693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16667,
											"end": 16673,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 16623,
											"end": 16694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 16772,
											"end": 16774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16748,
											"end": 16754,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 16704,
											"end": 16776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 16854,
											"end": 16856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16843,
											"end": 16852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16839,
											"end": 16857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16830,
											"end": 16836,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 16786,
											"end": 16858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16423,
											"end": 16865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/CCK/CCKToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUser(address)": "12cae7af",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"freezeUser(address)": "e08ba51a",
							"frozen(address)": "d0516650",
							"getCurrentPrice()": "eb91d37e",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"mintedAmount()": "2d380242",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"remainingSupply()": "da0239a6",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreezeUser(address)": "cb4b73ab",
							"uniswapPool()": "bdd3d825",
							"version()": "54fd4d50",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitelist\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"freezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unfreezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"CCKToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 714,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 716,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 718,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 720,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1206,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1413,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "whitelist",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1417,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "frozen",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1419,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "uniswapPool",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1421,
								"contract": "contracts/CCK/CCKToken_flattened.sol:CCKToken",
								"label": "mintedAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "contracts/CCK/CCKToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 714,
								"contract": "contracts/CCK/CCKToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 716,
								"contract": "contracts/CCK/CCKToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 718,
								"contract": "contracts/CCK/CCKToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 720,
								"contract": "contracts/CCK/CCKToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC3643": {
					"abi": [
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for on-chain identity management and compliance.",
						"kind": "dev",
						"methods": {
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"title": "IERC3643",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compliance()": "6290865d",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"onchainID()": "aba63705",
							"paused()": "5c975abb",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for on-chain identity management and compliance.\",\"kind\":\"dev\",\"methods\":{\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"title\":\"IERC3643\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IERC3643\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				},
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				},
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				},
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				},
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				},
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				},
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/CCKToken_flattened.sol\":{\"keccak256\":\"0x0dc49d73f0df84a6b1ed355c892722a0c3b648986b2f954710bf93719e537389\",\"urls\":[\"bzz-raw://02d273bab5712d24acfed8a1d4f70b88781fcecc682ba681f0c753900dca79c6\",\"dweb:/ipfs/Qmf83Kze5w4g3rxk8tk6yVUEqTAWS6FTGiHGCVpWzn9aSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1206,
								"contract": "contracts/CCK/CCKToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/CCK/CCKToken_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> contracts/CCK/CCKToken_flattened.sol:1342:30:\n     |\n1342 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n     |                              ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 54113,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": 54094
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/CCKToken_flattened.sol:1322:5:\n     |\n1322 |     function version() external view override returns (string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 53540,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": 53443
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/CCKToken_flattened.sol:1326:5:\n     |\n1326 |     function identityRegistry() external view override returns (address) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 53683,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": 53546
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/CCKToken_flattened.sol:1330:5:\n     |\n1330 |     function compliance() external view override returns (address) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 53817,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": 53689
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/CCKToken_flattened.sol:1334:5:\n     |\n1334 |     function paused() external view override returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 53909,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": 53823
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/CCKToken_flattened.sol:1342:5:\n     |\n1342 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 54218,
					"file": "contracts/CCK/CCKToken_flattened.sol",
					"start": 54069
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/CCK/CCKToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/CCKToken_flattened.sol",
					"exportedSymbols": {
						"CCKToken": [
							1788
						],
						"Context": [
							558
						],
						"ERC20": [
							1200
						],
						"IERC1155Errors": [
							694
						],
						"IERC20": [
							506
						],
						"IERC20Errors": [
							599
						],
						"IERC20Metadata": [
							529
						],
						"IERC3643": [
							1394
						],
						"IERC721Errors": [
							647
						],
						"IUniswapV3Pool": [
							429
						],
						"IUniswapV3PoolActions": [
							271
						],
						"IUniswapV3PoolDerivedState": [
							176
						],
						"IUniswapV3PoolEvents": [
							414
						],
						"IUniswapV3PoolImmutables": [
							39
						],
						"IUniswapV3PoolOwnerActions": [
							296
						],
						"IUniswapV3PoolState": [
							146
						],
						"Ownable": [
							1345
						]
					},
					"id": 1789,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "84:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "110:153:0",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "273:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "304:138:0",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "456:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "489:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:0"
									},
									"scope": 39,
									"src": "447:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "504:113:0",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "631:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "663:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:9:0"
									},
									"scope": 39,
									"src": "622:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "678:114:0",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "806:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:0"
									},
									"scope": 39,
									"src": "797:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "853:84:0",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "951:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "980:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 23,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:8:0"
									},
									"scope": 39,
									"src": "942:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "994:358:0",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1366:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1403:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 29,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1403:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:7:0"
									},
									"scope": 39,
									"src": "1357:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1416:363:0",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1793:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1812:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1838:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 35,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:9:0"
									},
									"scope": 39,
									"src": "1784:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "263:1586:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 40,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1929:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 41,
								"nodeType": "StructuredDocumentation",
								"src": "1955:169:0",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "2134:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2160:1140:0",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "3314:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3319:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3390:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3382:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 44,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3422:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3416:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 46,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "3447:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3440:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 48,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "3484:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3477:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 50,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3477:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "3527:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3520:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 52,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "3573:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3567:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 54,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3567:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "3603:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "3598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 56,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:253:0"
									},
									"scope": 146,
									"src": "3305:317:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "3628:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "3810:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3830:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "3856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3855:9:0"
									},
									"scope": 146,
									"src": "3801:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "3871:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "4053:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4073:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "4099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4098:9:0"
									},
									"scope": 146,
									"src": "4044:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "4114:147:0",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "4275:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4287:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "4321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "4313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 74,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "4337:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "4329:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 76,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:32:0"
									},
									"scope": 146,
									"src": "4266:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "4351:150:0",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "4515:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4524:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "4550:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 82,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:9:0"
									},
									"scope": 146,
									"src": "4506:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "4565:1244:0",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "5823:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "5835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "5829:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 87,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5828:12:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "5909:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "5901:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 90,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "5944:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "5937:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 92,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "5937:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "5978:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "5970:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "6021:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6013:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "6062:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6056:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 98,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6056:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "6105:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6097:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 100,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "6156:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6149:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 102,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6149:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6189:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "6184:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:323:0"
									},
									"scope": 146,
									"src": "5814:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "6217:99:0",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "6330:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "6347:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "6341:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 109,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6341:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6340:20:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "6384:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6383:9:0"
									},
									"scope": 146,
									"src": "6321:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "6399:700:0",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "7113:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7131:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "7123:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7122:13:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "7204:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "7196:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 120,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "7236:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "7228:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "7282:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "7274:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "7328:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "7320:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 126,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "7361:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "7353:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 128,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7182:200:0"
									},
									"scope": 146,
									"src": "7104:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "7389:749:0",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "8152:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "8173:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "8165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8164:15:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "8247:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "8240:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 136,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "8281:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "8275:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 138,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "8275:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "8317:33:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "8309:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 140,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "8369:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "8364:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8226:164:0"
									},
									"scope": 146,
									"src": "8143:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "2124:6269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 147,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8480:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 148,
								"nodeType": "StructuredDocumentation",
								"src": "8506:222:0",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 176,
							"linearizedBaseContracts": [
								176
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "8738:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "8771:1045:0",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "9830:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "9856:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "9838:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 150,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "9838:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 151,
													"nodeType": "ArrayTypeName",
													"src": "9838:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9837:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "9931:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "9916:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 154,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "9916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 155,
													"nodeType": "ArrayTypeName",
													"src": "9916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "9965:34:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "9948:51:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 157,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "9948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 158,
													"nodeType": "ArrayTypeName",
													"src": "9948:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9915:85:0"
									},
									"scope": 176,
									"src": "9821:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "10007:771:0",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "10792:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "10824:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 163,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "10841:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "10835:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 165,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10817:34:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "10918:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "10912:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 168,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "10912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "10960:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "10952:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 170,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "11010:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "11003:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 172,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "11003:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10898:135:0"
									},
									"scope": 176,
									"src": "10783:251:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "8728:2308:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 177,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11118:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "11144:102:0",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "11256:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "11284:206:0",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "11504:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "11523:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "11515:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 180,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "11515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11514:22:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11545:0:0"
									},
									"scope": 271,
									"src": "11495:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "11552:1029:0",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "12595:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12617:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12609:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "12642:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12636:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 188,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "12667:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12661:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 190,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12661:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 192,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "12686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12725:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12710:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12599:136:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "12762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "12779:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "12771:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:34:0"
									},
									"scope": 271,
									"src": "12586:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "12794:1053:0",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "13861:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13886:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "13878:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "13911:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "13905:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 206,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "13905:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "13936:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "13930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 208,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "13930:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "13963:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "13955:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 210,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "13997:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "13989:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 212,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13868:151:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "14046:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "14038:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 215,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "14038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "14063:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "14055:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 217,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "14055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14037:34:0"
									},
									"scope": 271,
									"src": "13852:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "14078:631:0",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "14723:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "14743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "14737:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 222,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "14737:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "14768:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "14762:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 224,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "14762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "14787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 226,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "14787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14727:80:0"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "14834:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "14826:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "14851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "14843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14825:34:0"
									},
									"scope": 271,
									"src": "14714:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "14866:1015:0",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "15895:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "15917:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "15909:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "15941:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "15936:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "15968:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "15961:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 240,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "15961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "16001:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "15993:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 242,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "15993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16043:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "16028:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 244,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16028:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15899:154:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "16079:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "16072:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 247,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "16072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "16095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "16088:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 249,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "16088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16071:32:0"
									},
									"scope": 271,
									"src": "15886:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "16110:657:0",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "16781:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "16804:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "16796:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "16831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "16823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "16856:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "16848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16888:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "16873:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16873:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16786:112:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16907:0:0"
									},
									"scope": 271,
									"src": "16772:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "16914:367:0",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "17295:34:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "17337:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "17330:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 266,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17329:35:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17373:0:0"
									},
									"scope": 271,
									"src": "17286:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "11246:6130:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 272,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17463:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "17489:116:0",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "17615:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "17648:205:0",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "17867:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "17888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "17882:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 275,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "17908:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "17902:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 277,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17881:40:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17930:0:0"
									},
									"scope": 296,
									"src": "17858:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "17937:483:0",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "18434:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18467:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "18459:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "18494:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "18486:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 285,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "18528:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "18520:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 287,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18449:101:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "18577:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "18569:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 290,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "18594:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "18586:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 292,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18568:34:0"
									},
									"scope": 296,
									"src": "18425:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "17605:1000:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 297,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18686:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "18712:88:0",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 414,
							"linearizedBaseContracts": [
								414
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "18810:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "18837:344:0",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 305,
									"name": "Initialize",
									"nameLocation": "19192:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "19211:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "19203:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 300,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "19203:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "19231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "19225:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 302,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "19225:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19202:34:0"
									},
									"src": "19186:51:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "19243:551:0",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 322,
									"name": "Mint",
									"nameLocation": "19805:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "19827:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19819:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19859:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19843:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "19888:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19874:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 311,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "19874:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "19921:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19907:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 313,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "19907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19948:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19940:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 315,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "19940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "19972:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19964:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "19997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "19989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19809:201:0"
									},
									"src": "19799:212:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "20017:493:0",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 337,
									"name": "Collect",
									"nameLocation": "20521:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "20538:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "20577:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "20569:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "20610:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "20596:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 328,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "20596:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "20643:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "20629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 330,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "20629:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "20670:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "20662:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 332,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "20662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "20695:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "20687:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 334,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "20687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20528:180:0"
									},
									"src": "20515:194:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "20715:523:0",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 352,
									"name": "Burn",
									"nameLocation": "21249:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21279:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "21263:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "21308:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "21294:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 341,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "21294:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "21341:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "21327:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 343,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "21327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21368:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "21360:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 345,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "21392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "21384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "21417:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "21409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21253:177:0"
									},
									"src": "21243:188:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "21437:600:0",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 369,
									"name": "Swap",
									"nameLocation": "22048:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22078:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22062:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22110:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22094:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "22136:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22129:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22129:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "22160:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 360,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "22185:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22177:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 362,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "22177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "22215:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22207:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 364,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "22207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "22240:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "22234:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 366,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "22234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22052:198:0"
									},
									"src": "22042:209:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "22257:562:0",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 384,
									"name": "Flash",
									"nameLocation": "22830:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22861:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "22845:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22893:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "22877:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "22920:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "22912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "22945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "22937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "22970:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "22962:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "22993:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "22985:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22835:169:0"
									},
									"src": "22824:181:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "23011:451:0",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 391,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "23473:34:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "23524:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "23517:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 386,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "23517:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "23570:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "23563:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 388,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "23563:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23507:98:0"
									},
									"src": "23467:139:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "23612:370:0",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 402,
									"name": "SetFeeProtocol",
									"nameLocation": "23993:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "24014:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "24008:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 393,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24008:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "24037:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "24031:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 395,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24031:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "24060:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "24054:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 397,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24054:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "24083:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "24077:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 399,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24007:92:0"
									},
									"src": "23987:113:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "24106:384:0",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 413,
									"name": "CollectProtocol",
									"nameLocation": "24501:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "24533:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "24517:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "24557:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "24541:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "24576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "24568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 408,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "24593:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "24585:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 410,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24516:85:0"
									},
									"src": "24495:107:0"
								}
							],
							"scope": 1789,
							"src": "18800:5804:0",
							"usedErrors": [],
							"usedEvents": [
								305,
								322,
								337,
								352,
								369,
								384,
								391,
								402,
								413
							]
						},
						{
							"id": 415,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24674:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 417,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"25003:24:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "25003:24:0"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "25003:24:0"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"25033:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 146,
										"src": "25033:19:0"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "25033:19:0"
								},
								{
									"baseName": {
										"id": 421,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"25058:26:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 176,
										"src": "25058:26:0"
									},
									"id": 422,
									"nodeType": "InheritanceSpecifier",
									"src": "25058:26:0"
								},
								{
									"baseName": {
										"id": 423,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"25090:21:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 271,
										"src": "25090:21:0"
									},
									"id": 424,
									"nodeType": "InheritanceSpecifier",
									"src": "25090:21:0"
								},
								{
									"baseName": {
										"id": 425,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"25117:26:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "25117:26:0"
									},
									"id": 426,
									"nodeType": "InheritanceSpecifier",
									"src": "25117:26:0"
								},
								{
									"baseName": {
										"id": 427,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"25149:20:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 414,
										"src": "25149:20:0"
									},
									"id": 428,
									"nodeType": "InheritanceSpecifier",
									"src": "25149:20:0"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 416,
								"nodeType": "StructuredDocumentation",
								"src": "24706:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 429,
							"linearizedBaseContracts": [
								429,
								414,
								296,
								271,
								176,
								146,
								39
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "24981:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1789,
							"src": "24971:203:0",
							"usedErrors": [],
							"usedEvents": [
								305,
								322,
								337,
								352,
								369,
								384,
								391,
								402,
								413
							]
						},
						{
							"id": 430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25308:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 431,
								"nodeType": "StructuredDocumentation",
								"src": "25334:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 506,
							"linearizedBaseContracts": [
								506
							],
							"name": "IERC20",
							"nameLocation": "25416:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "25429:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 440,
									"name": "Transfer",
									"nameLocation": "25598:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25623:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "25607:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25645:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "25629:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "25649:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25606:57:0"
									},
									"src": "25592:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "25670:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 449,
									"name": "Approval",
									"nameLocation": "25829:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25854:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "25838:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25877:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "25861:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25894:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "25886:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25837:63:0"
									},
									"src": "25823:78:0"
								},
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "25907:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "25986:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25997:2:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "26023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26022:9:0"
									},
									"scope": 506,
									"src": "25977:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "26038:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "26123:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "26133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26132:17:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "26173:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26172:9:0"
									},
									"scope": 506,
									"src": "26114:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "26188:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "26415:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26432:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "26424:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26444:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "26436:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26423:27:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "26469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26468:6:0"
									},
									"scope": 506,
									"src": "26406:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "26481:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "26759:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26777:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "26769:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "26784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26768:32:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "26824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26823:9:0"
									},
									"scope": 506,
									"src": "26750:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "26839:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "27520:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27536:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "27528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27553:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "27545:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27527:32:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "27578:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27578:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27577:6:0"
									},
									"scope": 506,
									"src": "27511:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "27590:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "27901:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "27914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27936:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "27928:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "27940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27913:41:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "27973:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27972:6:0"
									},
									"scope": 506,
									"src": "27892:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "25406:2575:0",
							"usedErrors": [],
							"usedEvents": [
								440,
								449
							]
						},
						{
							"id": 507,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28153:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 509,
										"name": "IERC20",
										"nameLocations": [
											"28296:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 506,
										"src": "28296:6:0"
									},
									"id": 510,
									"nodeType": "InheritanceSpecifier",
									"src": "28296:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 508,
								"nodeType": "StructuredDocumentation",
								"src": "28180:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 529,
							"linearizedBaseContracts": [
								529,
								506
							],
							"name": "IERC20Metadata",
							"nameLocation": "28278:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "28309:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "28377:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28381:2:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "28407:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28406:15:0"
									},
									"scope": 529,
									"src": "28368:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "28428:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "28498:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28504:2:0"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "28530:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28529:15:0"
									},
									"scope": 529,
									"src": "28489:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "28551:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "28630:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28638:2:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "28664:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 525,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "28664:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28663:7:0"
									},
									"scope": 529,
									"src": "28621:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "28268:405:0",
							"usedErrors": [],
							"usedEvents": [
								440,
								449
							]
						},
						{
							"id": 530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28797:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 531,
								"nodeType": "StructuredDocumentation",
								"src": "28823:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 558,
							"linearizedBaseContracts": [
								558
							],
							"name": "Context",
							"nameLocation": "29338:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "29414:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "29431:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "29435:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "29431:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 535,
												"id": 538,
												"nodeType": "Return",
												"src": "29424:17:0"
											}
										]
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "29361:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29371:2:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "29405:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29404:9:0"
									},
									"scope": 558,
									"src": "29352:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "29521:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 545,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "29538:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "29542:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "29538:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 544,
												"id": 547,
												"nodeType": "Return",
												"src": "29531:15:0"
											}
										]
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "29463:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29471:2:0"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "29505:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29505:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29504:16:0"
									},
									"scope": 558,
									"src": "29454:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "29631:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29648:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 553,
												"id": 555,
												"nodeType": "Return",
												"src": "29641:8:0"
											}
										]
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "29568:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29588:2:0"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "29622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29621:9:0"
									},
									"scope": 558,
									"src": "29559:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1789,
							"src": "29320:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 559,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29805:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 560,
								"nodeType": "StructuredDocumentation",
								"src": "29831:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 599,
							"linearizedBaseContracts": [
								599
							],
							"name": "IERC20Errors",
							"nameLocation": "29983:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "30002:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 569,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "30322:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "30355:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "30347:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "30371:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "30363:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "30388:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "30380:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30346:49:0"
									},
									"src": "30316:80:0"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "30402:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 574,
									"name": "ERC20InvalidSender",
									"nameLocation": "30565:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "30592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "30584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30583:16:0"
									},
									"src": "30559:41:0"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "30606:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 579,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "30776:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "30805:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "30797:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30796:18:0"
									},
									"src": "30770:45:0"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "30821:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 588,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "31177:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "31204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "31229:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "31221:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "31248:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "31240:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31203:52:0"
									},
									"src": "31171:85:0"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "31262:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 593,
									"name": "ERC20InvalidApprover",
									"nameLocation": "31447:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "31476:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "31468:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31467:18:0"
									},
									"src": "31441:45:0"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "31492:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 598,
									"name": "ERC20InvalidSpender",
									"nameLocation": "31698:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "31718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31717:17:0"
									},
									"src": "31692:43:0"
								}
							],
							"scope": 1789,
							"src": "29973:1764:0",
							"usedErrors": [
								569,
								574,
								579,
								588,
								593,
								598
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "31739:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "IERC721Errors",
							"nameLocation": "31893:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "31913:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 605,
									"name": "ERC721InvalidOwner",
									"nameLocation": "32143:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "32162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32161:15:0"
									},
									"src": "32137:40:0"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "32183:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 610,
									"name": "ERC721NonexistentToken",
									"nameLocation": "32326:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32357:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "32349:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32348:17:0"
									},
									"src": "32320:46:0"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "32372:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 619,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "32672:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32701:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "32693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32717:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "32709:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "32726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32692:48:0"
									},
									"src": "32666:75:0"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "32747:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 624,
									"name": "ERC721InvalidSender",
									"nameLocation": "32910:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "32938:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "32930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32929:16:0"
									},
									"src": "32904:42:0"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "32952:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 629,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "33122:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "33152:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "33144:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33143:18:0"
									},
									"src": "33116:46:0"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "33168:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 636,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "33426:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33461:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "33453:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33479:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "33471:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33452:35:0"
									},
									"src": "33420:68:0"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "33494:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 641,
									"name": "ERC721InvalidApprover",
									"nameLocation": "33679:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "33709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "33701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33700:18:0"
									},
									"src": "33673:46:0"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "33725:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 646,
									"name": "ERC721InvalidOperator",
									"nameLocation": "33933:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33963:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "33955:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33954:18:0"
									},
									"src": "33927:46:0"
								}
							],
							"scope": 1789,
							"src": "31883:2092:0",
							"usedErrors": [
								605,
								610,
								619,
								624,
								629,
								636,
								641,
								646
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "33977:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 694,
							"linearizedBaseContracts": [
								694
							],
							"name": "IERC1155Errors",
							"nameLocation": "34133:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "34154:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 659,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "34526:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "34561:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "34553:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "34577:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "34569:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "34594:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "34586:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "34602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34552:66:0"
									},
									"src": "34520:99:0"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "34625:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 664,
									"name": "ERC1155InvalidSender",
									"nameLocation": "34788:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "34817:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "34809:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34808:16:0"
									},
									"src": "34782:43:0"
								},
								{
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "34831:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 669,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "35001:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "35032:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "35024:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35023:18:0"
									},
									"src": "34995:47:0"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "35048:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 676,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "35315:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "35344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "35370:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "35362:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35343:33:0"
									},
									"src": "35309:68:0"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "35383:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 681,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "35568:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "35599:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "35591:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35590:18:0"
									},
									"src": "35562:47:0"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "35615:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 686,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "35823:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35854:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "35846:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35845:18:0"
									},
									"src": "35817:47:0"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "35870:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 693,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "36161:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "36195:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "36187:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "36214:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "36206:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36186:41:0"
									},
									"src": "36155:73:0"
								}
							],
							"scope": 1789,
							"src": "34123:2107:0",
							"usedErrors": [
								659,
								664,
								669,
								676,
								681,
								686,
								693
							],
							"usedEvents": []
						},
						{
							"id": 695,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36362:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 697,
										"name": "Context",
										"nameLocations": [
											"37177:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 558,
										"src": "37177:7:0"
									},
									"id": 698,
									"nodeType": "InheritanceSpecifier",
									"src": "37177:7:0"
								},
								{
									"baseName": {
										"id": 699,
										"name": "IERC20",
										"nameLocations": [
											"37186:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 506,
										"src": "37186:6:0"
									},
									"id": 700,
									"nodeType": "InheritanceSpecifier",
									"src": "37186:6:0"
								},
								{
									"baseName": {
										"id": 701,
										"name": "IERC20Metadata",
										"nameLocations": [
											"37194:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 529,
										"src": "37194:14:0"
									},
									"id": 702,
									"nodeType": "InheritanceSpecifier",
									"src": "37194:14:0"
								},
								{
									"baseName": {
										"id": 703,
										"name": "IERC20Errors",
										"nameLocations": [
											"37210:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 599,
										"src": "37210:12:0"
									},
									"id": 704,
									"nodeType": "InheritanceSpecifier",
									"src": "37210:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 696,
								"nodeType": "StructuredDocumentation",
								"src": "36392:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1200,
							"linearizedBaseContracts": [
								1200,
								599,
								529,
								506,
								558
							],
							"name": "ERC20",
							"nameLocation": "37168:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 708,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "37273:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1200,
									"src": "37229:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 707,
										"keyName": "account",
										"keyNameLocation": "37245:7:0",
										"keyType": {
											"id": 705,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37237:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37229:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 706,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37256:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 714,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "37361:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1200,
									"src": "37289:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 713,
										"keyName": "account",
										"keyNameLocation": "37305:7:0",
										"keyType": {
											"id": 709,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37297:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37289:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 712,
											"keyName": "spender",
											"keyNameLocation": "37332:7:0",
											"keyType": {
												"id": 710,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "37324:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "37316:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 711,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "37343:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 716,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "37395:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1200,
									"src": "37379:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 715,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37379:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 718,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "37429:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1200,
									"src": "37414:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 717,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "37414:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 720,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "37455:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1200,
									"src": "37440:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 719,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "37440:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "37682:57:0",
										"statements": [
											{
												"expression": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 728,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "37692:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 729,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "37700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "37692:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "37692:13:0"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 732,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "37715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 733,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "37725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "37715:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "37715:17:0"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "37469:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 737,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "37652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "37638:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "37673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "37659:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 724,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37659:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37637:44:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37682:0:0"
									},
									"scope": 1200,
									"src": "37626:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										516
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "37864:29:0",
										"statements": [
											{
												"expression": {
													"id": 743,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 718,
													"src": "37881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 742,
												"id": 744,
												"nodeType": "Return",
												"src": "37874:12:0"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "37745:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "37813:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37817:2:0"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "37849:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37849:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37848:15:0"
									},
									"scope": 1200,
									"src": "37804:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										522
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "38068:31:0",
										"statements": [
											{
												"expression": {
													"id": 752,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 720,
													"src": "38085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 751,
												"id": 753,
												"nodeType": "Return",
												"src": "38078:14:0"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "37899:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "38015:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38021:2:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "38053:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38053:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38052:15:0"
									},
									"scope": 1200,
									"src": "38006:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										528
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "38788:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38805:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 760,
												"id": 762,
												"nodeType": "Return",
												"src": "38798:9:0"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "38105:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "38741:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38749:2:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "38781:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 758,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "38781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38780:7:0"
									},
									"scope": 1200,
									"src": "38732:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										455
									],
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "38935:36:0",
										"statements": [
											{
												"expression": {
													"id": 770,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 716,
													"src": "38952:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 769,
												"id": 771,
												"nodeType": "Return",
												"src": "38945:19:0"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "38820:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "38883:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38894:2:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "38926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38925:9:0"
									},
									"scope": 1200,
									"src": "38874:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										463
									],
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "39103:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 781,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "39120:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 783,
													"indexExpression": {
														"id": 782,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "39130:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39120:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 780,
												"id": 784,
												"nodeType": "Return",
												"src": "39113:25:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "38977:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "39038:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39056:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "39048:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39047:17:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "39094:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39093:9:0"
									},
									"scope": 1200,
									"src": "39029:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										473
									],
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "39415:103:0",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "39433:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "39425:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 796,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "39425:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 798,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "39441:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39441:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39425:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "39473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "39480:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "39484:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 801,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "39463:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39463:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "39463:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "39507:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 795,
												"id": 808,
												"nodeType": "Return",
												"src": "39500:11:0"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "39151:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "39349:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39366:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "39358:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "39370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39357:27:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "39409:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39408:6:0"
									},
									"scope": 1200,
									"src": "39340:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										483
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "39665:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 820,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "39682:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 822,
														"indexExpression": {
															"id": 821,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "39694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39682:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 824,
													"indexExpression": {
														"id": 823,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "39701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39682:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 819,
												"id": 825,
												"nodeType": "Return",
												"src": "39675:34:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "39524:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "39585:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "39603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "39595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "39618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "39610:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39594:32:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "39656:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39655:9:0"
									},
									"scope": 1200,
									"src": "39576:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										493
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "40102:107:0",
										"statements": [
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "40120:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "40112:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 837,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40112:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 839,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "40128:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40128:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40112:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "40159:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "40166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "40175:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1091,
															1151
														],
														"referencedDeclaration": 1091,
														"src": "40150:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40150:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "40150:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "40198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 836,
												"id": 849,
												"nodeType": "Return",
												"src": "40191:11:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "39722:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "40032:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "40048:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "40040:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40065:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "40057:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40039:32:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "40096:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40095:6:0"
									},
									"scope": 1200,
									"src": "40023:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										505
									],
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "40894:151:0",
										"statements": [
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "40912:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "40904:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 863,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 865,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "40922:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40922:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40904:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "40960:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "40966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "40975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 868,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "40944:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40944:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "40944:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "41001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "41007:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "41011:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 874,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "40991:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40991:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "40991:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 862,
												"id": 881,
												"nodeType": "Return",
												"src": "41027:11:0"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "40215:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "40810:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "40823:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40845:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "40837:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40857:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "40849:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40822:41:0"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "40888:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40888:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40887:6:0"
									},
									"scope": 1200,
									"src": "40801:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "41487:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "41501:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41517:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 894,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41509:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41509:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41501:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "41497:86:0",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "41521:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "41569:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "41561:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 900,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "41561:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41561:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 899,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "41542:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41542:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 905,
															"nodeType": "RevertStatement",
															"src": "41535:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "41596:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41602:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41602:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41596:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "41592:86:0",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "41614:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "41664:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "41656:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "41656:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41656:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "41635:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41635:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "41628:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "41695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "41701:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "41705:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 923,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "41687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41687:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "41687:24:0"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "41051:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "41427:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41445:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "41437:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "41451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "41471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "41463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41436:41:0"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41487:0:0"
									},
									"scope": 1200,
									"src": "41418:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "42108:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "42122:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42130:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 941,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42130:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42130:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42122:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "42296:362:0",
													"statements": [
														{
															"assignments": [
																952
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 952,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "42318:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 977,
																	"src": "42310:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42310:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 956,
															"initialValue": {
																"baseExpression": {
																	"id": 953,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "42332:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 955,
																"indexExpression": {
																	"id": 954,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "42342:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "42332:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "42310:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 957,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "42365:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 958,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "42379:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42365:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 967,
															"nodeType": "IfStatement",
															"src": "42361:115:0",
															"trueBody": {
																"id": 966,
																"nodeType": "Block",
																"src": "42386:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 961,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 933,
																					"src": "42436:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 962,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "42442:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 963,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 937,
																					"src": "42455:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 960,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 569,
																				"src": "42411:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42411:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 965,
																		"nodeType": "RevertStatement",
																		"src": "42404:57:0"
																	}
																]
															}
														},
														{
															"id": 976,
															"nodeType": "UncheckedBlock",
															"src": "42489:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 968,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "42596:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 970,
																			"indexExpression": {
																				"id": 969,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "42606:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "42596:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 971,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 952,
																				"src": "42614:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 972,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "42628:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "42614:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "42596:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 975,
																	"nodeType": "ExpressionStatement",
																	"src": "42596:37:0"
																}
															]
														}
													]
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "42118:540:0",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "42142:148:0",
													"statements": [
														{
															"expression": {
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 946,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "42258:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "42274:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42258:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "42258:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 979,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "42672:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42686:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 980,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42678:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42678:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42672:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "42887:206:0",
													"statements": [
														{
															"id": 997,
															"nodeType": "UncheckedBlock",
															"src": "42901:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 991,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "43046:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 993,
																			"indexExpression": {
																				"id": 992,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 935,
																				"src": "43056:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "43046:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 994,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "43063:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "43046:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 996,
																	"nodeType": "ExpressionStatement",
																	"src": "43046:22:0"
																}
															]
														}
													]
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "42668:425:0",
												"trueBody": {
													"id": 990,
													"nodeType": "Block",
													"src": "42690:191:0",
													"statements": [
														{
															"id": 989,
															"nodeType": "UncheckedBlock",
															"src": "42704:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 985,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "42835:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 986,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "42851:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "42835:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"nodeType": "ExpressionStatement",
																	"src": "42835:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1001,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "43117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "43123:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "43127:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "43108:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43108:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "43103:30:0"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "41724:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "42042:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42058:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "42050:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42072:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "42064:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42084:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "42076:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42049:41:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42108:0:0"
									},
									"scope": 1200,
									"src": "42033:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "43539:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1015,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "43553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43572:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "43564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1016,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "43564:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "43564:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43553:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "43549:91:0",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "43576:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43626:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43618:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43618:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43618:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1021,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "43597:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43597:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1027,
															"nodeType": "RevertStatement",
															"src": "43590:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43665:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43657:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43657:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43657:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "43669:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "43678:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1030,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "43649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43649:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "43649:35:0"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "43146:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "43492:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "43506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "43498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43523:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "43515:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43497:32:0"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43539:0:0"
									},
									"scope": 1200,
									"src": "43483:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "44065:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1048,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "44079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "44098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1049,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "44090:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44090:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44079:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "44075:89:0",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "44102:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44150:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44142:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1055,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "44142:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44142:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1054,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "44123:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44123:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1060,
															"nodeType": "RevertStatement",
															"src": "44116:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "44181:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44198:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44190:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44190:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "44202:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "44173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44173:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "44173:35:0"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "43697:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "44018:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "44032:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "44024:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44049:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "44041:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44023:32:0"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44065:0:0"
									},
									"scope": 1200,
									"src": "44009:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "44825:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "44844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "44851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "44860:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44867:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1083,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1091,
															1151
														],
														"referencedDeclaration": 1151,
														"src": "44835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44835:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "44835:37:0"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "44221:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "44760:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44777:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "44769:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "44784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44809:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "44801:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44768:47:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44825:0:0"
									},
									"scope": 1200,
									"src": "44751:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "45824:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "45838:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45855:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1104,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45847:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45847:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45838:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "45834:89:0",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "45859:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45909:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "45901:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1110,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "45901:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45901:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1109,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "45880:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45880:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1115,
															"nodeType": "RevertStatement",
															"src": "45873:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "45936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45955:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "45947:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45947:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45936:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"nodeType": "IfStatement",
												"src": "45932:90:0",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "45959:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46008:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46000:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1125,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46000:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46000:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1124,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "45980:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45980:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1130,
															"nodeType": "RevertStatement",
															"src": "45973:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1133,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "46031:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1136,
															"indexExpression": {
																"id": 1134,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "46043:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46031:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1137,
														"indexExpression": {
															"id": 1135,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "46050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46031:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1138,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "46061:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46031:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "46031:35:0"
											},
											{
												"condition": {
													"id": 1141,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1100,
													"src": "46080:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "IfStatement",
												"src": "46076:76:0",
												"trueBody": {
													"id": 1148,
													"nodeType": "Block",
													"src": "46091:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1143,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "46119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1144,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "46126:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1145,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "46135:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1142,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "46110:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46110:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1147,
															"nodeType": "EmitStatement",
															"src": "46105:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "44885:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "45735:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "45744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "45759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "45784:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "45776:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "45796:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "45791:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45743:63:0"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45824:0:0"
									},
									"scope": 1200,
									"src": "45726:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "46529:387:0",
										"statements": [
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "46547:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "46539:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1167,
												"initialValue": {
													"arguments": [
														{
															"id": 1164,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "46576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "46583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1163,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "46566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46566:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46539:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1168,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "46605:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46629:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1170,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "46629:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1169,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "46624:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46624:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "46638:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "46624:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46605:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "IfStatement",
												"src": "46601:309:0",
												"trueBody": {
													"id": 1196,
													"nodeType": "Block",
													"src": "46643:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "46661:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1176,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "46680:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46661:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1185,
															"nodeType": "IfStatement",
															"src": "46657:130:0",
															"trueBody": {
																"id": 1184,
																"nodeType": "Block",
																"src": "46687:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1179,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "46739:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1162,
																					"src": "46748:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1181,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "46766:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1178,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 588,
																				"src": "46712:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46712:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1183,
																		"nodeType": "RevertStatement",
																		"src": "46705:67:0"
																	}
																]
															}
														},
														{
															"id": 1195,
															"nodeType": "UncheckedBlock",
															"src": "46800:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1187,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "46837:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1188,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1156,
																				"src": "46844:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1189,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1162,
																					"src": "46853:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1190,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "46872:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46853:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46879:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1186,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1091,
																				1151
																			],
																			"referencedDeclaration": 1151,
																			"src": "46828:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46828:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1194,
																	"nodeType": "ExpressionStatement",
																	"src": "46828:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "46164:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "46449:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "46473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "46465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "46488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "46480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "46505:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "46497:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46464:47:0"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46529:0:0"
									},
									"scope": 1200,
									"src": "46440:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1789,
							"src": "37150:9768:0",
							"usedErrors": [
								569,
								574,
								579,
								588,
								593,
								598
							],
							"usedEvents": [
								440,
								449
							]
						},
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "47044:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1203,
										"name": "Context",
										"nameLocations": [
											"47588:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 558,
										"src": "47588:7:0"
									},
									"id": 1204,
									"nodeType": "InheritanceSpecifier",
									"src": "47588:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1202,
								"nodeType": "StructuredDocumentation",
								"src": "47071:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1345,
							"linearizedBaseContracts": [
								1345,
								558
							],
							"name": "Ownable",
							"nameLocation": "47577:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1206,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "47618:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "47602:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1205,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "47602:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "47631:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1211,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "47727:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "47754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47753:17:0"
									},
									"src": "47721:50:0"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "47777:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1216,
									"name": "OwnableInvalidOwner",
									"nameLocation": "47870:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "47898:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "47890:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47889:15:0"
									},
									"src": "47864:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1222,
									"name": "OwnershipTransferred",
									"nameLocation": "47917:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "47954:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "47938:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "47985:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "47969:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47937:57:0"
									},
									"src": "47911:84:0"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "48155:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "48169:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48193:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1229,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48185:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48185:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48169:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "48165:95:0",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "48197:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48246:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48238:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1235,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48238:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48238:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1234,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "48218:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48218:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1240,
															"nodeType": "RevertStatement",
															"src": "48211:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "48288:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1243,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "48269:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48269:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "48269:32:0"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "48001:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1248,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "48141:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "48133:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48132:22:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48155:0:0"
									},
									"scope": 1345,
									"src": "48121:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "48417:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1251,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "48427:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48427:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "48427:13:0"
											},
											{
												"id": 1254,
												"nodeType": "PlaceholderStatement",
												"src": "48450:1:0"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "48314:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1256,
									"name": "onlyOwner",
									"nameLocation": "48405:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48414:2:0"
									},
									"src": "48396:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "48589:30:0",
										"statements": [
											{
												"expression": {
													"id": 1262,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1206,
													"src": "48606:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1263,
												"nodeType": "Return",
												"src": "48599:13:0"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "48464:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "48543:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48548:2:0"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "48580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48579:9:0"
									},
									"scope": 1345,
									"src": "48534:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "48737:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1269,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "48751:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48751:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1271,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "48762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48762:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48751:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "48747:101:0",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "48776:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1275,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 540,
																			"src": "48824:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48824:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1274,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "48797:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48797:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1278,
															"nodeType": "RevertStatement",
															"src": "48790:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "48625:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "48701:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48712:2:0"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48737:0:0"
									},
									"scope": 1345,
									"src": "48692:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "49243:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49280:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49272:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49272:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1288,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "49253:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49253:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "49253:30:0"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "48860:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "onlyOwner",
												"nameLocations": [
													"49233:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "49233:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "49233:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "49198:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49215:2:0"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49243:0:0"
									},
									"scope": 1345,
									"src": "49189:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "49509:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1304,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "49523:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49535:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1305,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49535:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49535:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49523:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "49519:91:0",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "49547:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49596:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49588:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1311,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49588:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49588:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1310,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "49568:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49568:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1316,
															"nodeType": "RevertStatement",
															"src": "49561:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "49638:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1319,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "49619:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49619:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "49619:28:0"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "49296:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "onlyOwner",
												"nameLocations": [
													"49499:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "49499:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "49499:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "49448:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "49474:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "49466:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49465:18:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49509:0:0"
									},
									"scope": 1345,
									"src": "49439:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "49871:124:0",
										"statements": [
											{
												"assignments": [
													1331
												],
												"declarations": [
													{
														"constant": false,
														"id": 1331,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "49889:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1343,
														"src": "49881:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49881:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"id": 1332,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1206,
													"src": "49900:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49881:25:0"
											},
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1334,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "49916:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1335,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "49925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49916:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "49916:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1339,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "49969:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "49979:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "49948:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49948:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "EmitStatement",
												"src": "49943:45:0"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "49660:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "49817:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "49844:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "49836:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49835:18:0"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49871:0:0"
									},
									"scope": 1345,
									"src": "49808:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1789,
							"src": "47559:2438:0",
							"usedErrors": [
								1211,
								1216
							],
							"usedEvents": [
								1222
							]
						},
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "50036:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3643",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1347,
								"nodeType": "StructuredDocumentation",
								"src": "50061:93:0",
								"text": " @title IERC3643\n @dev Interface for on-chain identity management and compliance."
							},
							"fullyImplemented": false,
							"id": 1394,
							"linearizedBaseContracts": [
								1394
							],
							"name": "IERC3643",
							"nameLocation": "50165:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "50180:116:0",
										"text": " @dev Returns the on-chain ID of the contract.\n @return address The address of the contract."
									},
									"functionSelector": "aba63705",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "50310:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50319:2:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "50345:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50344:9:0"
									},
									"scope": 1394,
									"src": "50301:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "50364:102:0",
										"text": " @dev Returns the version of the contract.\n @return string The version string."
									},
									"functionSelector": "54fd4d50",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "50480:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50487:2:0"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "50513:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "50513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50512:15:0"
									},
									"scope": 1394,
									"src": "50471:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "50538:116:0",
										"text": " @dev Returns the identity registry address.\n @return address The identity registry address."
									},
									"functionSelector": "134e18f4",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "50668:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50684:2:0"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "50710:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50709:9:0"
									},
									"scope": 1394,
									"src": "50659:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "50729:102:0",
										"text": " @dev Returns the compliance address.\n @return address The compliance address."
									},
									"functionSelector": "6290865d",
									"id": 1371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "50845:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50855:2:0"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "50881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50880:9:0"
									},
									"scope": 1394,
									"src": "50836:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "50900:114:0",
										"text": " @dev Checks if the contract is paused.\n @return bool Indicates if the contract is paused."
									},
									"functionSelector": "5c975abb",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "51028:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51034:2:0"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "51060:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51060:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51059:6:0"
									},
									"scope": 1394,
									"src": "51019:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "51076:160:0",
										"text": " @dev Checks if a user is frozen.\n @param userAddress Address of the user to check.\n @return bool Indicates if the user is frozen."
									},
									"functionSelector": "e5839836",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "51250:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "51267:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "51259:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51258:21:0"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "51303:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51303:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51302:6:0"
									},
									"scope": 1394,
									"src": "51241:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "51319:175:0",
										"text": " @dev Returns the number of frozen tokens for a user.\n @param userAddress Address of the user to check.\n @return uint256 Amount of frozen tokens."
									},
									"functionSelector": "158b1a57",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "51508:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "51532:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "51524:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51523:21:0"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "51568:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51567:9:0"
									},
									"scope": 1394,
									"src": "51499:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "50155:1424:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1395,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51618:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1397,
										"name": "ERC20",
										"nameLocations": [
											"51764:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "51764:5:0"
									},
									"id": 1398,
									"nodeType": "InheritanceSpecifier",
									"src": "51764:5:0"
								},
								{
									"baseName": {
										"id": 1399,
										"name": "Ownable",
										"nameLocations": [
											"51771:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1345,
										"src": "51771:7:0"
									},
									"id": 1400,
									"nodeType": "InheritanceSpecifier",
									"src": "51771:7:0"
								},
								{
									"baseName": {
										"id": 1401,
										"name": "IERC3643",
										"nameLocations": [
											"51780:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1394,
										"src": "51780:8:0"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "51780:8:0"
								}
							],
							"canonicalName": "CCKToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1396,
								"nodeType": "StructuredDocumentation",
								"src": "51643:94:0",
								"text": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\n 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
							},
							"fullyImplemented": true,
							"id": 1788,
							"linearizedBaseContracts": [
								1788,
								1394,
								1345,
								1200,
								599,
								529,
								506,
								558
							],
							"name": "CCKToken",
							"nameLocation": "51752:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1409,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "51906:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1788,
									"src": "51882:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "51882:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 1408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530305f303030",
											"id": 1404,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "51921:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1407,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1405,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "51931:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "51935:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "51931:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "51921:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 1413,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "51991:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1788,
									"src": "51959:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1412,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1410,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "51967:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "51959:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1411,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "51978:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0516650",
									"id": 1417,
									"mutability": "mutable",
									"name": "frozen",
									"nameLocation": "52051:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1788,
									"src": "52019:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1416,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "52027:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "52019:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1415,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "52038:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bdd3d825",
									"id": 1419,
									"mutability": "mutable",
									"name": "uniswapPool",
									"nameLocation": "52094:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1788,
									"src": "52079:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1418,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52079:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d380242",
									"id": 1421,
									"mutability": "mutable",
									"name": "mintedAmount",
									"nameLocation": "52150:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1788,
									"src": "52135:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1420,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "52135:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "52278:317:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1436,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "52296:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "52307:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "52296:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52316:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "52296:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373207265717569726564",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52319:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															},
															"value": "At least one whitelisted address required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52288:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "52288:75:0"
											},
											{
												"body": {
													"id": 1462,
													"nodeType": "Block",
													"src": "52469:56:0",
													"statements": [
														{
															"expression": {
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1454,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "52483:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1458,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1455,
																			"name": "_whitelist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "52493:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1457,
																		"indexExpression": {
																			"id": 1456,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "52504:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "52493:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "52483:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52510:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "52483:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1461,
															"nodeType": "ExpressionStatement",
															"src": "52483:31:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "52441:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1448,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "52445:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52456:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52445:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52441:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1463,
												"initializationExpression": {
													"assignments": [
														1444
													],
													"declarations": [
														{
															"constant": false,
															"id": 1444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "52434:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1463,
															"src": "52426:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52426:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1446,
													"initialValue": {
														"hexValue": "30",
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52438:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "52426:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "52464:3:0",
														"subExpression": {
															"id": 1451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "52464:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1453,
													"nodeType": "ExpressionStatement",
													"src": "52464:3:0"
												},
												"nodeType": "ForStatement",
												"src": "52421:104:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52541:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "52545:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52541:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "52553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1464,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "52535:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52535:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "52535:31:0"
											}
										]
									},
									"id": 1471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43434b",
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "52244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												},
												{
													"hexValue": "43434b",
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "52251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												}
											],
											"id": 1429,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1426,
												"name": "ERC20",
												"nameLocations": [
													"52238:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1200,
												"src": "52238:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52238:19:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1431,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "52266:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "52270:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "52266:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1433,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1430,
												"name": "Ownable",
												"nameLocations": [
													"52258:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1345,
												"src": "52258:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52258:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "52226:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "52209:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1422,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "52209:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1423,
													"nodeType": "ArrayTypeName",
													"src": "52209:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52208:29:0"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52278:0:0"
									},
									"scope": 1788,
									"src": "52197:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "52689:41:0",
										"statements": [
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1478,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "52699:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1480,
														"indexExpression": {
															"id": 1479,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "52709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52699:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52719:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "52699:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "52699:24:0"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1475,
												"name": "onlyOwner",
												"nameLocations": [
													"52679:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "52679:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52679:9:0"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "52639:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "52662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "52654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52653:16:0"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52689:0:0"
									},
									"scope": 1788,
									"src": "52630:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "52829:42:0",
										"statements": [
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1492,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "52839:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1494,
														"indexExpression": {
															"id": 1493,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "52849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52839:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52859:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "52839:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "52839:25:0"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1489,
												"name": "onlyOwner",
												"nameLocations": [
													"52819:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "52819:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52819:9:0"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "52774:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "52802:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "52794:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52793:16:0"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52829:0:0"
									},
									"scope": 1788,
									"src": "52765:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "52950:36:0",
										"statements": [
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1506,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "52960:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1508,
														"indexExpression": {
															"id": 1507,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "52967:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "52960:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52975:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "52960:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "52960:19:0"
											}
										]
									},
									"functionSelector": "e08ba51a",
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1503,
												"name": "onlyOwner",
												"nameLocations": [
													"52940:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "52940:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52940:9:0"
										}
									],
									"name": "freezeUser",
									"nameLocation": "52906:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "52925:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "52917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52916:14:0"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52950:0:0"
									},
									"scope": 1788,
									"src": "52897:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "53067:37:0",
										"statements": [
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1520,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "53077:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1522,
														"indexExpression": {
															"id": 1521,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "53084:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53077:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53092:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "53077:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "53077:20:0"
											}
										]
									},
									"functionSelector": "cb4b73ab",
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1517,
												"name": "onlyOwner",
												"nameLocations": [
													"53057:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "53057:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53057:9:0"
										}
									],
									"name": "unfreezeUser",
									"nameLocation": "53021:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "53042:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "53034:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53033:14:0"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53067:0:0"
									},
									"scope": 1788,
									"src": "53012:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "53213:85:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1532,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "53230:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1533,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "53245:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53230:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1531,
												"id": 1535,
												"nodeType": "Return",
												"src": "53223:34:0"
											}
										]
									},
									"functionSelector": "da0239a6",
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingSupply",
									"nameLocation": "53163:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53178:2:0"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "53204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53203:9:0"
									},
									"scope": 1788,
									"src": "53154:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "53400:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "53425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CCKToken_$1788",
																"typeString": "contract CCKToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_CCKToken_$1788",
																"typeString": "contract CCKToken"
															}
														],
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "53417:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1543,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "53417:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53417:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1547,
												"nodeType": "Return",
												"src": "53410:20:0"
											}
										]
									},
									"functionSelector": "aba63705",
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "53347:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1539,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53373:8:0"
									},
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53356:2:0"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "53391:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53390:9:0"
									},
									"scope": 1788,
									"src": "53338:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "53509:31:0",
										"statements": [
											{
												"expression": {
													"hexValue": "312e302e30",
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "53526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
														"typeString": "literal_string \"1.0.0\""
													},
													"value": "1.0.0"
												},
												"functionReturnParameters": 1554,
												"id": 1556,
												"nodeType": "Return",
												"src": "53519:14:0"
											}
										]
									},
									"functionSelector": "54fd4d50",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "53452:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1551,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53476:8:0"
									},
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53459:2:0"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "53494:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "53494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53493:15:0"
									},
									"scope": 1788,
									"src": "53443:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "53615:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53640:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "53632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1564,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "53632:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53632:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1568,
												"nodeType": "Return",
												"src": "53625:17:0"
											}
										]
									},
									"functionSelector": "134e18f4",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "53555:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1560,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53588:8:0"
									},
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53571:2:0"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "53606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53605:9:0"
									},
									"scope": 1788,
									"src": "53546:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1371
									],
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "53752:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53777:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "53769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1576,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "53769:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53769:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1580,
												"nodeType": "Return",
												"src": "53762:17:0"
											}
										]
									},
									"functionSelector": "6290865d",
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "53698:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1572,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53725:8:0"
									},
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53708:2:0"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "53743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53742:9:0"
									},
									"scope": 1788,
									"src": "53689:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1377
									],
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "53879:30:0",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "53896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1587,
												"id": 1589,
												"nodeType": "Return",
												"src": "53889:12:0"
											}
										]
									},
									"functionSelector": "5c975abb",
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "53832:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1584,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53855:8:0"
									},
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53838:2:0"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "53873:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53872:6:0"
									},
									"scope": 1788,
									"src": "53823:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1385
									],
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "53992:71:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1599,
														"name": "frozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "54009:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1601,
													"indexExpression": {
														"id": 1600,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "54016:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "54009:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1598,
												"id": 1602,
												"nodeType": "Return",
												"src": "54002:26:0"
											}
										]
									},
									"functionSelector": "e5839836",
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "53924:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53968:8:0"
									},
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "53941:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "53933:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53933:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53932:21:0"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "53986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53985:6:0"
									},
									"scope": 1788,
									"src": "53915:148:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1393
									],
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "54156:62:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "54173:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1611,
												"id": 1613,
												"nodeType": "Return",
												"src": "54166:8:0"
											}
										]
									},
									"functionSelector": "158b1a57",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "54078:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1608,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54129:8:0"
									},
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "54102:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "54094:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54093:21:0"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "54147:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54146:9:0"
									},
									"scope": 1788,
									"src": "54069:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "54379:197:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "54397:19:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1626,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "54398:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1629,
																"indexExpression": {
																	"expression": {
																		"id": 1627,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "54405:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54409:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "54405:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "54398:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54418:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54389:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "54389:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1635,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "54455:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1640,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1619,
																				"src": "54481:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54473:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1638,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "54473:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54473:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "54465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1636,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "54465:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54465:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "54455:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54491:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54447:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "54447:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1649,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "54551:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1650,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "54562:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1647,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "54536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1788_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54542:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 810,
														"src": "54536:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54536:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1624,
												"id": 1652,
												"nodeType": "Return",
												"src": "54529:40:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "54304:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1621,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54355:8:0"
									},
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "54321:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "54313:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "54340:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "54332:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54312:35:0"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "54373:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54372:6:0"
									},
									"scope": 1788,
									"src": "54295:281:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										883
									],
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "54718:205:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "54736:15:0",
															"subExpression": {
																"baseExpression": {
																	"id": 1667,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "54737:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1669,
																"indexExpression": {
																	"id": 1668,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1656,
																	"src": "54744:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "54737:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54753:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54728:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54728:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "54728:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1675,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "54790:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1680,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1660,
																				"src": "54816:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54808:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1678,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "54808:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54808:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "54800:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1676,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "54800:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54800:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "54790:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54826:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54782:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54782:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "54782:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "54890:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1690,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "54898:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1691,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "54909:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1687,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "54871:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1788_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54877:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 883,
														"src": "54871:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54871:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1665,
												"id": 1693,
												"nodeType": "Return",
												"src": "54864:52:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "54623:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1662,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54694:8:0"
									},
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "54644:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "54636:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "54660:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "54652:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "54679:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "54671:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54635:51:0"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "54712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54711:6:0"
									},
									"scope": 1788,
									"src": "54614:309:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "55031:198:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1705,
																"name": "whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "55049:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1707,
															"indexExpression": {
																"id": 1706,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "55059:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55049:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077686974656c6973746564",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55064:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															},
															"value": "Not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															}
														],
														"id": 1704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55041:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "55041:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1712,
																	"name": "mintedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "55100:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1713,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "55115:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "55100:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1715,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "55125:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "55100:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20737570706c79206578636565646564",
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55139:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															},
															"value": "Total supply exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55092:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55092:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "55092:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1721,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "55179:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "55183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "55173:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55173:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "55173:17:0"
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "55200:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1726,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "55216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55200:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "55200:22:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1701,
												"name": "onlyOwner",
												"nameLocations": [
													"55021:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1256,
												"src": "55021:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55021:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "54979:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54992:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "54984:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "55004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "54996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54983:28:0"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55031:0:0"
									},
									"scope": 1788,
									"src": "54970:259:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										764
									],
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "55380:44:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "55397:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1735,
												"id": 1737,
												"nodeType": "Return",
												"src": "55390:8:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "55324:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55355:8:0"
									},
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55332:2:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "55373:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "55373:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55372:7:0"
									},
									"scope": 1788,
									"src": "55315:109:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "55544:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1747,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "55571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1746,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "55561:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55561:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1745,
												"id": 1749,
												"nodeType": "Return",
												"src": "55554:22:0"
											}
										]
									},
									"functionSelector": "12cae7af",
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUser",
									"nameLocation": "55484:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "55506:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "55498:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55497:14:0"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "55535:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55534:9:0"
									},
									"scope": 1788,
									"src": "55475:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "55711:313:0",
										"statements": [
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "55736:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "55721:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1757,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1756,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"55721:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 429,
																"src": "55721:14:0"
															},
															"referencedDeclaration": 429,
															"src": "55721:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"arguments": [
														{
															"id": 1760,
															"name": "uniswapPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "55758:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1759,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "55743:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$429_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55743:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55721:49:0"
											},
											{
												"assignments": [
													1764,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1764,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "55789:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "55781:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1763,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "55781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 1768,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1765,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "55817:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55822:5:0",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 59,
														"src": "55817:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55817:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55780:49:0"
											},
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "55902:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "55894:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1783,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1773,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "55918:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "55910:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55910:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55935:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "55910:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55940:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "313932",
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55946:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_192_by_1",
																				"typeString": "int_const 192"
																			},
																			"value": "192"
																		}
																	],
																	"id": 1779,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "55945:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_192_by_1",
																		"typeString": "int_const 192"
																	}
																},
																"src": "55940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																}
															}
														],
														"id": 1781,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55939:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
															"typeString": "int_const 6277...(50 digits omitted)...2896"
														}
													},
													"src": "55910:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55894:57:0"
											},
											{
												"expression": {
													"id": 1784,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1770,
													"src": "55990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1785,
												"nodeType": "Return",
												"src": "55983:12:0"
											}
										]
									},
									"functionSelector": "eb91d37e",
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "55661:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55676:2:0"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "55702:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55701:9:0"
									},
									"scope": 1788,
									"src": "55652:372:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "51743:4283:0",
							"usedErrors": [
								569,
								574,
								579,
								588,
								593,
								598,
								1211,
								1216
							],
							"usedEvents": [
								440,
								449,
								1222
							]
						}
					],
					"src": "84:55942:0"
				},
				"id": 0
			}
		}
	}
}