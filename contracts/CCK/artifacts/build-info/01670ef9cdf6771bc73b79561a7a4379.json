{
	"id": "01670ef9cdf6771bc73b79561a7a4379",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCK/CCKToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/// 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\r\n/// 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"contracts/CCK/ERC3643.sol\";\r\n \r\ncontract CCKToken is ERC20, Ownable, IERC3643 {\r\n    uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18; // 总供应量\r\n    mapping(address => bool) public whitelist; // 白名单\r\n    mapping(address => bool) public frozen; // 冻结状态\r\n    uint256 public mintedAmount; // 已发行的代币数量\r\n\r\n    constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {\r\n        require(_whitelist.length > 0, \"At least one whitelisted address required\");\r\n        \r\n        // 批量添加白名单成员\r\n        for (uint256 i = 0; i < _whitelist.length; i++) {\r\n            whitelist[_whitelist[i]] = true;\r\n        }\r\n\r\n        _mint(msg.sender, TOTAL_SUPPLY); // 初始发行总量\r\n    }\r\n\r\n    // 添加白名单成员\r\n    function addToWhitelist(address member) external onlyOwner {\r\n        whitelist[member] = true;\r\n    }\r\n\r\n    // 移除白名单成员\r\n    function removeFromWhitelist(address member) external onlyOwner {\r\n        whitelist[member] = false;\r\n    }\r\n\r\n    // 冻结用户\r\n    function freezeUser(address user) external onlyOwner {\r\n        frozen[user] = true;\r\n    }\r\n\r\n    // 解冻用户\r\n    function unfreezeUser(address user) external onlyOwner {\r\n        frozen[user] = false;\r\n    }\r\n\r\n    // 返回可铸造的剩余代币数量\r\n    function remainingSupply() external view returns (uint256) {\r\n        return TOTAL_SUPPLY - mintedAmount; // 计算剩余的可铸造数量\r\n    }\r\n\r\n    // ERC-3643协议方法实现\r\n    function onchainID() external view override returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    function version() external view override returns (string memory) {\r\n        return \"1.0.0\";\r\n    }\r\n\r\n    function identityRegistry() external view override returns (address) {\r\n        return address(0); // 返回身份注册合约地址\r\n    }\r\n\r\n    function compliance() external view override returns (address) {\r\n        return address(0); // 返回合规性合约地址\r\n    }\r\n\r\n    function paused() external view override returns (bool) {\r\n        return false; \r\n    }\r\n\r\n    function isFrozen(address userAddress) external view override returns (bool) {\r\n        return frozen[userAddress]; // 返回用户冻结状态\r\n    }\r\n\r\n    function getFrozenTokens(address userAddress) external view override returns (uint256) {\r\n        return 0; // 目前没有冻结的代币逻辑\r\n    }\r\n\r\n    // 重写转账函数，确保转账金额为整数且不被冻结\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        require(!frozen[msg.sender], \"Sender is frozen\");\r\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    // 重写转账授权函数\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        require(!frozen[sender], \"Sender is frozen\");\r\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    // 发行代币，需在白名单内\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        require(whitelist[to], \"Not whitelisted\");\r\n        require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\");\r\n        _mint(to, amount);\r\n        mintedAmount += amount;\r\n    }\r\n\r\n    // 查看用户持有的代币数量\r\n    function balanceOfUser(address user) external view returns (uint256) {\r\n        return balanceOf(user); // 调用ERC20的balanceOf方法\r\n    }\r\n}"
			},
			"contracts/CCK/ERC3643.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC3643 {\r\n    function onchainID() external view returns (address);\r\n    function version() external view returns (string memory);\r\n    function identityRegistry() external view returns (address);\r\n    function compliance() external view returns (address);\r\n    function paused() external view returns (bool);\r\n    function isFrozen(address userAddress) external view returns (bool);\r\n    function getFrozenTokens(address userAddress) external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CCK/CCKToken.sol": {
				"CCKToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_whitelist",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOfUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "freezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "frozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unfreezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/CCKToken.sol\":309:3939  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCK/CCKToken.sol\":626:1033  constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCK/CCKToken.sol\":695:705  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":746:747  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":726:736  _whitelist */\n  dup2\n    /* \"contracts/CCK/CCKToken.sol\":726:743  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CCKToken.sol\":726:747  _whitelist.length > 0 */\n  gt\n    /* \"contracts/CCK/CCKToken.sol\":718:793  require(_whitelist.length > 0, \"At least one whitelisted address required\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CCK/CCKToken.sol\":859:868  uint256 i */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":854:960  for (uint256 i = 0; i < _whitelist.length; i++) {... */\ntag_21:\n    /* \"contracts/CCK/CCKToken.sol\":878:888  _whitelist */\n  dup2\n    /* \"contracts/CCK/CCKToken.sol\":878:895  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CCKToken.sol\":874:875  i */\n  dup2\n    /* \"contracts/CCK/CCKToken.sol\":874:895  i < _whitelist.length */\n  lt\n    /* \"contracts/CCK/CCKToken.sol\":854:960  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  iszero\n  tag_22\n  jumpi\n    /* \"contracts/CCK/CCKToken.sol\":944:948  true */\n  0x01\n    /* \"contracts/CCK/CCKToken.sol\":917:926  whitelist */\n  0x06\n    /* \"contracts/CCK/CCKToken.sol\":917:941  whitelist[_whitelist[i]] */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":927:937  _whitelist */\n  dup5\n    /* \"contracts/CCK/CCKToken.sol\":938:939  i */\n  dup5\n    /* \"contracts/CCK/CCKToken.sol\":927:940  _whitelist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_24\n  jumpi\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\ntag_24:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CCK/CCKToken.sol\":917:941  whitelist[_whitelist[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":917:948  whitelist[_whitelist[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":897:900  i++ */\n  dup1\n  dup1\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap2\n  pop\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":854:960  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  jump(tag_21)\ntag_22:\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":972:1003  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_29\n    /* \"contracts/CCK/CCKToken.sol\":978:988  msg.sender */\n  caller\n    /* \"contracts/CCK/CCKToken.sol\":401:417  500_000 * 10**18 */\n  0x69e10de76676d0800000\n    /* \"contracts/CCK/CCKToken.sol\":972:977  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/CCK/CCKToken.sol\":972:1003  _mint(msg.sender, TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/CCK/CCKToken.sol\":626:1033  constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":309:3939  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_42)\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_44\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_47)\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_50:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_51:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_52:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_53:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_54:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_55:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_56:\n    /* \"#utility.yul\":834:861   */\n  tag_99\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_54\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_101\n  tag_55\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":907:995   */\ntag_100:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_57:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_103\n  tag_50\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_104\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_56\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_58:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_107\n  tag_55\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1326:1382   */\ntag_106:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_59:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  dup1\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_60:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_61:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_111\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_60\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_62:\n    /* \"#utility.yul\":1920:1944   */\n  tag_113\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_61\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  dup1\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_114:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_63:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_116\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_62\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_64:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_118\n    /* \"#utility.yul\":2289:2353   */\n  tag_119\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_58\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2273:2354   */\n  tag_57\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_121\n  tag_59\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2505:2627   */\ntag_120:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_122:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_125\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_63\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_65:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_128\n  tag_53\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2994:3116   */\ntag_127:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_129\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_64\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3841   */\ntag_3:\n    /* \"#utility.yul\":3382:3388   */\n  0x00\n    /* \"#utility.yul\":3431:3433   */\n  0x20\n    /* \"#utility.yul\":3419:3428   */\n  dup3\n    /* \"#utility.yul\":3410:3417   */\n  dup5\n    /* \"#utility.yul\":3406:3429   */\n  sub\n    /* \"#utility.yul\":3402:3434   */\n  slt\n    /* \"#utility.yul\":3399:3518   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3437:3516   */\n  tag_132\n  tag_51\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3399:3518   */\ntag_131:\n    /* \"#utility.yul\":3578:3579   */\n  0x00\n    /* \"#utility.yul\":3567:3576   */\n  dup3\n    /* \"#utility.yul\":3563:3580   */\n  add\n    /* \"#utility.yul\":3557:3581   */\n  mload\n    /* \"#utility.yul\":3608:3626   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3600:3606   */\n  dup2\n    /* \"#utility.yul\":3597:3627   */\n  gt\n    /* \"#utility.yul\":3594:3711   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":3630:3709   */\n  tag_134\n  tag_52\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3594:3711   */\ntag_133:\n    /* \"#utility.yul\":3735:3824   */\n  tag_135\n    /* \"#utility.yul\":3816:3823   */\n  dup5\n    /* \"#utility.yul\":3807:3813   */\n  dup3\n    /* \"#utility.yul\":3796:3805   */\n  dup6\n    /* \"#utility.yul\":3792:3814   */\n  add\n    /* \"#utility.yul\":3735:3824   */\n  tag_65\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3725:3824   */\n  swap2\n  pop\n    /* \"#utility.yul\":3528:3834   */\n  pop\n    /* \"#utility.yul\":3287:3841   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3847:3946   */\ntag_66:\n    /* \"#utility.yul\":3899:3905   */\n  0x00\n    /* \"#utility.yul\":3933:3938   */\n  dup2\n    /* \"#utility.yul\":3927:3939   */\n  mload\n    /* \"#utility.yul\":3917:3939   */\n  swap1\n  pop\n    /* \"#utility.yul\":3847:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4132   */\ntag_67:\n    /* \"#utility.yul\":4000:4077   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3997:3998   */\n  0x00\n    /* \"#utility.yul\":3990:4078   */\n  mstore\n    /* \"#utility.yul\":4097:4101   */\n  0x22\n    /* \"#utility.yul\":4094:4095   */\n  0x04\n    /* \"#utility.yul\":4087:4102   */\n  mstore\n    /* \"#utility.yul\":4121:4125   */\n  0x24\n    /* \"#utility.yul\":4118:4119   */\n  0x00\n    /* \"#utility.yul\":4111:4126   */\n  revert\n    /* \"#utility.yul\":4138:4458   */\ntag_68:\n    /* \"#utility.yul\":4182:4188   */\n  0x00\n    /* \"#utility.yul\":4219:4220   */\n  0x02\n    /* \"#utility.yul\":4213:4217   */\n  dup3\n    /* \"#utility.yul\":4209:4221   */\n  div\n    /* \"#utility.yul\":4199:4221   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4267   */\n  0x01\n    /* \"#utility.yul\":4260:4264   */\n  dup3\n    /* \"#utility.yul\":4256:4268   */\n  and\n    /* \"#utility.yul\":4287:4305   */\n  dup1\n    /* \"#utility.yul\":4277:4358   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4343:4347   */\n  0x7f\n    /* \"#utility.yul\":4335:4341   */\n  dup3\n    /* \"#utility.yul\":4331:4348   */\n  and\n    /* \"#utility.yul\":4321:4348   */\n  swap2\n  pop\n    /* \"#utility.yul\":4277:4358   */\ntag_139:\n    /* \"#utility.yul\":4405:4407   */\n  0x20\n    /* \"#utility.yul\":4397:4403   */\n  dup3\n    /* \"#utility.yul\":4394:4408   */\n  lt\n    /* \"#utility.yul\":4374:4392   */\n  dup2\n    /* \"#utility.yul\":4371:4409   */\n  sub\n    /* \"#utility.yul\":4368:4452   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4424:4442   */\n  tag_141\n  tag_67\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4368:4452   */\ntag_140:\n    /* \"#utility.yul\":4189:4458   */\n  pop\n    /* \"#utility.yul\":4138:4458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4464:4605   */\ntag_69:\n    /* \"#utility.yul\":4513:4517   */\n  0x00\n    /* \"#utility.yul\":4536:4539   */\n  dup2\n    /* \"#utility.yul\":4528:4539   */\n  swap1\n  pop\n    /* \"#utility.yul\":4559:4562   */\n  dup2\n    /* \"#utility.yul\":4556:4557   */\n  0x00\n    /* \"#utility.yul\":4549:4563   */\n  mstore\n    /* \"#utility.yul\":4593:4597   */\n  0x20\n    /* \"#utility.yul\":4590:4591   */\n  0x00\n    /* \"#utility.yul\":4580:4598   */\n  keccak256\n    /* \"#utility.yul\":4572:4598   */\n  swap1\n  pop\n    /* \"#utility.yul\":4464:4605   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4611:4704   */\ntag_70:\n    /* \"#utility.yul\":4648:4654   */\n  0x00\n    /* \"#utility.yul\":4695:4697   */\n  0x20\n    /* \"#utility.yul\":4690:4692   */\n  0x1f\n    /* \"#utility.yul\":4683:4688   */\n  dup4\n    /* \"#utility.yul\":4679:4693   */\n  add\n    /* \"#utility.yul\":4675:4698   */\n  div\n    /* \"#utility.yul\":4665:4698   */\n  swap1\n  pop\n    /* \"#utility.yul\":4611:4704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4817   */\ntag_71:\n    /* \"#utility.yul\":4754:4762   */\n  0x00\n    /* \"#utility.yul\":4804:4809   */\n  dup3\n    /* \"#utility.yul\":4798:4802   */\n  dup3\n    /* \"#utility.yul\":4794:4810   */\n  shl\n    /* \"#utility.yul\":4773:4810   */\n  swap1\n  pop\n    /* \"#utility.yul\":4710:4817   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4823:5216   */\ntag_72:\n    /* \"#utility.yul\":4892:4898   */\n  0x00\n    /* \"#utility.yul\":4942:4943   */\n  0x08\n    /* \"#utility.yul\":4930:4940   */\n  dup4\n    /* \"#utility.yul\":4926:4944   */\n  mul\n    /* \"#utility.yul\":4965:5062   */\n  tag_146\n    /* \"#utility.yul\":4995:5061   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4984:4993   */\n  dup3\n    /* \"#utility.yul\":4965:5062   */\n  tag_71\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5083:5122   */\n  tag_147\n    /* \"#utility.yul\":5113:5121   */\n  dup7\n    /* \"#utility.yul\":5102:5111   */\n  dup4\n    /* \"#utility.yul\":5083:5122   */\n  tag_71\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5071:5122   */\n  swap6\n  pop\n    /* \"#utility.yul\":5155:5159   */\n  dup1\n    /* \"#utility.yul\":5151:5160   */\n  not\n    /* \"#utility.yul\":5144:5149   */\n  dup5\n    /* \"#utility.yul\":5140:5161   */\n  and\n    /* \"#utility.yul\":5131:5161   */\n  swap4\n  pop\n    /* \"#utility.yul\":5204:5208   */\n  dup1\n    /* \"#utility.yul\":5194:5202   */\n  dup7\n    /* \"#utility.yul\":5190:5209   */\n  and\n    /* \"#utility.yul\":5183:5188   */\n  dup5\n    /* \"#utility.yul\":5180:5210   */\n  or\n    /* \"#utility.yul\":5170:5210   */\n  swap3\n  pop\n    /* \"#utility.yul\":4899:5216   */\n  pop\n  pop\n    /* \"#utility.yul\":4823:5216   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5222:5299   */\ntag_73:\n    /* \"#utility.yul\":5259:5266   */\n  0x00\n    /* \"#utility.yul\":5288:5293   */\n  dup2\n    /* \"#utility.yul\":5277:5293   */\n  swap1\n  pop\n    /* \"#utility.yul\":5222:5299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5305:5365   */\ntag_74:\n    /* \"#utility.yul\":5333:5336   */\n  0x00\n    /* \"#utility.yul\":5354:5359   */\n  dup2\n    /* \"#utility.yul\":5347:5359   */\n  swap1\n  pop\n    /* \"#utility.yul\":5305:5365   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5371:5513   */\ntag_75:\n    /* \"#utility.yul\":5421:5430   */\n  0x00\n    /* \"#utility.yul\":5454:5507   */\n  tag_151\n    /* \"#utility.yul\":5472:5506   */\n  tag_152\n    /* \"#utility.yul\":5481:5505   */\n  tag_153\n    /* \"#utility.yul\":5499:5504   */\n  dup5\n    /* \"#utility.yul\":5481:5505   */\n  tag_73\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5472:5506   */\n  tag_74\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5454:5507   */\n  tag_73\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5441:5507   */\n  swap1\n  pop\n    /* \"#utility.yul\":5371:5513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5519:5594   */\ntag_76:\n    /* \"#utility.yul\":5562:5565   */\n  0x00\n    /* \"#utility.yul\":5583:5588   */\n  dup2\n    /* \"#utility.yul\":5576:5588   */\n  swap1\n  pop\n    /* \"#utility.yul\":5519:5594   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5600:5869   */\ntag_77:\n    /* \"#utility.yul\":5710:5749   */\n  tag_156\n    /* \"#utility.yul\":5741:5748   */\n  dup4\n    /* \"#utility.yul\":5710:5749   */\n  tag_75\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5771:5862   */\n  tag_157\n    /* \"#utility.yul\":5820:5861   */\n  tag_158\n    /* \"#utility.yul\":5844:5860   */\n  dup3\n    /* \"#utility.yul\":5820:5861   */\n  tag_76\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5812:5818   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5799:5810   */\n  sload\n    /* \"#utility.yul\":5771:5862   */\n  tag_72\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5765:5769   */\n  dup3\n    /* \"#utility.yul\":5758:5863   */\n  sstore\n    /* \"#utility.yul\":5676:5869   */\n  pop\n    /* \"#utility.yul\":5600:5869   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:5948   */\ntag_78:\n    /* \"#utility.yul\":5920:5923   */\n  0x00\n    /* \"#utility.yul\":5875:5948   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5954:6143   */\ntag_79:\n    /* \"#utility.yul\":6031:6063   */\n  tag_161\n  tag_78\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6072:6137   */\n  tag_162\n    /* \"#utility.yul\":6130:6136   */\n  dup2\n    /* \"#utility.yul\":6122:6128   */\n  dup5\n    /* \"#utility.yul\":6116:6120   */\n  dup5\n    /* \"#utility.yul\":6072:6137   */\n  tag_77\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6007:6143   */\n  pop\n    /* \"#utility.yul\":5954:6143   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6149:6335   */\ntag_80:\n    /* \"#utility.yul\":6209:6329   */\ntag_164:\n    /* \"#utility.yul\":6226:6229   */\n  dup2\n    /* \"#utility.yul\":6219:6224   */\n  dup2\n    /* \"#utility.yul\":6216:6230   */\n  lt\n    /* \"#utility.yul\":6209:6329   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6280:6319   */\n  tag_167\n    /* \"#utility.yul\":6317:6318   */\n  0x00\n    /* \"#utility.yul\":6310:6315   */\n  dup3\n    /* \"#utility.yul\":6280:6319   */\n  tag_79\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6253:6254   */\n  0x01\n    /* \"#utility.yul\":6246:6251   */\n  dup2\n    /* \"#utility.yul\":6242:6255   */\n  add\n    /* \"#utility.yul\":6233:6255   */\n  swap1\n  pop\n    /* \"#utility.yul\":6209:6329   */\n  jump(tag_164)\ntag_166:\n    /* \"#utility.yul\":6149:6335   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6341:6884   */\ntag_81:\n    /* \"#utility.yul\":6442:6444   */\n  0x1f\n    /* \"#utility.yul\":6437:6440   */\n  dup3\n    /* \"#utility.yul\":6434:6445   */\n  gt\n    /* \"#utility.yul\":6431:6877   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":6476:6514   */\n  tag_170\n    /* \"#utility.yul\":6508:6513   */\n  dup2\n    /* \"#utility.yul\":6476:6514   */\n  tag_69\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6560:6589   */\n  tag_171\n    /* \"#utility.yul\":6578:6588   */\n  dup5\n    /* \"#utility.yul\":6560:6589   */\n  tag_70\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6550:6558   */\n  dup2\n    /* \"#utility.yul\":6546:6590   */\n  add\n    /* \"#utility.yul\":6743:6745   */\n  0x20\n    /* \"#utility.yul\":6731:6741   */\n  dup6\n    /* \"#utility.yul\":6728:6746   */\n  lt\n    /* \"#utility.yul\":6725:6774   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6764:6772   */\n  dup2\n    /* \"#utility.yul\":6749:6772   */\n  swap1\n  pop\n    /* \"#utility.yul\":6725:6774   */\ntag_172:\n    /* \"#utility.yul\":6787:6867   */\n  tag_173\n    /* \"#utility.yul\":6843:6865   */\n  tag_174\n    /* \"#utility.yul\":6861:6864   */\n  dup6\n    /* \"#utility.yul\":6843:6865   */\n  tag_70\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6833:6841   */\n  dup4\n    /* \"#utility.yul\":6829:6866   */\n  add\n    /* \"#utility.yul\":6816:6827   */\n  dup3\n    /* \"#utility.yul\":6787:6867   */\n  tag_80\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6446:6877   */\n  pop\n  pop\n    /* \"#utility.yul\":6431:6877   */\ntag_169:\n    /* \"#utility.yul\":6341:6884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6890:7007   */\ntag_82:\n    /* \"#utility.yul\":6944:6952   */\n  0x00\n    /* \"#utility.yul\":6994:6999   */\n  dup3\n    /* \"#utility.yul\":6988:6992   */\n  dup3\n    /* \"#utility.yul\":6984:7000   */\n  shr\n    /* \"#utility.yul\":6963:7000   */\n  swap1\n  pop\n    /* \"#utility.yul\":6890:7007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7013:7182   */\ntag_83:\n    /* \"#utility.yul\":7057:7063   */\n  0x00\n    /* \"#utility.yul\":7090:7141   */\n  tag_177\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7134:7140   */\n  not\n    /* \"#utility.yul\":7126:7131   */\n  dup5\n    /* \"#utility.yul\":7123:7124   */\n  0x08\n    /* \"#utility.yul\":7119:7132   */\n  mul\n    /* \"#utility.yul\":7090:7141   */\n  tag_82\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7086:7142   */\n  not\n    /* \"#utility.yul\":7171:7175   */\n  dup1\n    /* \"#utility.yul\":7165:7169   */\n  dup4\n    /* \"#utility.yul\":7161:7176   */\n  and\n    /* \"#utility.yul\":7151:7176   */\n  swap2\n  pop\n    /* \"#utility.yul\":7064:7182   */\n  pop\n    /* \"#utility.yul\":7013:7182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7187:7482   */\ntag_84:\n    /* \"#utility.yul\":7263:7267   */\n  0x00\n    /* \"#utility.yul\":7409:7438   */\n  tag_179\n    /* \"#utility.yul\":7434:7437   */\n  dup4\n    /* \"#utility.yul\":7428:7432   */\n  dup4\n    /* \"#utility.yul\":7409:7438   */\n  tag_83\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7401:7438   */\n  swap2\n  pop\n    /* \"#utility.yul\":7471:7474   */\n  dup3\n    /* \"#utility.yul\":7468:7469   */\n  0x02\n    /* \"#utility.yul\":7464:7475   */\n  mul\n    /* \"#utility.yul\":7458:7462   */\n  dup3\n    /* \"#utility.yul\":7455:7476   */\n  or\n    /* \"#utility.yul\":7447:7476   */\n  swap1\n  pop\n    /* \"#utility.yul\":7187:7482   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7487:8882   */\ntag_9:\n    /* \"#utility.yul\":7604:7641   */\n  tag_181\n    /* \"#utility.yul\":7637:7640   */\n  dup3\n    /* \"#utility.yul\":7604:7641   */\n  tag_66\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7706:7724   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7698:7704   */\n  dup2\n    /* \"#utility.yul\":7695:7725   */\n  gt\n    /* \"#utility.yul\":7692:7748   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":7728:7746   */\n  tag_183\n  tag_55\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7692:7748   */\ntag_182:\n    /* \"#utility.yul\":7772:7810   */\n  tag_184\n    /* \"#utility.yul\":7804:7808   */\n  dup3\n    /* \"#utility.yul\":7798:7809   */\n  sload\n    /* \"#utility.yul\":7772:7810   */\n  tag_68\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7857:7924   */\n  tag_185\n    /* \"#utility.yul\":7917:7923   */\n  dup3\n    /* \"#utility.yul\":7909:7915   */\n  dup3\n    /* \"#utility.yul\":7903:7907   */\n  dup6\n    /* \"#utility.yul\":7857:7924   */\n  tag_81\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7951:7952   */\n  0x00\n    /* \"#utility.yul\":7975:7979   */\n  0x20\n    /* \"#utility.yul\":7962:7979   */\n  swap1\n  pop\n    /* \"#utility.yul\":8007:8009   */\n  0x1f\n    /* \"#utility.yul\":7999:8005   */\n  dup4\n    /* \"#utility.yul\":7996:8010   */\n  gt\n    /* \"#utility.yul\":8024:8025   */\n  0x01\n    /* \"#utility.yul\":8019:8637   */\n  dup2\n  eq\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8681:8682   */\n  0x00\n    /* \"#utility.yul\":8698:8704   */\n  dup5\n    /* \"#utility.yul\":8695:8772   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8747:8756   */\n  dup3\n    /* \"#utility.yul\":8742:8745   */\n  dup8\n    /* \"#utility.yul\":8738:8757   */\n  add\n    /* \"#utility.yul\":8732:8758   */\n  mload\n    /* \"#utility.yul\":8723:8758   */\n  swap1\n  pop\n    /* \"#utility.yul\":8695:8772   */\ntag_188:\n    /* \"#utility.yul\":8798:8865   */\n  tag_189\n    /* \"#utility.yul\":8858:8864   */\n  dup6\n    /* \"#utility.yul\":8851:8856   */\n  dup3\n    /* \"#utility.yul\":8798:8865   */\n  tag_84\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8792:8796   */\n  dup7\n    /* \"#utility.yul\":8785:8866   */\n  sstore\n    /* \"#utility.yul\":8654:8876   */\n  pop\n    /* \"#utility.yul\":7989:8876   */\n  jump(tag_186)\n    /* \"#utility.yul\":8019:8637   */\ntag_187:\n    /* \"#utility.yul\":8071:8075   */\n  0x1f\n    /* \"#utility.yul\":8067:8076   */\n  not\n    /* \"#utility.yul\":8059:8065   */\n  dup5\n    /* \"#utility.yul\":8055:8077   */\n  and\n    /* \"#utility.yul\":8105:8142   */\n  tag_190\n    /* \"#utility.yul\":8137:8141   */\n  dup7\n    /* \"#utility.yul\":8105:8142   */\n  tag_69\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8164:8165   */\n  0x00\n    /* \"#utility.yul\":8178:8386   */\ntag_191:\n    /* \"#utility.yul\":8192:8199   */\n  dup3\n    /* \"#utility.yul\":8189:8190   */\n  dup2\n    /* \"#utility.yul\":8186:8200   */\n  lt\n    /* \"#utility.yul\":8178:8386   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":8271:8280   */\n  dup5\n    /* \"#utility.yul\":8266:8269   */\n  dup10\n    /* \"#utility.yul\":8262:8281   */\n  add\n    /* \"#utility.yul\":8256:8282   */\n  mload\n    /* \"#utility.yul\":8248:8254   */\n  dup3\n    /* \"#utility.yul\":8241:8283   */\n  sstore\n    /* \"#utility.yul\":8322:8323   */\n  0x01\n    /* \"#utility.yul\":8314:8320   */\n  dup3\n    /* \"#utility.yul\":8310:8324   */\n  add\n    /* \"#utility.yul\":8300:8324   */\n  swap2\n  pop\n    /* \"#utility.yul\":8369:8371   */\n  0x20\n    /* \"#utility.yul\":8358:8367   */\n  dup6\n    /* \"#utility.yul\":8354:8372   */\n  add\n    /* \"#utility.yul\":8341:8372   */\n  swap5\n  pop\n    /* \"#utility.yul\":8215:8219   */\n  0x20\n    /* \"#utility.yul\":8212:8213   */\n  dup2\n    /* \"#utility.yul\":8208:8220   */\n  add\n    /* \"#utility.yul\":8203:8220   */\n  swap1\n  pop\n    /* \"#utility.yul\":8178:8386   */\n  jump(tag_191)\ntag_193:\n    /* \"#utility.yul\":8414:8420   */\n  dup7\n    /* \"#utility.yul\":8405:8412   */\n  dup4\n    /* \"#utility.yul\":8402:8421   */\n  lt\n    /* \"#utility.yul\":8399:8578   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":8472:8481   */\n  dup5\n    /* \"#utility.yul\":8467:8470   */\n  dup10\n    /* \"#utility.yul\":8463:8482   */\n  add\n    /* \"#utility.yul\":8457:8483   */\n  mload\n    /* \"#utility.yul\":8515:8563   */\n  tag_195\n    /* \"#utility.yul\":8557:8561   */\n  0x1f\n    /* \"#utility.yul\":8549:8555   */\n  dup10\n    /* \"#utility.yul\":8545:8562   */\n  and\n    /* \"#utility.yul\":8534:8543   */\n  dup3\n    /* \"#utility.yul\":8515:8563   */\n  tag_83\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8507:8513   */\n  dup4\n    /* \"#utility.yul\":8500:8564   */\n  sstore\n    /* \"#utility.yul\":8422:8578   */\n  pop\n    /* \"#utility.yul\":8399:8578   */\ntag_194:\n    /* \"#utility.yul\":8624:8625   */\n  0x01\n    /* \"#utility.yul\":8620:8621   */\n  0x02\n    /* \"#utility.yul\":8612:8618   */\n  dup9\n    /* \"#utility.yul\":8608:8622   */\n  mul\n    /* \"#utility.yul\":8604:8626   */\n  add\n    /* \"#utility.yul\":8598:8602   */\n  dup9\n    /* \"#utility.yul\":8591:8627   */\n  sstore\n    /* \"#utility.yul\":8026:8637   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7989:8876   */\ntag_186:\n  pop\n    /* \"#utility.yul\":7579:8882   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7487:8882   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8888:9006   */\ntag_85:\n    /* \"#utility.yul\":8975:8999   */\n  tag_197\n    /* \"#utility.yul\":8993:8998   */\n  dup2\n    /* \"#utility.yul\":8975:8999   */\n  tag_61\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8970:8973   */\n  dup3\n    /* \"#utility.yul\":8963:9000   */\n  mstore\n    /* \"#utility.yul\":8888:9006   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9012:9234   */\ntag_14:\n    /* \"#utility.yul\":9105:9109   */\n  0x00\n    /* \"#utility.yul\":9143:9145   */\n  0x20\n    /* \"#utility.yul\":9132:9141   */\n  dup3\n    /* \"#utility.yul\":9128:9146   */\n  add\n    /* \"#utility.yul\":9120:9146   */\n  swap1\n  pop\n    /* \"#utility.yul\":9156:9227   */\n  tag_199\n    /* \"#utility.yul\":9224:9225   */\n  0x00\n    /* \"#utility.yul\":9213:9222   */\n  dup4\n    /* \"#utility.yul\":9209:9226   */\n  add\n    /* \"#utility.yul\":9200:9206   */\n  dup5\n    /* \"#utility.yul\":9156:9227   */\n  tag_85\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9012:9234   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9240:9409   */\ntag_86:\n    /* \"#utility.yul\":9324:9335   */\n  0x00\n    /* \"#utility.yul\":9358:9364   */\n  dup3\n    /* \"#utility.yul\":9353:9356   */\n  dup3\n    /* \"#utility.yul\":9346:9365   */\n  mstore\n    /* \"#utility.yul\":9398:9402   */\n  0x20\n    /* \"#utility.yul\":9393:9396   */\n  dup3\n    /* \"#utility.yul\":9389:9403   */\n  add\n    /* \"#utility.yul\":9374:9403   */\n  swap1\n  pop\n    /* \"#utility.yul\":9240:9409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9415:9643   */\ntag_87:\n    /* \"#utility.yul\":9555:9589   */\n  0x4174206c65617374206f6e652077686974656c69737465642061646472657373\n    /* \"#utility.yul\":9551:9552   */\n  0x00\n    /* \"#utility.yul\":9543:9549   */\n  dup3\n    /* \"#utility.yul\":9539:9553   */\n  add\n    /* \"#utility.yul\":9532:9590   */\n  mstore\n    /* \"#utility.yul\":9624:9635   */\n  0x2072657175697265640000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9619:9621   */\n  0x20\n    /* \"#utility.yul\":9611:9617   */\n  dup3\n    /* \"#utility.yul\":9607:9622   */\n  add\n    /* \"#utility.yul\":9600:9636   */\n  mstore\n    /* \"#utility.yul\":9415:9643   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9649:10015   */\ntag_88:\n    /* \"#utility.yul\":9791:9794   */\n  0x00\n    /* \"#utility.yul\":9812:9879   */\n  tag_203\n    /* \"#utility.yul\":9876:9878   */\n  0x29\n    /* \"#utility.yul\":9871:9874   */\n  dup4\n    /* \"#utility.yul\":9812:9879   */\n  tag_86\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9805:9879   */\n  swap2\n  pop\n    /* \"#utility.yul\":9888:9981   */\n  tag_204\n    /* \"#utility.yul\":9977:9980   */\n  dup3\n    /* \"#utility.yul\":9888:9981   */\n  tag_87\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10006:10008   */\n  0x40\n    /* \"#utility.yul\":10001:10004   */\n  dup3\n    /* \"#utility.yul\":9997:10009   */\n  add\n    /* \"#utility.yul\":9990:10009   */\n  swap1\n  pop\n    /* \"#utility.yul\":9649:10015   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10021:10440   */\ntag_20:\n    /* \"#utility.yul\":10187:10191   */\n  0x00\n    /* \"#utility.yul\":10225:10227   */\n  0x20\n    /* \"#utility.yul\":10214:10223   */\n  dup3\n    /* \"#utility.yul\":10210:10228   */\n  add\n    /* \"#utility.yul\":10202:10228   */\n  swap1\n  pop\n    /* \"#utility.yul\":10274:10283   */\n  dup2\n    /* \"#utility.yul\":10268:10272   */\n  dup2\n    /* \"#utility.yul\":10264:10284   */\n  sub\n    /* \"#utility.yul\":10260:10261   */\n  0x00\n    /* \"#utility.yul\":10249:10258   */\n  dup4\n    /* \"#utility.yul\":10245:10262   */\n  add\n    /* \"#utility.yul\":10238:10285   */\n  mstore\n    /* \"#utility.yul\":10302:10433   */\n  tag_206\n    /* \"#utility.yul\":10428:10432   */\n  dup2\n    /* \"#utility.yul\":10302:10433   */\n  tag_88\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10294:10433   */\n  swap1\n  pop\n    /* \"#utility.yul\":10021:10440   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10446:10626   */\ntag_26:\n    /* \"#utility.yul\":10494:10571   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10491:10492   */\n  0x00\n    /* \"#utility.yul\":10484:10572   */\n  mstore\n    /* \"#utility.yul\":10591:10595   */\n  0x32\n    /* \"#utility.yul\":10588:10589   */\n  0x04\n    /* \"#utility.yul\":10581:10596   */\n  mstore\n    /* \"#utility.yul\":10615:10619   */\n  0x24\n    /* \"#utility.yul\":10612:10613   */\n  0x00\n    /* \"#utility.yul\":10605:10620   */\n  revert\n    /* \"#utility.yul\":10632:10812   */\ntag_89:\n    /* \"#utility.yul\":10680:10757   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10677:10678   */\n  0x00\n    /* \"#utility.yul\":10670:10758   */\n  mstore\n    /* \"#utility.yul\":10777:10781   */\n  0x11\n    /* \"#utility.yul\":10774:10775   */\n  0x04\n    /* \"#utility.yul\":10767:10782   */\n  mstore\n    /* \"#utility.yul\":10801:10805   */\n  0x24\n    /* \"#utility.yul\":10798:10799   */\n  0x00\n    /* \"#utility.yul\":10791:10806   */\n  revert\n    /* \"#utility.yul\":10818:11051   */\ntag_28:\n    /* \"#utility.yul\":10857:10860   */\n  0x00\n    /* \"#utility.yul\":10880:10904   */\n  tag_210\n    /* \"#utility.yul\":10898:10903   */\n  dup3\n    /* \"#utility.yul\":10880:10904   */\n  tag_73\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10871:10904   */\n  swap2\n  pop\n    /* \"#utility.yul\":10926:10992   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":10919:10924   */\n  dup3\n    /* \"#utility.yul\":10916:10993   */\n  sub\n    /* \"#utility.yul\":10913:11016   */\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10996:11014   */\n  tag_212\n  tag_89\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10913:11016   */\ntag_211:\n    /* \"#utility.yul\":11043:11044   */\n  0x01\n    /* \"#utility.yul\":11036:11041   */\n  dup3\n    /* \"#utility.yul\":11032:11045   */\n  add\n    /* \"#utility.yul\":11025:11045   */\n  swap1\n  pop\n    /* \"#utility.yul\":10818:11051   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11057:11248   */\ntag_41:\n    /* \"#utility.yul\":11097:11100   */\n  0x00\n    /* \"#utility.yul\":11116:11136   */\n  tag_214\n    /* \"#utility.yul\":11134:11135   */\n  dup3\n    /* \"#utility.yul\":11116:11136   */\n  tag_73\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":11111:11136   */\n  swap2\n  pop\n    /* \"#utility.yul\":11150:11170   */\n  tag_215\n    /* \"#utility.yul\":11168:11169   */\n  dup4\n    /* \"#utility.yul\":11150:11170   */\n  tag_73\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11145:11170   */\n  swap3\n  pop\n    /* \"#utility.yul\":11193:11194   */\n  dup3\n    /* \"#utility.yul\":11190:11191   */\n  dup3\n    /* \"#utility.yul\":11186:11195   */\n  add\n    /* \"#utility.yul\":11179:11195   */\n  swap1\n  pop\n    /* \"#utility.yul\":11214:11217   */\n  dup1\n    /* \"#utility.yul\":11211:11212   */\n  dup3\n    /* \"#utility.yul\":11208:11218   */\n  gt\n    /* \"#utility.yul\":11205:11241   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":11221:11239   */\n  tag_217\n  tag_89\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11205:11241   */\ntag_216:\n    /* \"#utility.yul\":11057:11248   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11254:11372   */\ntag_90:\n    /* \"#utility.yul\":11341:11365   */\n  tag_219\n    /* \"#utility.yul\":11359:11364   */\n  dup2\n    /* \"#utility.yul\":11341:11365   */\n  tag_73\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11336:11339   */\n  dup3\n    /* \"#utility.yul\":11329:11366   */\n  mstore\n    /* \"#utility.yul\":11254:11372   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11378:11820   */\ntag_45:\n    /* \"#utility.yul\":11527:11531   */\n  0x00\n    /* \"#utility.yul\":11565:11567   */\n  0x60\n    /* \"#utility.yul\":11554:11563   */\n  dup3\n    /* \"#utility.yul\":11550:11568   */\n  add\n    /* \"#utility.yul\":11542:11568   */\n  swap1\n  pop\n    /* \"#utility.yul\":11578:11649   */\n  tag_221\n    /* \"#utility.yul\":11646:11647   */\n  0x00\n    /* \"#utility.yul\":11635:11644   */\n  dup4\n    /* \"#utility.yul\":11631:11648   */\n  add\n    /* \"#utility.yul\":11622:11628   */\n  dup7\n    /* \"#utility.yul\":11578:11649   */\n  tag_85\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11659:11731   */\n  tag_222\n    /* \"#utility.yul\":11727:11729   */\n  0x20\n    /* \"#utility.yul\":11716:11725   */\n  dup4\n    /* \"#utility.yul\":11712:11730   */\n  add\n    /* \"#utility.yul\":11703:11709   */\n  dup6\n    /* \"#utility.yul\":11659:11731   */\n  tag_90\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11741:11813   */\n  tag_223\n    /* \"#utility.yul\":11809:11811   */\n  0x40\n    /* \"#utility.yul\":11798:11807   */\n  dup4\n    /* \"#utility.yul\":11794:11812   */\n  add\n    /* \"#utility.yul\":11785:11791   */\n  dup5\n    /* \"#utility.yul\":11741:11813   */\n  tag_90\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11378:11820   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11826:12048   */\ntag_49:\n    /* \"#utility.yul\":11919:11923   */\n  0x00\n    /* \"#utility.yul\":11957:11959   */\n  0x20\n    /* \"#utility.yul\":11946:11955   */\n  dup3\n    /* \"#utility.yul\":11942:11960   */\n  add\n    /* \"#utility.yul\":11934:11960   */\n  swap1\n  pop\n    /* \"#utility.yul\":11970:12041   */\n  tag_225\n    /* \"#utility.yul\":12038:12039   */\n  0x00\n    /* \"#utility.yul\":12027:12036   */\n  dup4\n    /* \"#utility.yul\":12023:12040   */\n  add\n    /* \"#utility.yul\":12014:12020   */\n  dup5\n    /* \"#utility.yul\":11970:12041   */\n  tag_90\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11826:12048   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/CCKToken.sol\":309:3939  contract CCKToken is ERC20, Ownable, IERC3643 {... */\ntag_31:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/CCKToken.sol\":309:3939  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ab1d681\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcb4b73ab\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe08ba51a\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe08ba51a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xcb4b73ab\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd0516650\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xda0239a6\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x95d89b41\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xaba63705\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x8ab1d681\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x2d380242\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x5c975abb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6290865d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2d380242\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x134e18f4\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x134e18f4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x158b1a57\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12cae7af\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":3793:3936  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_5:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2020:2159  function identityRegistry() external view override returns (address) {... */\n    tag_6:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2559:2710  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_7:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":3116:3429  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_9:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":562:589  uint256 public mintedAmount */\n    tag_10:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":3479:3743  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":1913:2012  function version() external view override returns (string memory) {... */\n    tag_13:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2305:2393  function paused() external view override returns (bool) {... */\n    tag_14:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2167:2297  function compliance() external view override returns (address) {... */\n    tag_15:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":1211:1319  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_18:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":362:417  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_20:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":440:481  mapping(address => bool) public whitelist */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2790:3075  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_23:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1804:1905  function onchainID() external view override returns (address) {... */\n    tag_24:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1468:1562  function unfreezeUser(address user) external onlyOwner {... */\n    tag_25:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":501:539  mapping(address => bool) public frozen */\n    tag_26:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1615:1761  function remainingSupply() external view returns (uint256) {... */\n    tag_27:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1348:1439  function freezeUser(address user) external onlyOwner {... */\n    tag_29:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":1071:1173  function addToWhitelist(address member) external onlyOwner {... */\n    tag_30:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":2401:2551  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_31:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_150\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":3793:3936  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_53:\n        /* \"contracts/CCK/CCKToken.sol\":3853:3860  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3880:3895  balanceOf(user) */\n      tag_161\n        /* \"contracts/CCK/CCKToken.sol\":3890:3894  user */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3880:3889  balanceOf */\n      tag_93\n        /* \"contracts/CCK/CCKToken.sol\":3880:3895  balanceOf(user) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/CCK/CCKToken.sol\":3873:3895  return balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":3793:3936  function balanceOfUser(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2020:2159  function identityRegistry() external view override returns (address) {... */\n    tag_57:\n        /* \"contracts/CCK/CCKToken.sol\":2080:2087  address */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2020:2159  function identityRegistry() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2559:2710  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_62:\n        /* \"contracts/CCK/CCKToken.sol\":2637:2644  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2559:2710  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":3116:3429  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_70:\n        /* \"contracts/CCK/CCKToken.sol\":3214:3218  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3240:3246  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":3240:3254  frozen[sender] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3247:3253  sender */\n      dup6\n        /* \"contracts/CCK/CCKToken.sol\":3240:3254  frozen[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3239:3254  !frozen[sender] */\n      iszero\n        /* \"contracts/CCK/CCKToken.sol\":3231:3275  require(!frozen[sender], \"Sender is frozen\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/CCK/CCKToken.sol\":3320:3326  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":3304:3328  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3294:3300  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3294:3328  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CCKToken.sol\":3286:3358  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/CCK/CCKToken.sol\":3376:3421  super.transferFrom(sender, recipient, amount) */\n      tag_172\n        /* \"contracts/CCK/CCKToken.sol\":3395:3401  sender */\n      dup5\n        /* \"contracts/CCK/CCKToken.sol\":3403:3412  recipient */\n      dup5\n        /* \"contracts/CCK/CCKToken.sol\":3414:3420  amount */\n      dup5\n        /* \"contracts/CCK/CCKToken.sol\":3376:3394  super.transferFrom */\n      tag_173\n        /* \"contracts/CCK/CCKToken.sol\":3376:3421  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/CCK/CCKToken.sol\":3369:3421  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":3116:3429  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":562:589  uint256 public mintedAmount */\n    tag_73:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":3479:3743  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/CCK/CCKToken.sol\":3559:3568  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken.sol\":3559:3572  whitelist[to] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3569:3571  to */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":3559:3572  whitelist[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3551:3592  require(whitelist[to], \"Not whitelisted\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/CCK/CCKToken.sol\":401:417  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken.sol\":3626:3632  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":3611:3623  mintedAmount */\n      sload(0x08)\n        /* \"contracts/CCK/CCKToken.sol\":3611:3632  mintedAmount + amount */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/CCK/CCKToken.sol\":3611:3648  mintedAmount + amount <= TOTAL_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CCK/CCKToken.sol\":3603:3674  require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/CCK/CCKToken.sol\":3685:3702  _mint(to, amount) */\n      tag_187\n        /* \"contracts/CCK/CCKToken.sol\":3691:3693  to */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3695:3701  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3685:3690  _mint */\n      tag_188\n        /* \"contracts/CCK/CCKToken.sol\":3685:3702  _mint(to, amount) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/CCK/CCKToken.sol\":3729:3735  amount */\n      dup1\n        /* \"contracts/CCK/CCKToken.sol\":3713:3725  mintedAmount */\n      0x08\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3713:3735  mintedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_189:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":3479:3743  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1913:2012  function version() external view override returns (string memory) {... */\n    tag_83:\n        /* \"contracts/CCK/CCKToken.sol\":1964:1977  string memory */\n      0x60\n        /* \"contracts/CCK/CCKToken.sol\":1990:2004  return \"1.0.0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x312e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1913:2012  function version() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2305:2393  function paused() external view override returns (bool) {... */\n    tag_86:\n        /* \"contracts/CCK/CCKToken.sol\":2355:2359  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2305:2393  function paused() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2167:2297  function compliance() external view override returns (address) {... */\n    tag_89:\n        /* \"contracts/CCK/CCKToken.sol\":2221:2228  address */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2167:2297  function compliance() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1211:1319  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/CCK/CCKToken.sol\":1306:1311  false */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1286:1295  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken.sol\":1286:1303  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1296:1302  member */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1286:1303  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1286:1311  whitelist[member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1211:1319  function removeFromWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":362:417  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_104:\n        /* \"contracts/CCK/CCKToken.sol\":401:417  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken.sol\":362:417  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_204\n      swap1\n      tag_150\n      jump\t// in\n    tag_204:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_205\n      swap1\n      tag_150\n      jump\t// in\n    tag_205:\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n    tag_207:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_208:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_208\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":440:481  mapping(address => bool) public whitelist */\n    tag_111:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2790:3075  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_115:\n        /* \"contracts/CCK/CCKToken.sol\":2868:2872  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2894:2900  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":2894:2912  frozen[msg.sender] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2901:2911  msg.sender */\n      caller\n        /* \"contracts/CCK/CCKToken.sol\":2894:2912  frozen[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":2893:2912  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/CCK/CCKToken.sol\":2885:2933  require(!frozen[msg.sender], \"Sender is frozen\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_168\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/CCK/CCKToken.sol\":2978:2984  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":2962:2986  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":2952:2958  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":2952:2986  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CCKToken.sol\":2944:3016  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_171\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/CCK/CCKToken.sol\":3034:3067  super.transfer(recipient, amount) */\n      tag_214\n        /* \"contracts/CCK/CCKToken.sol\":3049:3058  recipient */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":3060:3066  amount */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":3034:3048  super.transfer */\n      tag_215\n        /* \"contracts/CCK/CCKToken.sol\":3034:3067  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/CCK/CCKToken.sol\":3027:3067  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2790:3075  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1804:1905  function onchainID() external view override returns (address) {... */\n    tag_118:\n        /* \"contracts/CCK/CCKToken.sol\":1857:1864  address */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1892:1896  this */\n      address\n        /* \"contracts/CCK/CCKToken.sol\":1877:1897  return address(this) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1804:1905  function onchainID() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1468:1562  function unfreezeUser(address user) external onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/CCK/CCKToken.sol\":1549:1554  false */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1534:1540  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":1534:1546  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1541:1545  user */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1534:1546  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1534:1554  frozen[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1468:1562  function unfreezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":501:539  mapping(address => bool) public frozen */\n    tag_125:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1615:1761  function remainingSupply() external view returns (uint256) {... */\n    tag_128:\n        /* \"contracts/CCK/CCKToken.sol\":1665:1672  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1707:1719  mintedAmount */\n      sload(0x08)\n        /* \"contracts/CCK/CCKToken.sol\":401:417  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken.sol\":1692:1719  TOTAL_SUPPLY - mintedAmount */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contracts/CCK/CCKToken.sol\":1685:1719  return TOTAL_SUPPLY - mintedAmount */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1615:1761  function remainingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1348:1439  function freezeUser(address user) external onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/CCK/CCKToken.sol\":1427:1431  true */\n      0x01\n        /* \"contracts/CCK/CCKToken.sol\":1412:1418  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":1412:1424  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1419:1423  user */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1412:1424  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1412:1431  frozen[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1348:1439  function freezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1071:1173  function addToWhitelist(address member) external onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/CCK/CCKToken.sol\":1161:1165  true */\n      0x01\n        /* \"contracts/CCK/CCKToken.sol\":1141:1150  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken.sol\":1141:1158  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1151:1157  member */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1141:1158  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1141:1165  whitelist[member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1071:1173  function addToWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2401:2551  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_143:\n        /* \"contracts/CCK/CCKToken.sol\":2472:2476  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2496:2502  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":2496:2515  frozen[userAddress] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2503:2514  userAddress */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":2496:2515  frozen[userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":2489:2515  return frozen[userAddress] */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2401:2551  function isFrozen(address userAddress) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_248\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_284:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_285)\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_289)\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_290\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_291:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_292:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_293:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_326:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_326)\n    tag_328:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_294:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_295:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_331\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_291\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":818:889   */\n      tag_332\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_292\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_333\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_293\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":988:1017   */\n      tag_334\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_294\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_43:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_336\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_295\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_297:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_299:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_300:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_342\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_299\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_301:\n        /* \"#utility.yul\":1983:2007   */\n      tag_344\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_300\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_345:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_302:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_347\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_301\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_303:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_304:\n        /* \"#utility.yul\":2339:2363   */\n      tag_350\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_303\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_351:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_305:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_353\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_304\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_46:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_356\n      tag_297\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2632:2751   */\n    tag_355:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_357\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_302\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_358\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_305\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_306:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_307:\n        /* \"#utility.yul\":3196:3217   */\n      tag_361\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_306\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_49:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_363\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_307\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3775   */\n    tag_52:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      sub\n        /* \"#utility.yul\":3525:3557   */\n      slt\n        /* \"#utility.yul\":3522:3641   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":3560:3639   */\n      tag_366\n      tag_297\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3522:3641   */\n    tag_365:\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3705:3758   */\n      tag_367\n        /* \"#utility.yul\":3750:3757   */\n      dup5\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3730:3739   */\n      dup6\n        /* \"#utility.yul\":3726:3748   */\n      add\n        /* \"#utility.yul\":3705:3758   */\n      tag_302\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3695:3758   */\n      swap2\n      pop\n        /* \"#utility.yul\":3651:3768   */\n      pop\n        /* \"#utility.yul\":3446:3775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:3899   */\n    tag_308:\n        /* \"#utility.yul\":3868:3892   */\n      tag_369\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3868:3892   */\n      tag_303\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3863:3866   */\n      dup3\n        /* \"#utility.yul\":3856:3893   */\n      mstore\n        /* \"#utility.yul\":3781:3899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4127   */\n    tag_55:\n        /* \"#utility.yul\":3998:4002   */\n      0x00\n        /* \"#utility.yul\":4036:4038   */\n      0x20\n        /* \"#utility.yul\":4025:4034   */\n      dup3\n        /* \"#utility.yul\":4021:4039   */\n      add\n        /* \"#utility.yul\":4013:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":4049:4120   */\n      tag_371\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4049:4120   */\n      tag_308\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3905:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4251   */\n    tag_309:\n        /* \"#utility.yul\":4220:4244   */\n      tag_373\n        /* \"#utility.yul\":4238:4243   */\n      dup2\n        /* \"#utility.yul\":4220:4244   */\n      tag_300\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4215:4218   */\n      dup3\n        /* \"#utility.yul\":4208:4245   */\n      mstore\n        /* \"#utility.yul\":4133:4251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4257:4479   */\n    tag_59:\n        /* \"#utility.yul\":4350:4354   */\n      0x00\n        /* \"#utility.yul\":4388:4390   */\n      0x20\n        /* \"#utility.yul\":4377:4386   */\n      dup3\n        /* \"#utility.yul\":4373:4391   */\n      add\n        /* \"#utility.yul\":4365:4391   */\n      swap1\n      pop\n        /* \"#utility.yul\":4401:4472   */\n      tag_375\n        /* \"#utility.yul\":4469:4470   */\n      0x00\n        /* \"#utility.yul\":4458:4467   */\n      dup4\n        /* \"#utility.yul\":4454:4471   */\n      add\n        /* \"#utility.yul\":4445:4451   */\n      dup5\n        /* \"#utility.yul\":4401:4472   */\n      tag_309\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4257:4479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4485:5104   */\n    tag_69:\n        /* \"#utility.yul\":4562:4568   */\n      0x00\n        /* \"#utility.yul\":4570:4576   */\n      dup1\n        /* \"#utility.yul\":4578:4584   */\n      0x00\n        /* \"#utility.yul\":4627:4629   */\n      0x60\n        /* \"#utility.yul\":4615:4624   */\n      dup5\n        /* \"#utility.yul\":4606:4613   */\n      dup7\n        /* \"#utility.yul\":4602:4625   */\n      sub\n        /* \"#utility.yul\":4598:4630   */\n      slt\n        /* \"#utility.yul\":4595:4714   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":4633:4712   */\n      tag_378\n      tag_297\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4595:4714   */\n    tag_377:\n        /* \"#utility.yul\":4753:4754   */\n      0x00\n        /* \"#utility.yul\":4778:4831   */\n      tag_379\n        /* \"#utility.yul\":4823:4830   */\n      dup7\n        /* \"#utility.yul\":4814:4820   */\n      dup3\n        /* \"#utility.yul\":4803:4812   */\n      dup8\n        /* \"#utility.yul\":4799:4821   */\n      add\n        /* \"#utility.yul\":4778:4831   */\n      tag_302\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4768:4831   */\n      swap4\n      pop\n        /* \"#utility.yul\":4724:4841   */\n      pop\n        /* \"#utility.yul\":4880:4882   */\n      0x20\n        /* \"#utility.yul\":4906:4959   */\n      tag_380\n        /* \"#utility.yul\":4951:4958   */\n      dup7\n        /* \"#utility.yul\":4942:4948   */\n      dup3\n        /* \"#utility.yul\":4931:4940   */\n      dup8\n        /* \"#utility.yul\":4927:4949   */\n      add\n        /* \"#utility.yul\":4906:4959   */\n      tag_302\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4896:4959   */\n      swap3\n      pop\n        /* \"#utility.yul\":4851:4969   */\n      pop\n        /* \"#utility.yul\":5008:5010   */\n      0x40\n        /* \"#utility.yul\":5034:5087   */\n      tag_381\n        /* \"#utility.yul\":5079:5086   */\n      dup7\n        /* \"#utility.yul\":5070:5076   */\n      dup3\n        /* \"#utility.yul\":5059:5068   */\n      dup8\n        /* \"#utility.yul\":5055:5077   */\n      add\n        /* \"#utility.yul\":5034:5087   */\n      tag_305\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5024:5087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4979:5097   */\n      pop\n        /* \"#utility.yul\":4485:5104   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5110:5196   */\n    tag_310:\n        /* \"#utility.yul\":5145:5152   */\n      0x00\n        /* \"#utility.yul\":5185:5189   */\n      0xff\n        /* \"#utility.yul\":5178:5183   */\n      dup3\n        /* \"#utility.yul\":5174:5190   */\n      and\n        /* \"#utility.yul\":5163:5190   */\n      swap1\n      pop\n        /* \"#utility.yul\":5110:5196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5202:5314   */\n    tag_311:\n        /* \"#utility.yul\":5285:5307   */\n      tag_384\n        /* \"#utility.yul\":5301:5306   */\n      dup2\n        /* \"#utility.yul\":5285:5307   */\n      tag_310\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5280:5283   */\n      dup3\n        /* \"#utility.yul\":5273:5308   */\n      mstore\n        /* \"#utility.yul\":5202:5314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5320:5534   */\n    tag_78:\n        /* \"#utility.yul\":5409:5413   */\n      0x00\n        /* \"#utility.yul\":5447:5449   */\n      0x20\n        /* \"#utility.yul\":5436:5445   */\n      dup3\n        /* \"#utility.yul\":5432:5450   */\n      add\n        /* \"#utility.yul\":5424:5450   */\n      swap1\n      pop\n        /* \"#utility.yul\":5460:5527   */\n      tag_386\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5460:5527   */\n      tag_311\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5320:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_132:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_389\n      tag_297\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5633:5752   */\n    tag_388:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_390\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_302\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_391\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_302\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_312:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_150:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_394:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_396\n      tag_312\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6436:6520   */\n    tag_395:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6698   */\n    tag_313:\n        /* \"#utility.yul\":6672:6690   */\n      0x53656e6465722069732066726f7a656e00000000000000000000000000000000\n        /* \"#utility.yul\":6668:6669   */\n      0x00\n        /* \"#utility.yul\":6660:6666   */\n      dup3\n        /* \"#utility.yul\":6656:6670   */\n      add\n        /* \"#utility.yul\":6649:6691   */\n      mstore\n        /* \"#utility.yul\":6532:6698   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6704:7070   */\n    tag_314:\n        /* \"#utility.yul\":6846:6849   */\n      0x00\n        /* \"#utility.yul\":6867:6934   */\n      tag_399\n        /* \"#utility.yul\":6931:6933   */\n      0x10\n        /* \"#utility.yul\":6926:6929   */\n      dup4\n        /* \"#utility.yul\":6867:6934   */\n      tag_292\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6860:6934   */\n      swap2\n      pop\n        /* \"#utility.yul\":6943:7036   */\n      tag_400\n        /* \"#utility.yul\":7032:7035   */\n      dup3\n        /* \"#utility.yul\":6943:7036   */\n      tag_313\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7061:7063   */\n      0x20\n        /* \"#utility.yul\":7056:7059   */\n      dup3\n        /* \"#utility.yul\":7052:7064   */\n      add\n        /* \"#utility.yul\":7045:7064   */\n      swap1\n      pop\n        /* \"#utility.yul\":6704:7070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7076:7495   */\n    tag_168:\n        /* \"#utility.yul\":7242:7246   */\n      0x00\n        /* \"#utility.yul\":7280:7282   */\n      0x20\n        /* \"#utility.yul\":7269:7278   */\n      dup3\n        /* \"#utility.yul\":7265:7283   */\n      add\n        /* \"#utility.yul\":7257:7283   */\n      swap1\n      pop\n        /* \"#utility.yul\":7329:7338   */\n      dup2\n        /* \"#utility.yul\":7323:7327   */\n      dup2\n        /* \"#utility.yul\":7319:7339   */\n      sub\n        /* \"#utility.yul\":7315:7316   */\n      0x00\n        /* \"#utility.yul\":7304:7313   */\n      dup4\n        /* \"#utility.yul\":7300:7317   */\n      add\n        /* \"#utility.yul\":7293:7340   */\n      mstore\n        /* \"#utility.yul\":7357:7488   */\n      tag_402\n        /* \"#utility.yul\":7483:7487   */\n      dup2\n        /* \"#utility.yul\":7357:7488   */\n      tag_314\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7349:7488   */\n      swap1\n      pop\n        /* \"#utility.yul\":7076:7495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7501:7676   */\n    tag_315:\n        /* \"#utility.yul\":7641:7668   */\n      0x416d6f756e74206d75737420626520616e20696e746567657200000000000000\n        /* \"#utility.yul\":7637:7638   */\n      0x00\n        /* \"#utility.yul\":7629:7635   */\n      dup3\n        /* \"#utility.yul\":7625:7639   */\n      add\n        /* \"#utility.yul\":7618:7669   */\n      mstore\n        /* \"#utility.yul\":7501:7676   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7682:8048   */\n    tag_316:\n        /* \"#utility.yul\":7824:7827   */\n      0x00\n        /* \"#utility.yul\":7845:7912   */\n      tag_405\n        /* \"#utility.yul\":7909:7911   */\n      0x19\n        /* \"#utility.yul\":7904:7907   */\n      dup4\n        /* \"#utility.yul\":7845:7912   */\n      tag_292\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7838:7912   */\n      swap2\n      pop\n        /* \"#utility.yul\":7921:8014   */\n      tag_406\n        /* \"#utility.yul\":8010:8013   */\n      dup3\n        /* \"#utility.yul\":7921:8014   */\n      tag_315\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8039:8041   */\n      0x20\n        /* \"#utility.yul\":8034:8037   */\n      dup3\n        /* \"#utility.yul\":8030:8042   */\n      add\n        /* \"#utility.yul\":8023:8042   */\n      swap1\n      pop\n        /* \"#utility.yul\":7682:8048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8054:8473   */\n    tag_171:\n        /* \"#utility.yul\":8220:8224   */\n      0x00\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"#utility.yul\":8247:8256   */\n      dup3\n        /* \"#utility.yul\":8243:8261   */\n      add\n        /* \"#utility.yul\":8235:8261   */\n      swap1\n      pop\n        /* \"#utility.yul\":8307:8316   */\n      dup2\n        /* \"#utility.yul\":8301:8305   */\n      dup2\n        /* \"#utility.yul\":8297:8317   */\n      sub\n        /* \"#utility.yul\":8293:8294   */\n      0x00\n        /* \"#utility.yul\":8282:8291   */\n      dup4\n        /* \"#utility.yul\":8278:8295   */\n      add\n        /* \"#utility.yul\":8271:8318   */\n      mstore\n        /* \"#utility.yul\":8335:8466   */\n      tag_408\n        /* \"#utility.yul\":8461:8465   */\n      dup2\n        /* \"#utility.yul\":8335:8466   */\n      tag_316\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8327:8466   */\n      swap1\n      pop\n        /* \"#utility.yul\":8054:8473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8479:8644   */\n    tag_317:\n        /* \"#utility.yul\":8619:8636   */\n      0x4e6f742077686974656c69737465640000000000000000000000000000000000\n        /* \"#utility.yul\":8615:8616   */\n      0x00\n        /* \"#utility.yul\":8607:8613   */\n      dup3\n        /* \"#utility.yul\":8603:8617   */\n      add\n        /* \"#utility.yul\":8596:8637   */\n      mstore\n        /* \"#utility.yul\":8479:8644   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8650:9016   */\n    tag_318:\n        /* \"#utility.yul\":8792:8795   */\n      0x00\n        /* \"#utility.yul\":8813:8880   */\n      tag_411\n        /* \"#utility.yul\":8877:8879   */\n      0x0f\n        /* \"#utility.yul\":8872:8875   */\n      dup4\n        /* \"#utility.yul\":8813:8880   */\n      tag_292\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8806:8880   */\n      swap2\n      pop\n        /* \"#utility.yul\":8889:8982   */\n      tag_412\n        /* \"#utility.yul\":8978:8981   */\n      dup3\n        /* \"#utility.yul\":8889:8982   */\n      tag_317\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9007:9009   */\n      0x20\n        /* \"#utility.yul\":9002:9005   */\n      dup3\n        /* \"#utility.yul\":8998:9010   */\n      add\n        /* \"#utility.yul\":8991:9010   */\n      swap1\n      pop\n        /* \"#utility.yul\":8650:9016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9022:9441   */\n    tag_181:\n        /* \"#utility.yul\":9188:9192   */\n      0x00\n        /* \"#utility.yul\":9226:9228   */\n      0x20\n        /* \"#utility.yul\":9215:9224   */\n      dup3\n        /* \"#utility.yul\":9211:9229   */\n      add\n        /* \"#utility.yul\":9203:9229   */\n      swap1\n      pop\n        /* \"#utility.yul\":9275:9284   */\n      dup2\n        /* \"#utility.yul\":9269:9273   */\n      dup2\n        /* \"#utility.yul\":9265:9285   */\n      sub\n        /* \"#utility.yul\":9261:9262   */\n      0x00\n        /* \"#utility.yul\":9250:9259   */\n      dup4\n        /* \"#utility.yul\":9246:9263   */\n      add\n        /* \"#utility.yul\":9239:9286   */\n      mstore\n        /* \"#utility.yul\":9303:9434   */\n      tag_414\n        /* \"#utility.yul\":9429:9433   */\n      dup2\n        /* \"#utility.yul\":9303:9434   */\n      tag_318\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9295:9434   */\n      swap1\n      pop\n        /* \"#utility.yul\":9022:9441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9447:9627   */\n    tag_319:\n        /* \"#utility.yul\":9495:9572   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9492:9493   */\n      0x00\n        /* \"#utility.yul\":9485:9573   */\n      mstore\n        /* \"#utility.yul\":9592:9596   */\n      0x11\n        /* \"#utility.yul\":9589:9590   */\n      0x04\n        /* \"#utility.yul\":9582:9597   */\n      mstore\n        /* \"#utility.yul\":9616:9620   */\n      0x24\n        /* \"#utility.yul\":9613:9614   */\n      0x00\n        /* \"#utility.yul\":9606:9621   */\n      revert\n        /* \"#utility.yul\":9633:9824   */\n    tag_183:\n        /* \"#utility.yul\":9673:9676   */\n      0x00\n        /* \"#utility.yul\":9692:9712   */\n      tag_417\n        /* \"#utility.yul\":9710:9711   */\n      dup3\n        /* \"#utility.yul\":9692:9712   */\n      tag_303\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9687:9712   */\n      swap2\n      pop\n        /* \"#utility.yul\":9726:9746   */\n      tag_418\n        /* \"#utility.yul\":9744:9745   */\n      dup4\n        /* \"#utility.yul\":9726:9746   */\n      tag_303\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9721:9746   */\n      swap3\n      pop\n        /* \"#utility.yul\":9769:9770   */\n      dup3\n        /* \"#utility.yul\":9766:9767   */\n      dup3\n        /* \"#utility.yul\":9762:9771   */\n      add\n        /* \"#utility.yul\":9755:9771   */\n      swap1\n      pop\n        /* \"#utility.yul\":9790:9793   */\n      dup1\n        /* \"#utility.yul\":9787:9788   */\n      dup3\n        /* \"#utility.yul\":9784:9794   */\n      gt\n        /* \"#utility.yul\":9781:9817   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9797:9815   */\n      tag_420\n      tag_319\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9781:9817   */\n    tag_419:\n        /* \"#utility.yul\":9633:9824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9830:10001   */\n    tag_320:\n        /* \"#utility.yul\":9970:9993   */\n      0x546f74616c20737570706c792065786365656465640000000000000000000000\n        /* \"#utility.yul\":9966:9967   */\n      0x00\n        /* \"#utility.yul\":9958:9964   */\n      dup3\n        /* \"#utility.yul\":9954:9968   */\n      add\n        /* \"#utility.yul\":9947:9994   */\n      mstore\n        /* \"#utility.yul\":9830:10001   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10007:10373   */\n    tag_321:\n        /* \"#utility.yul\":10149:10152   */\n      0x00\n        /* \"#utility.yul\":10170:10237   */\n      tag_423\n        /* \"#utility.yul\":10234:10236   */\n      0x15\n        /* \"#utility.yul\":10229:10232   */\n      dup4\n        /* \"#utility.yul\":10170:10237   */\n      tag_292\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10163:10237   */\n      swap2\n      pop\n        /* \"#utility.yul\":10246:10339   */\n      tag_424\n        /* \"#utility.yul\":10335:10338   */\n      dup3\n        /* \"#utility.yul\":10246:10339   */\n      tag_320\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10364:10366   */\n      0x20\n        /* \"#utility.yul\":10359:10362   */\n      dup3\n        /* \"#utility.yul\":10355:10367   */\n      add\n        /* \"#utility.yul\":10348:10367   */\n      swap1\n      pop\n        /* \"#utility.yul\":10007:10373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10379:10798   */\n    tag_186:\n        /* \"#utility.yul\":10545:10549   */\n      0x00\n        /* \"#utility.yul\":10583:10585   */\n      0x20\n        /* \"#utility.yul\":10572:10581   */\n      dup3\n        /* \"#utility.yul\":10568:10586   */\n      add\n        /* \"#utility.yul\":10560:10586   */\n      swap1\n      pop\n        /* \"#utility.yul\":10632:10641   */\n      dup2\n        /* \"#utility.yul\":10626:10630   */\n      dup2\n        /* \"#utility.yul\":10622:10642   */\n      sub\n        /* \"#utility.yul\":10618:10619   */\n      0x00\n        /* \"#utility.yul\":10607:10616   */\n      dup4\n        /* \"#utility.yul\":10603:10620   */\n      add\n        /* \"#utility.yul\":10596:10643   */\n      mstore\n        /* \"#utility.yul\":10660:10791   */\n      tag_426\n        /* \"#utility.yul\":10786:10790   */\n      dup2\n        /* \"#utility.yul\":10660:10791   */\n      tag_321\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10652:10791   */\n      swap1\n      pop\n        /* \"#utility.yul\":10379:10798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10804:10998   */\n    tag_222:\n        /* \"#utility.yul\":10844:10848   */\n      0x00\n        /* \"#utility.yul\":10864:10884   */\n      tag_428\n        /* \"#utility.yul\":10882:10883   */\n      dup3\n        /* \"#utility.yul\":10864:10884   */\n      tag_303\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10859:10884   */\n      swap2\n      pop\n        /* \"#utility.yul\":10898:10918   */\n      tag_429\n        /* \"#utility.yul\":10916:10917   */\n      dup4\n        /* \"#utility.yul\":10898:10918   */\n      tag_303\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10893:10918   */\n      swap3\n      pop\n        /* \"#utility.yul\":10942:10943   */\n      dup3\n        /* \"#utility.yul\":10939:10940   */\n      dup3\n        /* \"#utility.yul\":10935:10944   */\n      sub\n        /* \"#utility.yul\":10927:10944   */\n      swap1\n      pop\n        /* \"#utility.yul\":10966:10967   */\n      dup2\n        /* \"#utility.yul\":10960:10964   */\n      dup2\n        /* \"#utility.yul\":10957:10968   */\n      gt\n        /* \"#utility.yul\":10954:10991   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10971:10989   */\n      tag_431\n      tag_319\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10954:10991   */\n    tag_430:\n        /* \"#utility.yul\":10804:10998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11004:11446   */\n    tag_274:\n        /* \"#utility.yul\":11153:11157   */\n      0x00\n        /* \"#utility.yul\":11191:11193   */\n      0x60\n        /* \"#utility.yul\":11180:11189   */\n      dup3\n        /* \"#utility.yul\":11176:11194   */\n      add\n        /* \"#utility.yul\":11168:11194   */\n      swap1\n      pop\n        /* \"#utility.yul\":11204:11275   */\n      tag_433\n        /* \"#utility.yul\":11272:11273   */\n      0x00\n        /* \"#utility.yul\":11261:11270   */\n      dup4\n        /* \"#utility.yul\":11257:11274   */\n      add\n        /* \"#utility.yul\":11248:11254   */\n      dup7\n        /* \"#utility.yul\":11204:11275   */\n      tag_309\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11285:11357   */\n      tag_434\n        /* \"#utility.yul\":11353:11355   */\n      0x20\n        /* \"#utility.yul\":11342:11351   */\n      dup4\n        /* \"#utility.yul\":11338:11356   */\n      add\n        /* \"#utility.yul\":11329:11335   */\n      dup6\n        /* \"#utility.yul\":11285:11357   */\n      tag_308\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11367:11439   */\n      tag_435\n        /* \"#utility.yul\":11435:11437   */\n      0x40\n        /* \"#utility.yul\":11424:11433   */\n      dup4\n        /* \"#utility.yul\":11420:11438   */\n      add\n        /* \"#utility.yul\":11411:11417   */\n      dup5\n        /* \"#utility.yul\":11367:11439   */\n      tag_308\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11004:11446   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a9779c834c2e5c4e6a33710956e24698408e5eac42d0b651eaf673fd2a8ad6764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1011": {
									"entryPoint": null,
									"id": 1011,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 783,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 588,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 921,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12051:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:8",
														"type": ""
													}
												],
												"src": "457:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:8"
															},
															"nodeType": "YulIf",
															"src": "907:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:8",
														"type": ""
													}
												],
												"src": "751:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:8",
														"type": ""
													}
												],
												"src": "1038:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1255:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:30:8"
															},
															"nodeType": "YulIf",
															"src": "1326:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1392:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1454:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1239:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1250:4:8",
														"type": ""
													}
												],
												"src": "1173:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1640:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1650:7:8",
														"type": ""
													}
												],
												"src": "1613:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1772:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1782:7:8",
														"type": ""
													}
												],
												"src": "1745:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1890:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1947:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:43:8"
															},
															"nodeType": "YulIf",
															"src": "1900:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:8",
														"type": ""
													}
												],
												"src": "1847:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2048:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2016:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2024:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2032:5:8",
														"type": ""
													}
												],
												"src": "1975:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:619:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2374:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2419:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:30:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2524:103:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:15:8"
															},
															"nodeType": "YulIf",
															"src": "2505:122:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2712:155:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2836:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2678:25:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2680:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2640:21:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:8",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:8"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2224:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2232:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2240:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2248:5:8",
														"type": ""
													}
												],
												"src": "2141:732:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2984:297:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3033:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:35:8"
															},
															"nodeType": "YulIf",
															"src": "2994:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3161:114:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:105:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2962:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2970:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2978:5:8",
														"type": ""
													}
												],
												"src": "2896:385:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:452:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3435:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3437:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3437:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3437:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3406:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3402:32:8"
															},
															"nodeType": "YulIf",
															"src": "3399:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3528:306:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3543:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3578:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3563:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3557:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3547:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3628:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3630:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3630:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3630:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3608:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3597:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3597:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "3594:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3725:99:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3796:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3807:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3792:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3816:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3735:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3735:89:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3725:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3359:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3370:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3382:6:8",
														"type": ""
													}
												],
												"src": "3287:554:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3906:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3917:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3933:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3927:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3889:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3899:6:8",
														"type": ""
													}
												],
												"src": "3847:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3980:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4000:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3990:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4094:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4097:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4087:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4087:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4118:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4111:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4111:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3952:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4230:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4260:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4234:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4307:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4321:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4335:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4343:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4331:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4331:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4287:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:26:8"
															},
															"nodeType": "YulIf",
															"src": "4277:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4410:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4424:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4424:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4424:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4374:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4394:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:38:8"
															},
															"nodeType": "YulIf",
															"src": "4368:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4173:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4182:6:8",
														"type": ""
													}
												],
												"src": "4138:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4518:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4528:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4536:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4528:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4556:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4549:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4549:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4572:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4590:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4593:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4580:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4580:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4572:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4505:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4513:4:8",
														"type": ""
													}
												],
												"src": "4464:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:49:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4665:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4683:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4690:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4695:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4638:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4648:6:8",
														"type": ""
													}
												],
												"src": "4611:93:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4763:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4773:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4798:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4804:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4773:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4738:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4744:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4754:8:8",
														"type": ""
													}
												],
												"src": "4710:107:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4899:317:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4909:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4930:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4913:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4953:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4984:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4995:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4965:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4957:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5071:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5102:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5113:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5083:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5071:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5131:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5144:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5155:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5151:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5131:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5170:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5194:8:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5204:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5190:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4860:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4867:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4879:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4892:6:8",
														"type": ""
													}
												],
												"src": "4823:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5267:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5277:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5288:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5277:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5249:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5259:7:8",
														"type": ""
													}
												],
												"src": "5222:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5337:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5347:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5354:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5323:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5333:3:8",
														"type": ""
													}
												],
												"src": "5305:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5431:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5441:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5499:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5481:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5481:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5472:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5472:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5454:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5441:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5411:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5421:9:8",
														"type": ""
													}
												],
												"src": "5371:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5566:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5576:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5583:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5552:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5562:3:8",
														"type": ""
													}
												],
												"src": "5519:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5676:193:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5686:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5741:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5710:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5690:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5765:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5805:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5799:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5799:11:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5812:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5844:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5820:23:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5771:27:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5771:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:105:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5758:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5653:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5659:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5667:7:8",
														"type": ""
													}
												],
												"src": "5600:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5924:24:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5934:8:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5941:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5920:3:8",
														"type": ""
													}
												],
												"src": "5875:73:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6007:136:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6017:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6031:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6021:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6116:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6130:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6072:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6072:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6072:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5993:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5999:6:8",
														"type": ""
													}
												],
												"src": "5954:189:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6199:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6266:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6310:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6317:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6280:29:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6280:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6280:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6219:5:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6226:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6216:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:14:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6231:26:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6233:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6246:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6253:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6242:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6242:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6233:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6213:2:8",
																"statements": []
															},
															"src": "6209:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6187:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6194:3:8",
														"type": ""
													}
												],
												"src": "6149:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6420:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6446:431:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6460:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6508:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6476:31:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6464:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6527:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6550:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6578:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6560:17:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6560:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6546:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6546:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6531:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6747:27:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6749:23:8",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6764:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6749:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6731:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6743:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6728:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6728:18:8"
																		},
																		"nodeType": "YulIf",
																		"src": "6725:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6816:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6833:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6861:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6843:17:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6843:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6829:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6829:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6787:28:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6787:80:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6787:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6437:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6442:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:11:8"
															},
															"nodeType": "YulIf",
															"src": "6431:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6396:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6403:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6408:10:8",
														"type": ""
													}
												],
												"src": "6341:543:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6953:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6963:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6988:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6994:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6984:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6984:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6963:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6928:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6934:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6944:8:8",
														"type": ""
													}
												],
												"src": "6890:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:118:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7074:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7123:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7126:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7119:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7119:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7134:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7090:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7086:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7078:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7151:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7165:4:8"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7171:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7041:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7047:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7057:6:8",
														"type": ""
													}
												],
												"src": "7013:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:214:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7401:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7428:4:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7434:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7409:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7409:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7401:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7447:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7458:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7468:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7471:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7464:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7455:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7455:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7447:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7249:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7255:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7263:4:8",
														"type": ""
													}
												],
												"src": "7187:295:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7579:1303:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7590:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7637:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7604:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7604:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7594:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7726:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7728:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7728:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7698:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7706:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7695:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7695:30:8"
															},
															"nodeType": "YulIf",
															"src": "7692:56:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7758:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7804:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7798:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7798:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7772:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7762:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7903:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7909:6:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7857:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7857:67:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7934:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7951:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7938:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7962:17:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7975:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7962:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8026:611:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8040:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8059:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8071:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8067:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8067:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8055:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8055:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8044:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8091:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8137:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8105:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8105:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8095:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8155:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8164:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8159:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8223:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8248:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8266:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8271:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8262:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8262:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8256:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8256:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8241:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8241:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8241:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8300:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8314:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8322:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8310:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8310:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8300:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8341:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8358:9:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8369:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8354:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8354:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8341:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8189:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8192:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8186:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8186:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8201:21:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8203:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8212:1:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8215:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8208:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8208:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8203:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8182:3:8",
																					"statements": []
																				},
																				"src": "8178:208:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8422:156:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8440:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8467:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8472:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8463:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8463:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8457:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8457:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8444:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8507:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8534:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8549:6:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8557:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8545:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8545:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8515:18:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8515:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8500:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8500:64:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8500:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8405:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8414:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8402:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8402:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "8399:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8598:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8612:6:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8620:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8608:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8608:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8624:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8604:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8604:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8591:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8591:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8591:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8019:618:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8024:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8654:222:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8668:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8672:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8705:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8723:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8742:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8747:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8738:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8738:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8732:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8732:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8723:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8698:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "8695:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8792:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8851:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8858:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8798:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8798:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8785:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8785:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8785:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8646:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7999:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8007:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7996:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "7989:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7568:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7574:3:8",
														"type": ""
													}
												],
												"src": "7487:1395:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8953:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8993:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8975:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8975:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8963:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8941:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8948:3:8",
														"type": ""
													}
												],
												"src": "8888:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9110:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9120:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9132:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9128:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9120:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9200:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9213:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9224:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9209:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9156:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9156:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9156:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9082:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9094:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9105:4:8",
														"type": ""
													}
												],
												"src": "9012:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9336:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9358:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9374:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9398:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9374:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9308:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9313:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9324:11:8",
														"type": ""
													}
												],
												"src": "9240:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9521:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9543:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9551:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:14:8"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9555:34:8",
																		"type": "",
																		"value": "At least one whitelisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9532:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9611:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9619:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9607:15:8"
																	},
																	{
																		"hexValue": "207265717569726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9624:11:8",
																		"type": "",
																		"value": " required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9600:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9600:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9513:6:8",
														"type": ""
													}
												],
												"src": "9415:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9795:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9805:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9871:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9876:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9812:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9805:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9977:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																	"nodeType": "YulIdentifier",
																	"src": "9888:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9888:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9990:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10001:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9997:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9783:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9791:3:8",
														"type": ""
													}
												],
												"src": "9649:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10192:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10202:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10214:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10225:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10210:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10202:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10260:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10245:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10268:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10264:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10264:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10238:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10294:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10428:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10302:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10302:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10294:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10172:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10187:4:8",
														"type": ""
													}
												],
												"src": "10021:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10474:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10491:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10494:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10484:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10484:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10588:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10591:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10581:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10612:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10615:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10605:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10605:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10605:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10446:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10660:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10677:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10670:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10774:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10777:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10767:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10767:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10798:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10801:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10791:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10791:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10791:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10632:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10861:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10871:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10898:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10880:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10880:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10871:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10994:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10996:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10996:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10996:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10919:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10926:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10916:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:77:8"
															},
															"nodeType": "YulIf",
															"src": "10913:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11025:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11036:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11043:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11025:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10847:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10857:3:8",
														"type": ""
													}
												],
												"src": "10818:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11101:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11111:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11134:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11116:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11116:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11111:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11145:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11168:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11150:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11150:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11145:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11179:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11190:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11193:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11186:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11186:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11179:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11219:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11221:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11221:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11221:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11211:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11214:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11208:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11208:10:8"
															},
															"nodeType": "YulIf",
															"src": "11205:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11088:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11091:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11097:3:8",
														"type": ""
													}
												],
												"src": "11057:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11319:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11336:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11359:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11341:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11341:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11329:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11329:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11329:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11307:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11314:3:8",
														"type": ""
													}
												],
												"src": "11254:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11532:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11542:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11554:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11550:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11542:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11622:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11635:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11646:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11631:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11631:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11578:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11578:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11578:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11703:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11727:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11659:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11659:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11785:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11798:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11809:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11794:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11741:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11741:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11741:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11488:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11508:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11516:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11527:4:8",
														"type": ""
													}
												],
												"src": "11378:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11924:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11934:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11946:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11957:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11942:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11942:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11934:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12014:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12038:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12023:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11970:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11970:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11970:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11896:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11908:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11919:4:8",
														"type": ""
													}
												],
												"src": "11826:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one whitelisted address\")\n\n        mstore(add(memPtr, 32), \" required\")\n\n    }\n\n    function abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620029103803806200291083398181016040528101906200003691906200079b565b336040518060400160405280600381526020017f43434b00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43434b00000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000a21565b508060049081620000c6919062000a21565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000133919062000b16565b60405180910390fd5b6200014d816200024c60201b60201c565b505f81511162000194576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018b9062000bb5565b60405180910390fd5b5f5b81518110156200022857600160065f848481518110620001bb57620001ba62000bd5565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555080806200021f9062000c2f565b91505062000196565b5062000245336969e10de76676d08000006200030f60201b60201c565b5062000d1c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000382575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000379919062000b16565b60405180910390fd5b620003955f83836200039960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003ed578060025f828254620003e0919062000c7b565b92505081905550620004be565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000479578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004709392919062000cc6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000507578060025f828254039250508190555062000551565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005b0919062000d01565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200061a82620005d2565b810181811067ffffffffffffffff821117156200063c576200063b620005e2565b5b80604052505050565b5f62000650620005bd565b90506200065e82826200060f565b919050565b5f67ffffffffffffffff82111562000680576200067f620005e2565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620006c08262000695565b9050919050565b620006d281620006b4565b8114620006dd575f80fd5b50565b5f81519050620006f081620006c7565b92915050565b5f6200070c620007068462000663565b62000645565b9050808382526020820190506020840283018581111562000732576200073162000691565b5b835b818110156200075f57806200074a8882620006e0565b84526020840193505060208101905062000734565b5050509392505050565b5f82601f83011262000780576200077f620005ce565b5b815162000792848260208601620006f6565b91505092915050565b5f60208284031215620007b357620007b2620005c6565b5b5f82015167ffffffffffffffff811115620007d357620007d2620005ca565b5b620007e18482850162000769565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200083957607f821691505b6020821081036200084f576200084e620007f4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620008b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000876565b620008bf868362000876565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200090962000903620008fd84620008d7565b620008e0565b620008d7565b9050919050565b5f819050919050565b6200092483620008e9565b6200093c620009338262000910565b84845462000882565b825550505050565b5f90565b6200095262000944565b6200095f81848462000919565b505050565b5b8181101562000986576200097a5f8262000948565b60018101905062000965565b5050565b601f821115620009d5576200099f8162000855565b620009aa8462000867565b81016020851015620009ba578190505b620009d2620009c98562000867565b83018262000964565b50505b505050565b5f82821c905092915050565b5f620009f75f1984600802620009da565b1980831691505092915050565b5f62000a118383620009e6565b9150826002028217905092915050565b62000a2c82620007ea565b67ffffffffffffffff81111562000a485762000a47620005e2565b5b62000a54825462000821565b62000a618282856200098a565b5f60209050601f83116001811462000a97575f841562000a82578287015190505b62000a8e858262000a04565b86555062000afd565b601f19841662000aa78662000855565b5f5b8281101562000ad05784890151825560018201915060208501945060208101905062000aa9565b8683101562000af0578489015162000aec601f891682620009e6565b8355505b6001600288020188555050505b505050505050565b62000b1081620006b4565b82525050565b5f60208201905062000b2b5f83018462000b05565b92915050565b5f82825260208201905092915050565b7f4174206c65617374206f6e652077686974656c697374656420616464726573735f8201527f2072657175697265640000000000000000000000000000000000000000000000602082015250565b5f62000b9d60298362000b31565b915062000baa8262000b41565b604082019050919050565b5f6020820190508181035f83015262000bce8162000b8f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000c3b82620008d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000c705762000c6f62000c02565b5b600182019050919050565b5f62000c8782620008d7565b915062000c9483620008d7565b925082820190508082111562000caf5762000cae62000c02565b5b92915050565b62000cc081620008d7565b82525050565b5f60608201905062000cdb5f83018662000b05565b62000cea602083018562000cb5565b62000cf9604083018462000cb5565b949350505050565b5f60208201905062000d165f83018462000cb5565b92915050565b611be68062000d2a5f395ff3fe608060405234801561000f575f80fd5b50600436106101d8575f3560e01c80638ab1d68111610102578063cb4b73ab116100a0578063e08ba51a1161006f578063e08ba51a14610570578063e43252d71461058c578063e5839836146105a8578063f2fde38b146105d8576101d8565b8063cb4b73ab146104d6578063d0516650146104f2578063da0239a614610522578063dd62ed3e14610540576101d8565b806395d89b41116100dc57806395d89b411461043a5780639b19251a14610458578063a9059cbb14610488578063aba63705146104b8576101d8565b80638ab1d681146103e25780638da5cb5b146103fe578063902d55a51461041c576101d8565b80632d3802421161017a5780635c975abb116101495780635c975abb1461036c5780636290865d1461038a57806370a08231146103a8578063715018a6146103d8576101d8565b80632d380242146102f6578063313ce5671461031457806340c10f191461033257806354fd4d501461034e576101d8565b8063134e18f4116101b6578063134e18f41461025a578063158b1a571461027857806318160ddd146102a857806323b872dd146102c6576101d8565b806306fdde03146101dc578063095ea7b3146101fa57806312cae7af1461022a575b5f80fd5b6101e46105f4565b6040516101f1919061168c565b60405180910390f35b610214600480360381019061020f919061173d565b610684565b6040516102219190611795565b60405180910390f35b610244600480360381019061023f91906117ae565b6106a6565b60405161025191906117e8565b60405180910390f35b6102626106b7565b60405161026f9190611810565b60405180910390f35b610292600480360381019061028d91906117ae565b6106bb565b60405161029f91906117e8565b60405180910390f35b6102b06106c1565b6040516102bd91906117e8565b60405180910390f35b6102e060048036038101906102db9190611829565b6106ca565b6040516102ed9190611795565b60405180910390f35b6102fe6107bd565b60405161030b91906117e8565b60405180910390f35b61031c6107c3565b6040516103299190611894565b60405180910390f35b61034c6004803603810190610347919061173d565b6107cb565b005b6103566108dc565b604051610363919061168c565b60405180910390f35b610374610919565b6040516103819190611795565b60405180910390f35b61039261091d565b60405161039f9190611810565b60405180910390f35b6103c260048036038101906103bd91906117ae565b610921565b6040516103cf91906117e8565b60405180910390f35b6103e0610966565b005b6103fc60048036038101906103f791906117ae565b610979565b005b6104066109d8565b6040516104139190611810565b60405180910390f35b610424610a00565b60405161043191906117e8565b60405180910390f35b610442610a0e565b60405161044f919061168c565b60405180910390f35b610472600480360381019061046d91906117ae565b610a9e565b60405161047f9190611795565b60405180910390f35b6104a2600480360381019061049d919061173d565b610abb565b6040516104af9190611795565b60405180910390f35b6104c0610bac565b6040516104cd9190611810565b60405180910390f35b6104f060048036038101906104eb91906117ae565b610bb3565b005b61050c600480360381019061050791906117ae565b610c12565b6040516105199190611795565b60405180910390f35b61052a610c2f565b60405161053791906117e8565b60405180910390f35b61055a600480360381019061055591906118ad565b610c4d565b60405161056791906117e8565b60405180910390f35b61058a600480360381019061058591906117ae565b610ccf565b005b6105a660048036038101906105a191906117ae565b610d2f565b005b6105c260048036038101906105bd91906117ae565b610d8f565b6040516105cf9190611795565b60405180910390f35b6105f260048036038101906105ed91906117ae565b610de1565b005b60606003805461060390611918565b80601f016020809104026020016040519081016040528092919081815260200182805461062f90611918565b801561067a5780601f106106515761010080835404028352916020019161067a565b820191905f5260205f20905b81548152906001019060200180831161065d57829003601f168201915b5050505050905090565b5f8061068e610e65565b905061069b818585610e6c565b600191505092915050565b5f6106b082610921565b9050919050565b5f90565b5f919050565b5f600254905090565b5f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90611992565b60405180910390fd5b816fffffffffffffffffffffffffffffffff1682146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906119fa565b60405180910390fd5b6107b4848484610e7e565b90509392505050565b60085481565b5f6012905090565b6107d3610eac565b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085390611a62565b60405180910390fd5b6969e10de76676d0800000816008546108759190611aad565b11156108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611b2a565b60405180910390fd5b6108c08282610f33565b8060085f8282546108d19190611aad565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f90565b5f90565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61096e610eac565b6109775f610fb2565b565b610981610eac565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a1d90611918565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4990611918565b8015610a945780601f10610a6b57610100808354040283529160200191610a94565b820191905f5260205f20905b815481529060010190602001808311610a7757829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3d90611992565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b91906119fa565b60405180910390fd5b610ba48383611075565b905092915050565b5f30905090565b610bbb610eac565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f6008546969e10de76676d0800000610c489190611b48565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610cd7610eac565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610d37610eac565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610de9610eac565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e59575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e509190611810565b60405180910390fd5b610e6281610fb2565b50565b5f33905090565b610e798383836001611097565b505050565b5f80610e88610e65565b9050610e95858285611266565b610ea08585856112f9565b60019150509392505050565b610eb4610e65565b73ffffffffffffffffffffffffffffffffffffffff16610ed26109d8565b73ffffffffffffffffffffffffffffffffffffffff1614610f3157610ef5610e65565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f289190611810565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f9a9190611810565b60405180910390fd5b610fae5f83836113e9565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8061107f610e65565b905061108c8185856112f9565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611107575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110fe9190611810565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611177575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161116e9190611810565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611260578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161125791906117e8565b60405180910390a35b50505050565b5f6112718484610c4d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112f357818110156112e4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112db93929190611b7b565b60405180910390fd5b6112f284848484035f611097565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611369575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113609190611810565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113d9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113d09190611810565b60405180910390fd5b6113e48383836113e9565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611439578060025f82825461142d9190611aad565b92505081905550611507565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156114c2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016114b993929190611b7b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154e578060025f8282540392505081905550611598565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115f591906117e8565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561163957808201518184015260208101905061161e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61165e82611602565b611668818561160c565b935061167881856020860161161c565b61168181611644565b840191505092915050565b5f6020820190508181035f8301526116a48184611654565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116d9826116b0565b9050919050565b6116e9816116cf565b81146116f3575f80fd5b50565b5f81359050611704816116e0565b92915050565b5f819050919050565b61171c8161170a565b8114611726575f80fd5b50565b5f8135905061173781611713565b92915050565b5f8060408385031215611753576117526116ac565b5b5f611760858286016116f6565b925050602061177185828601611729565b9150509250929050565b5f8115159050919050565b61178f8161177b565b82525050565b5f6020820190506117a85f830184611786565b92915050565b5f602082840312156117c3576117c26116ac565b5b5f6117d0848285016116f6565b91505092915050565b6117e28161170a565b82525050565b5f6020820190506117fb5f8301846117d9565b92915050565b61180a816116cf565b82525050565b5f6020820190506118235f830184611801565b92915050565b5f805f606084860312156118405761183f6116ac565b5b5f61184d868287016116f6565b935050602061185e868287016116f6565b925050604061186f86828701611729565b9150509250925092565b5f60ff82169050919050565b61188e81611879565b82525050565b5f6020820190506118a75f830184611885565b92915050565b5f80604083850312156118c3576118c26116ac565b5b5f6118d0858286016116f6565b92505060206118e1858286016116f6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061192f57607f821691505b602082108103611942576119416118eb565b5b50919050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f61197c60108361160c565b915061198782611948565b602082019050919050565b5f6020820190508181035f8301526119a981611970565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f6119e460198361160c565b91506119ef826119b0565b602082019050919050565b5f6020820190508181035f830152611a11816119d8565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611a4c600f8361160c565b9150611a5782611a18565b602082019050919050565b5f6020820190508181035f830152611a7981611a40565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ab78261170a565b9150611ac28361170a565b9250828201905080821115611ada57611ad9611a80565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611b1460158361160c565b9150611b1f82611ae0565b602082019050919050565b5f6020820190508181035f830152611b4181611b08565b9050919050565b5f611b528261170a565b9150611b5d8361170a565b9250828203905081811115611b7557611b74611a80565b5b92915050565b5f606082019050611b8e5f830186611801565b611b9b60208301856117d9565b611ba860408301846117d9565b94935050505056fea26469706673582212200a9779c834c2e5c4e6a33710956e24698408e5eac42d0b651eaf673fd2a8ad6764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2910 CODESIZE SUB DUP1 PUSH3 0x2910 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x79B JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0xA21 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0xA21 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D DUP2 PUSH3 0x24C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP2 MLOAD GT PUSH3 0x194 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x18B SWAP1 PUSH3 0xBB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x228 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x1BB JUMPI PUSH3 0x1BA PUSH3 0xBD5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH3 0x21F SWAP1 PUSH3 0xC2F JUMP JUMPDEST SWAP2 POP POP PUSH3 0x196 JUMP JUMPDEST POP PUSH3 0x245 CALLER PUSH10 0x69E10DE76676D0800000 PUSH3 0x30F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xD1C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x382 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x379 SWAP2 SWAP1 PUSH3 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x395 PUSH0 DUP4 DUP4 PUSH3 0x399 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3ED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x3E0 SWAP2 SWAP1 PUSH3 0xC7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4BE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x479 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x470 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x507 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x551 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5B0 SWAP2 SWAP1 PUSH3 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x61A DUP3 PUSH3 0x5D2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x63C JUMPI PUSH3 0x63B PUSH3 0x5E2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x650 PUSH3 0x5BD JUMP JUMPDEST SWAP1 POP PUSH3 0x65E DUP3 DUP3 PUSH3 0x60F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x680 JUMPI PUSH3 0x67F PUSH3 0x5E2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x6C0 DUP3 PUSH3 0x695 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6D2 DUP2 PUSH3 0x6B4 JUMP JUMPDEST DUP2 EQ PUSH3 0x6DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x6F0 DUP2 PUSH3 0x6C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x70C PUSH3 0x706 DUP5 PUSH3 0x663 JUMP JUMPDEST PUSH3 0x645 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x732 JUMPI PUSH3 0x731 PUSH3 0x691 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x75F JUMPI DUP1 PUSH3 0x74A DUP9 DUP3 PUSH3 0x6E0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x734 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x780 JUMPI PUSH3 0x77F PUSH3 0x5CE JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x792 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x6F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7B3 JUMPI PUSH3 0x7B2 PUSH3 0x5C6 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7D3 JUMPI PUSH3 0x7D2 PUSH3 0x5CA JUMP JUMPDEST JUMPDEST PUSH3 0x7E1 DUP5 DUP3 DUP6 ADD PUSH3 0x769 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x839 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x84F JUMPI PUSH3 0x84E PUSH3 0x7F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x8B3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x876 JUMP JUMPDEST PUSH3 0x8BF DUP7 DUP4 PUSH3 0x876 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x909 PUSH3 0x903 PUSH3 0x8FD DUP5 PUSH3 0x8D7 JUMP JUMPDEST PUSH3 0x8E0 JUMP JUMPDEST PUSH3 0x8D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x924 DUP4 PUSH3 0x8E9 JUMP JUMPDEST PUSH3 0x93C PUSH3 0x933 DUP3 PUSH3 0x910 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x882 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x952 PUSH3 0x944 JUMP JUMPDEST PUSH3 0x95F DUP2 DUP5 DUP5 PUSH3 0x919 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x986 JUMPI PUSH3 0x97A PUSH0 DUP3 PUSH3 0x948 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x965 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x9D5 JUMPI PUSH3 0x99F DUP2 PUSH3 0x855 JUMP JUMPDEST PUSH3 0x9AA DUP5 PUSH3 0x867 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x9BA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x9D2 PUSH3 0x9C9 DUP6 PUSH3 0x867 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x964 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x9F7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x9DA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA11 DUP4 DUP4 PUSH3 0x9E6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA2C DUP3 PUSH3 0x7EA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA48 JUMPI PUSH3 0xA47 PUSH3 0x5E2 JUMP JUMPDEST JUMPDEST PUSH3 0xA54 DUP3 SLOAD PUSH3 0x821 JUMP JUMPDEST PUSH3 0xA61 DUP3 DUP3 DUP6 PUSH3 0x98A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xA97 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xA82 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xA8E DUP6 DUP3 PUSH3 0xA04 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xAFD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAA7 DUP7 PUSH3 0x855 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xAD0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAA9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xAF0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xAEC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x9E6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xB10 DUP2 PUSH3 0x6B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB2B PUSH0 DUP4 ADD DUP5 PUSH3 0xB05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652077686974656C69737465642061646472657373 PUSH0 DUP3 ADD MSTORE PUSH32 0x2072657175697265640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0xB9D PUSH1 0x29 DUP4 PUSH3 0xB31 JUMP JUMPDEST SWAP2 POP PUSH3 0xBAA DUP3 PUSH3 0xB41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xBCE DUP2 PUSH3 0xB8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xC3B DUP3 PUSH3 0x8D7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH3 0xC70 JUMPI PUSH3 0xC6F PUSH3 0xC02 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC87 DUP3 PUSH3 0x8D7 JUMP JUMPDEST SWAP2 POP PUSH3 0xC94 DUP4 PUSH3 0x8D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xCAF JUMPI PUSH3 0xCAE PUSH3 0xC02 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xCC0 DUP2 PUSH3 0x8D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xCDB PUSH0 DUP4 ADD DUP7 PUSH3 0xB05 JUMP JUMPDEST PUSH3 0xCEA PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xCB5 JUMP JUMPDEST PUSH3 0xCF9 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xCB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD16 PUSH0 DUP4 ADD DUP5 PUSH3 0xCB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE6 DUP1 PUSH3 0xD2A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AB1D681 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xCB4B73AB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE08BA51A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x540 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x4B8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x41C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2D380242 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2D380242 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x34E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x134E18F4 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E4 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x966 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x406 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C0 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52A PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x603 SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62F SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x651 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x68E PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0x69B DUP2 DUP6 DUP6 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B0 DUP3 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B4 DUP5 DUP5 DUP5 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x853 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x8 SLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C0 DUP3 DUP3 PUSH2 0xF33 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96E PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x977 PUSH0 PUSH2 0xFB2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x981 PUSH2 0xEAC JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA1D SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA49 SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB91 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA4 DUP4 DUP4 PUSH2 0x1075 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBBB PUSH2 0xEAC JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xC48 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCD7 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD37 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE9 PUSH2 0xEAC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE59 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE50 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE62 DUP2 PUSH2 0xFB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE79 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1097 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE88 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0xE95 DUP6 DUP3 DUP6 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xEA0 DUP6 DUP6 DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEB4 PUSH2 0xE65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED2 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF31 JUMPI PUSH2 0xEF5 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAE PUSH0 DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x107F PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0x108C DUP2 DUP6 DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1107 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1177 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1260 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1271 DUP5 DUP5 PUSH2 0xC4D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x12F3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12E4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1097 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1369 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1360 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E4 DUP4 DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1439 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x142D SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1507 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x14C2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1598 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1639 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x161E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165E DUP3 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x1668 DUP2 DUP6 PUSH2 0x160C JUMP JUMPDEST SWAP4 POP PUSH2 0x1678 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x161C JUMP JUMPDEST PUSH2 0x1681 DUP2 PUSH2 0x1644 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A4 DUP2 DUP5 PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D9 DUP3 PUSH2 0x16B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E9 DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP2 EQ PUSH2 0x16F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1704 DUP2 PUSH2 0x16E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x170A JUMP JUMPDEST DUP2 EQ PUSH2 0x1726 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1737 DUP2 PUSH2 0x1713 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1760 DUP6 DUP3 DUP7 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1771 DUP6 DUP3 DUP7 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178F DUP2 PUSH2 0x177B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1786 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D0 DUP5 DUP3 DUP6 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x170A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17FB PUSH0 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1823 PUSH0 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH2 0x183F PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184D DUP7 DUP3 DUP8 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x185E DUP7 DUP3 DUP8 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x186F DUP7 DUP3 DUP8 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D0 DUP6 DUP3 DUP7 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E1 DUP6 DUP3 DUP7 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x192F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1942 JUMPI PUSH2 0x1941 PUSH2 0x18EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH1 0x10 DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A9 DUP2 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E4 PUSH1 0x19 DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A11 DUP2 PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C PUSH1 0xF DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 DUP3 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A79 DUP2 PUSH2 0x1A40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AB7 DUP3 PUSH2 0x170A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC2 DUP4 PUSH2 0x170A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 PUSH1 0x15 DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B52 DUP3 PUSH2 0x170A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x170A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B8E PUSH0 DUP4 ADD DUP7 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1B9B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x1BA8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP8 PUSH26 0xC834C2E5C4E6A33710956E24698408E5EAC42D0B651EAF673FD2 0xA8 0xAD PUSH8 0x64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "309:3630:6:-:0;;;626:407;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;695:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;746:1:6::2;726:10;:17;:21;718:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;859:9;854:106;878:10;:17;874:1;:21;854:106;;;944:4;917:9;:24;927:10;938:1;927:13;;;;;;;;:::i;:::-;;;;;;;;917:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;897:3;;;;;:::i;:::-;;;;854:106;;;;972:31;978:10;401:16;972:5;;;:31;;:::i;:::-;626:407:::0;309:3630;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:118::-;8975:24;8993:5;8975:24;:::i;:::-;8970:3;8963:37;8888:118;;:::o;9012:222::-;9105:4;9143:2;9132:9;9128:18;9120:26;;9156:71;9224:1;9213:9;9209:17;9200:6;9156:71;:::i;:::-;9012:222;;;;:::o;9240:169::-;9324:11;9358:6;9353:3;9346:19;9398:4;9393:3;9389:14;9374:29;;9240:169;;;;:::o;9415:228::-;9555:34;9551:1;9543:6;9539:14;9532:58;9624:11;9619:2;9611:6;9607:15;9600:36;9415:228;:::o;9649:366::-;9791:3;9812:67;9876:2;9871:3;9812:67;:::i;:::-;9805:74;;9888:93;9977:3;9888:93;:::i;:::-;10006:2;10001:3;9997:12;9990:19;;9649:366;;;:::o;10021:419::-;10187:4;10225:2;10214:9;10210:18;10202:26;;10274:9;10268:4;10264:20;10260:1;10249:9;10245:17;10238:47;10302:131;10428:4;10302:131;:::i;:::-;10294:139;;10021:419;;;:::o;10446:180::-;10494:77;10491:1;10484:88;10591:4;10588:1;10581:15;10615:4;10612:1;10605:15;10632:180;10680:77;10677:1;10670:88;10777:4;10774:1;10767:15;10801:4;10798:1;10791:15;10818:233;10857:3;10880:24;10898:5;10880:24;:::i;:::-;10871:33;;10926:66;10919:5;10916:77;10913:103;;10996:18;;:::i;:::-;10913:103;11043:1;11036:5;11032:13;11025:20;;10818:233;;;:::o;11057:191::-;11097:3;11116:20;11134:1;11116:20;:::i;:::-;11111:25;;11150:20;11168:1;11150:20;:::i;:::-;11145:25;;11193:1;11190;11186:9;11179:16;;11214:3;11211:1;11208:10;11205:36;;;11221:18;;:::i;:::-;11205:36;11057:191;;;;:::o;11254:118::-;11341:24;11359:5;11341:24;:::i;:::-;11336:3;11329:37;11254:118;;:::o;11378:442::-;11527:4;11565:2;11554:9;11550:18;11542:26;;11578:71;11646:1;11635:9;11631:17;11622:6;11578:71;:::i;:::-;11659:72;11727:2;11716:9;11712:18;11703:6;11659:72;:::i;:::-;11741;11809:2;11798:9;11794:18;11785:6;11741:72;:::i;:::-;11378:442;;;;;;:::o;11826:222::-;11919:4;11957:2;11946:9;11942:18;11934:26;;11970:71;12038:1;12027:9;12023:17;12014:6;11970:71;:::i;:::-;11826:222;;;;:::o;309:3630:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_951": {
									"entryPoint": 2560,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3692,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4247,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3756,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3891,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3685,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4710,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4018,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4857,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5097,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToWhitelist_1025": {
									"entryPoint": 3375,
									"id": 1025,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3149,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1668,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfUser_1282": {
									"entryPoint": 1702,
									"id": 1282,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2337,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@compliance_1122": {
									"entryPoint": 2333,
									"id": 1122,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1987,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezeUser_1053": {
									"entryPoint": 3279,
									"id": 1053,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@frozen_959": {
									"entryPoint": 3090,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getFrozenTokens_1155": {
									"entryPoint": 1723,
									"id": 1155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@identityRegistry_1110": {
									"entryPoint": 1719,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFrozen_1144": {
									"entryPoint": 3471,
									"id": 1144,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1270": {
									"entryPoint": 1995,
									"id": 1270,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintedAmount_961": {
									"entryPoint": 1981,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1524,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onchainID_1089": {
									"entryPoint": 2988,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2520,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1131": {
									"entryPoint": 2329,
									"id": 1131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingSupply_1077": {
									"entryPoint": 3119,
									"id": 1077,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_1039": {
									"entryPoint": 2425,
									"id": 1039,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2406,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2574,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1729,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1235": {
									"entryPoint": 1738,
									"id": 1235,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 3710,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3553,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1194": {
									"entryPoint": 2747,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 4213,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreezeUser_1067": {
									"entryPoint": 2995,
									"id": 1067,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@version_1098": {
									"entryPoint": 2268,
									"id": 1098,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whitelist_955": {
									"entryPoint": 2718,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11449:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3560:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3533:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:32:8"
															},
															"nodeType": "YulIf",
															"src": "3522:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3651:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3666:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3670:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3695:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3730:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3741:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3726:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3750:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3705:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3695:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:8",
														"type": ""
													}
												],
												"src": "3446:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3863:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3886:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3868:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:8",
														"type": ""
													}
												],
												"src": "3781:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4013:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4049:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3975:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3987:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3998:4:8",
														"type": ""
													}
												],
												"src": "3905:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4198:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4238:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4220:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4220:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4208:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4186:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4193:3:8",
														"type": ""
													}
												],
												"src": "4133:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4355:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4365:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4377:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4388:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4365:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4445:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4458:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4469:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4454:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4401:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4327:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4339:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4350:4:8",
														"type": ""
													}
												],
												"src": "4257:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4585:519:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4631:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4633:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4633:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4633:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4606:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4602:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:32:8"
															},
															"nodeType": "YulIf",
															"src": "4595:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4724:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4739:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4753:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4743:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4768:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4803:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4814:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4799:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4823:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4778:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4778:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4768:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4851:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4866:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4880:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4870:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4896:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4931:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4942:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4927:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4927:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4951:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4906:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4906:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4896:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4979:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4994:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4998:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5024:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5059:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5070:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5055:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5055:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5079:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5034:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5034:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5024:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4539:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4550:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4562:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4570:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4578:6:8",
														"type": ""
													}
												],
												"src": "4485:619:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5178:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5174:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5163:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5135:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5145:7:8",
														"type": ""
													}
												],
												"src": "5110:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5263:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5280:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5301:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5285:15:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5285:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5273:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5251:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5258:3:8",
														"type": ""
													}
												],
												"src": "5202:112:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5414:120:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5424:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5436:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5447:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5432:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5424:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5460:39:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5460:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5460:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5386:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5398:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5409:4:8",
														"type": ""
													}
												],
												"src": "5320:214:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5623:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5669:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:32:8"
															},
															"nodeType": "YulIf",
															"src": "5633:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5762:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5806:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5889:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5934:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5585:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5596:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5608:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5616:6:8",
														"type": ""
													}
												],
												"src": "5540:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6267:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6277:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6375:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6389:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:26:8"
															},
															"nodeType": "YulIf",
															"src": "6345:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6478:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:38:8"
															},
															"nodeType": "YulIf",
															"src": "6436:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6241:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6250:6:8",
														"type": ""
													}
												],
												"src": "6206:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6638:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6660:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6668:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:14:8"
																	},
																	{
																		"hexValue": "53656e6465722069732066726f7a656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6672:18:8",
																		"type": "",
																		"value": "Sender is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6630:6:8",
														"type": ""
													}
												],
												"src": "6532:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6850:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6860:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6926:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6931:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6867:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6860:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7032:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																	"nodeType": "YulIdentifier",
																	"src": "6943:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6943:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6943:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7045:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7056:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7052:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6838:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6846:3:8",
														"type": ""
													}
												],
												"src": "6704:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7247:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7257:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7269:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7280:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7265:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7265:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7257:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7304:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7315:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7300:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7300:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7323:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7329:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7319:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7319:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7293:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7293:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7349:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7483:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7357:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7349:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7227:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7242:4:8",
														"type": ""
													}
												],
												"src": "7076:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7607:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7629:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7637:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7625:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7625:14:8"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7641:27:8",
																		"type": "",
																		"value": "Amount must be an integer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7618:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7599:6:8",
														"type": ""
													}
												],
												"src": "7501:175:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7828:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7838:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7904:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7909:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7845:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7845:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7838:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8010:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																	"nodeType": "YulIdentifier",
																	"src": "7921:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7921:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8023:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8034:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8039:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8030:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8023:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7816:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7824:3:8",
														"type": ""
													}
												],
												"src": "7682:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8225:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8235:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8243:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8243:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8235:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8282:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8293:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8301:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8307:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8271:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8271:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8327:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8461:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8335:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8327:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8205:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8220:4:8",
														"type": ""
													}
												],
												"src": "8054:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8585:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8607:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8615:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8603:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8603:14:8"
																	},
																	{
																		"hexValue": "4e6f742077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8619:17:8",
																		"type": "",
																		"value": "Not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8596:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8596:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8577:6:8",
														"type": ""
													}
												],
												"src": "8479:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8796:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8806:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8872:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8877:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8813:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8813:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8806:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8978:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																	"nodeType": "YulIdentifier",
																	"src": "8889:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8889:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8889:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8991:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9002:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9007:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8998:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8998:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8784:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8792:3:8",
														"type": ""
													}
												],
												"src": "8650:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9193:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9203:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9215:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9226:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9211:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9203:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9250:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9261:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9246:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9246:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9269:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9275:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9265:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9265:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9239:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9239:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9295:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9429:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9303:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9303:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9295:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9173:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9188:4:8",
														"type": ""
													}
												],
												"src": "9022:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9475:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9492:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9495:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9485:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9485:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9582:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9582:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9616:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9606:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9606:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9606:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9447:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9677:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9687:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9710:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9692:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9692:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9687:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9721:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9744:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9726:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9726:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9721:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9755:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9766:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9769:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9762:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9762:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9755:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9795:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9797:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9797:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9797:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9787:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9790:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9784:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9784:10:8"
															},
															"nodeType": "YulIf",
															"src": "9781:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9664:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9667:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9673:3:8",
														"type": ""
													}
												],
												"src": "9633:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9936:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9958:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9966:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9954:14:8"
																	},
																	{
																		"hexValue": "546f74616c20737570706c79206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9970:23:8",
																		"type": "",
																		"value": "Total supply exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9947:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9947:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9928:6:8",
														"type": ""
													}
												],
												"src": "9830:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10153:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10163:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10229:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10170:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10163:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10335:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																	"nodeType": "YulIdentifier",
																	"src": "10246:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10246:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10246:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10348:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10359:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10364:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10355:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10355:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10348:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10141:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10149:3:8",
														"type": ""
													}
												],
												"src": "10007:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10550:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10560:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10572:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10583:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10568:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10568:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10560:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10607:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10618:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10603:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10603:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10626:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10632:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10622:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10622:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10596:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10652:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10786:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10660:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10652:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10530:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10545:4:8",
														"type": ""
													}
												],
												"src": "10379:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10849:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10859:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10882:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10864:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10859:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10893:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10916:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10898:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10898:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10893:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10927:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10939:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10942:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10935:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10927:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10969:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10971:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10971:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10971:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10960:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10966:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10957:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10957:11:8"
															},
															"nodeType": "YulIf",
															"src": "10954:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10835:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10838:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10844:4:8",
														"type": ""
													}
												],
												"src": "10804:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11158:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11168:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11180:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11191:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11176:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11176:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11168:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11248:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11261:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11272:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11257:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11204:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11204:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11204:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11329:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11342:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11353:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11338:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11338:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11285:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11285:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11285:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11411:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11435:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11420:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11367:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11367:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11114:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11126:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11134:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11142:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11153:4:8",
														"type": ""
													}
												],
												"src": "11004:442:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be an integer\")\n\n    }\n\n    function abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total supply exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101d8575f3560e01c80638ab1d68111610102578063cb4b73ab116100a0578063e08ba51a1161006f578063e08ba51a14610570578063e43252d71461058c578063e5839836146105a8578063f2fde38b146105d8576101d8565b8063cb4b73ab146104d6578063d0516650146104f2578063da0239a614610522578063dd62ed3e14610540576101d8565b806395d89b41116100dc57806395d89b411461043a5780639b19251a14610458578063a9059cbb14610488578063aba63705146104b8576101d8565b80638ab1d681146103e25780638da5cb5b146103fe578063902d55a51461041c576101d8565b80632d3802421161017a5780635c975abb116101495780635c975abb1461036c5780636290865d1461038a57806370a08231146103a8578063715018a6146103d8576101d8565b80632d380242146102f6578063313ce5671461031457806340c10f191461033257806354fd4d501461034e576101d8565b8063134e18f4116101b6578063134e18f41461025a578063158b1a571461027857806318160ddd146102a857806323b872dd146102c6576101d8565b806306fdde03146101dc578063095ea7b3146101fa57806312cae7af1461022a575b5f80fd5b6101e46105f4565b6040516101f1919061168c565b60405180910390f35b610214600480360381019061020f919061173d565b610684565b6040516102219190611795565b60405180910390f35b610244600480360381019061023f91906117ae565b6106a6565b60405161025191906117e8565b60405180910390f35b6102626106b7565b60405161026f9190611810565b60405180910390f35b610292600480360381019061028d91906117ae565b6106bb565b60405161029f91906117e8565b60405180910390f35b6102b06106c1565b6040516102bd91906117e8565b60405180910390f35b6102e060048036038101906102db9190611829565b6106ca565b6040516102ed9190611795565b60405180910390f35b6102fe6107bd565b60405161030b91906117e8565b60405180910390f35b61031c6107c3565b6040516103299190611894565b60405180910390f35b61034c6004803603810190610347919061173d565b6107cb565b005b6103566108dc565b604051610363919061168c565b60405180910390f35b610374610919565b6040516103819190611795565b60405180910390f35b61039261091d565b60405161039f9190611810565b60405180910390f35b6103c260048036038101906103bd91906117ae565b610921565b6040516103cf91906117e8565b60405180910390f35b6103e0610966565b005b6103fc60048036038101906103f791906117ae565b610979565b005b6104066109d8565b6040516104139190611810565b60405180910390f35b610424610a00565b60405161043191906117e8565b60405180910390f35b610442610a0e565b60405161044f919061168c565b60405180910390f35b610472600480360381019061046d91906117ae565b610a9e565b60405161047f9190611795565b60405180910390f35b6104a2600480360381019061049d919061173d565b610abb565b6040516104af9190611795565b60405180910390f35b6104c0610bac565b6040516104cd9190611810565b60405180910390f35b6104f060048036038101906104eb91906117ae565b610bb3565b005b61050c600480360381019061050791906117ae565b610c12565b6040516105199190611795565b60405180910390f35b61052a610c2f565b60405161053791906117e8565b60405180910390f35b61055a600480360381019061055591906118ad565b610c4d565b60405161056791906117e8565b60405180910390f35b61058a600480360381019061058591906117ae565b610ccf565b005b6105a660048036038101906105a191906117ae565b610d2f565b005b6105c260048036038101906105bd91906117ae565b610d8f565b6040516105cf9190611795565b60405180910390f35b6105f260048036038101906105ed91906117ae565b610de1565b005b60606003805461060390611918565b80601f016020809104026020016040519081016040528092919081815260200182805461062f90611918565b801561067a5780601f106106515761010080835404028352916020019161067a565b820191905f5260205f20905b81548152906001019060200180831161065d57829003601f168201915b5050505050905090565b5f8061068e610e65565b905061069b818585610e6c565b600191505092915050565b5f6106b082610921565b9050919050565b5f90565b5f919050565b5f600254905090565b5f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610755576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074c90611992565b60405180910390fd5b816fffffffffffffffffffffffffffffffff1682146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a0906119fa565b60405180910390fd5b6107b4848484610e7e565b90509392505050565b60085481565b5f6012905090565b6107d3610eac565b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085390611a62565b60405180910390fd5b6969e10de76676d0800000816008546108759190611aad565b11156108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611b2a565b60405180910390fd5b6108c08282610f33565b8060085f8282546108d19190611aad565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f90565b5f90565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61096e610eac565b6109775f610fb2565b565b610981610eac565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a1d90611918565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4990611918565b8015610a945780601f10610a6b57610100808354040283529160200191610a94565b820191905f5260205f20905b815481529060010190602001808311610a7757829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3d90611992565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b91906119fa565b60405180910390fd5b610ba48383611075565b905092915050565b5f30905090565b610bbb610eac565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f6008546969e10de76676d0800000610c489190611b48565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610cd7610eac565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610d37610eac565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610de9610eac565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e59575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e509190611810565b60405180910390fd5b610e6281610fb2565b50565b5f33905090565b610e798383836001611097565b505050565b5f80610e88610e65565b9050610e95858285611266565b610ea08585856112f9565b60019150509392505050565b610eb4610e65565b73ffffffffffffffffffffffffffffffffffffffff16610ed26109d8565b73ffffffffffffffffffffffffffffffffffffffff1614610f3157610ef5610e65565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f289190611810565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f9a9190611810565b60405180910390fd5b610fae5f83836113e9565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8061107f610e65565b905061108c8185856112f9565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611107575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110fe9190611810565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611177575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161116e9190611810565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611260578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161125791906117e8565b60405180910390a35b50505050565b5f6112718484610c4d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112f357818110156112e4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112db93929190611b7b565b60405180910390fd5b6112f284848484035f611097565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611369575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113609190611810565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113d9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113d09190611810565b60405180910390fd5b6113e48383836113e9565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611439578060025f82825461142d9190611aad565b92505081905550611507565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156114c2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016114b993929190611b7b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154e578060025f8282540392505081905550611598565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115f591906117e8565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561163957808201518184015260208101905061161e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61165e82611602565b611668818561160c565b935061167881856020860161161c565b61168181611644565b840191505092915050565b5f6020820190508181035f8301526116a48184611654565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116d9826116b0565b9050919050565b6116e9816116cf565b81146116f3575f80fd5b50565b5f81359050611704816116e0565b92915050565b5f819050919050565b61171c8161170a565b8114611726575f80fd5b50565b5f8135905061173781611713565b92915050565b5f8060408385031215611753576117526116ac565b5b5f611760858286016116f6565b925050602061177185828601611729565b9150509250929050565b5f8115159050919050565b61178f8161177b565b82525050565b5f6020820190506117a85f830184611786565b92915050565b5f602082840312156117c3576117c26116ac565b5b5f6117d0848285016116f6565b91505092915050565b6117e28161170a565b82525050565b5f6020820190506117fb5f8301846117d9565b92915050565b61180a816116cf565b82525050565b5f6020820190506118235f830184611801565b92915050565b5f805f606084860312156118405761183f6116ac565b5b5f61184d868287016116f6565b935050602061185e868287016116f6565b925050604061186f86828701611729565b9150509250925092565b5f60ff82169050919050565b61188e81611879565b82525050565b5f6020820190506118a75f830184611885565b92915050565b5f80604083850312156118c3576118c26116ac565b5b5f6118d0858286016116f6565b92505060206118e1858286016116f6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061192f57607f821691505b602082108103611942576119416118eb565b5b50919050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f61197c60108361160c565b915061198782611948565b602082019050919050565b5f6020820190508181035f8301526119a981611970565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f6119e460198361160c565b91506119ef826119b0565b602082019050919050565b5f6020820190508181035f830152611a11816119d8565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611a4c600f8361160c565b9150611a5782611a18565b602082019050919050565b5f6020820190508181035f830152611a7981611a40565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ab78261170a565b9150611ac28361170a565b9250828201905080821115611ada57611ad9611a80565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611b1460158361160c565b9150611b1f82611ae0565b602082019050919050565b5f6020820190508181035f830152611b4181611b08565b9050919050565b5f611b528261170a565b9150611b5d8361170a565b9250828203905081811115611b7557611b74611a80565b5b92915050565b5f606082019050611b8e5f830186611801565b611b9b60208301856117d9565b611ba860408301846117d9565b94935050505056fea26469706673582212200a9779c834c2e5c4e6a33710956e24698408e5eac42d0b651eaf673fd2a8ad6764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AB1D681 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xCB4B73AB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE08BA51A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x4D6 JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x540 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x4B8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x41C JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2D380242 GT PUSH2 0x17A JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D8 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2D380242 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x34E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x134E18F4 GT PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x22A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E4 PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1829 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x966 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x406 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C0 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52A PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x555 SWAP2 SWAP1 PUSH2 0x18AD JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xD2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x17AE JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x603 SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62F SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x651 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x68E PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0x69B DUP2 DUP6 DUP6 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B0 DUP3 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B4 DUP5 DUP5 DUP5 PUSH2 0xE7E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x853 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x8 SLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST GT ISZERO PUSH2 0x8B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C0 DUP3 DUP3 PUSH2 0xF33 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x96E PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x977 PUSH0 PUSH2 0xFB2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x981 PUSH2 0xEAC JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA1D SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA49 SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA6B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB91 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA4 DUP4 DUP4 PUSH2 0x1075 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBBB PUSH2 0xEAC JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xC48 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCD7 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xD37 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE9 PUSH2 0xEAC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE59 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE50 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE62 DUP2 PUSH2 0xFB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE79 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1097 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE88 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0xE95 DUP6 DUP3 DUP6 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xEA0 DUP6 DUP6 DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEB4 PUSH2 0xE65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED2 PUSH2 0x9D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF31 JUMPI PUSH2 0xEF5 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAE PUSH0 DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x107F PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP PUSH2 0x108C DUP2 DUP6 DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1107 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1177 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1260 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1271 DUP5 DUP5 PUSH2 0xC4D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x12F3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12E4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1097 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1369 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1360 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E4 DUP4 DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1439 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x142D SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1507 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x14C2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1598 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15F5 SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1639 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x161E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165E DUP3 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x1668 DUP2 DUP6 PUSH2 0x160C JUMP JUMPDEST SWAP4 POP PUSH2 0x1678 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x161C JUMP JUMPDEST PUSH2 0x1681 DUP2 PUSH2 0x1644 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16A4 DUP2 DUP5 PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16D9 DUP3 PUSH2 0x16B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E9 DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP2 EQ PUSH2 0x16F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1704 DUP2 PUSH2 0x16E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x170A JUMP JUMPDEST DUP2 EQ PUSH2 0x1726 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1737 DUP2 PUSH2 0x1713 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1760 DUP6 DUP3 DUP7 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1771 DUP6 DUP3 DUP7 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178F DUP2 PUSH2 0x177B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1786 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C3 JUMPI PUSH2 0x17C2 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D0 DUP5 DUP3 DUP6 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x170A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17FB PUSH0 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH2 0x16CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1823 PUSH0 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1840 JUMPI PUSH2 0x183F PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184D DUP7 DUP3 DUP8 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x185E DUP7 DUP3 DUP8 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x186F DUP7 DUP3 DUP8 ADD PUSH2 0x1729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x1879 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D0 DUP6 DUP3 DUP7 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E1 DUP6 DUP3 DUP7 ADD PUSH2 0x16F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x192F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1942 JUMPI PUSH2 0x1941 PUSH2 0x18EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH1 0x10 DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A9 DUP2 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19E4 PUSH1 0x19 DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A11 DUP2 PUSH2 0x19D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4C PUSH1 0xF DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 DUP3 PUSH2 0x1A18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A79 DUP2 PUSH2 0x1A40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AB7 DUP3 PUSH2 0x170A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC2 DUP4 PUSH2 0x170A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ADA JUMPI PUSH2 0x1AD9 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 PUSH1 0x15 DUP4 PUSH2 0x160C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B52 DUP3 PUSH2 0x170A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x170A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x1A80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B8E PUSH0 DUP4 ADD DUP7 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1B9B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x1BA8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP8 PUSH26 0xC834C2E5C4E6A33710956E24698408E5EAC42D0B651EAF673FD2 0xA8 0xAD PUSH8 0x64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "309:3630:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3793:143:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2020:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2559:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3116:313:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;562:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3479:264:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1913:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2305:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2167:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1211:108:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362:55:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;440:41:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2790:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1804:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1468:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;501:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1348:91:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1071:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2401:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;3793:143:6:-;3853:7;3880:15;3890:4;3880:9;:15::i;:::-;3873:22;;3793:143;;;:::o;2020:139::-;2080:7;2020:139;:::o;2559:151::-;2637:7;2559:151;;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;3116:313:6:-;3214:4;3240:6;:14;3247:6;3240:14;;;;;;;;;;;;;;;;;;;;;;;;;3239:15;3231:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3320:6;3304:24;;3294:6;:34;3286:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3376:45;3395:6;3403:9;3414:6;3376:18;:45::i;:::-;3369:52;;3116:313;;;;;:::o;562:27::-;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;3479:264:6:-;1531:13:0;:11;:13::i;:::-;3559:9:6::1;:13;3569:2;3559:13;;;;;;;;;;;;;;;;;;;;;;;;;3551:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;401:16;3626:6;3611:12;;:21;;;;:::i;:::-;:37;;3603:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3685:17;3691:2;3695:6;3685:5;:17::i;:::-;3729:6;3713:12;;:22;;;;;;;:::i;:::-;;;;;;;;3479:264:::0;;:::o;1913:99::-;1964:13;1990:14;;;;;;;;;;;;;;;;;;;1913:99;:::o;2305:88::-;2355:4;2305:88;:::o;2167:130::-;2221:7;2167:130;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1211:108:6:-;1531:13:0;:11;:13::i;:::-;1306:5:6::1;1286:9;:17;1296:6;1286:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1211:108:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;362:55:6:-;401:16;362:55;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;440:41:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;2790:285::-;2868:4;2894:6;:18;2901:10;2894:18;;;;;;;;;;;;;;;;;;;;;;;;;2893:19;2885:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2978:6;2962:24;;2952:6;:34;2944:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3034:33;3049:9;3060:6;3034:14;:33::i;:::-;3027:40;;2790:285;;;;:::o;1804:101::-;1857:7;1892:4;1877:20;;1804:101;:::o;1468:94::-;1531:13:0;:11;:13::i;:::-;1549:5:6::1;1534:6;:12;1541:4;1534:12;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;1468:94:::0;:::o;501:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;1615:146::-;1665:7;1707:12;;401:16;1692:27;;;;:::i;:::-;1685:34;;1615:146;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;1348:91:6:-;1531:13:0;:11;:13::i;:::-;1427:4:6::1;1412:6;:12;1419:4;1412:12;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;1348:91:::0;:::o;1071:102::-;1531:13:0;:11;:13::i;:::-;1161:4:6::1;1141:9;:17;1151:6;1141:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1071:102:::0;:::o;2401:150::-;2472:4;2496:6;:19;2503:11;2496:19;;;;;;;;;;;;;;;;;;;;;;;;;2489:26;;2401:150;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:329::-;3505:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:119;;;3560:79;;:::i;:::-;3522:119;3680:1;3705:53;3750:7;3741:6;3730:9;3726:22;3705:53;:::i;:::-;3695:63;;3651:117;3446:329;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:222::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;3905:222;;;;:::o;4133:118::-;4220:24;4238:5;4220:24;:::i;:::-;4215:3;4208:37;4133:118;;:::o;4257:222::-;4350:4;4388:2;4377:9;4373:18;4365:26;;4401:71;4469:1;4458:9;4454:17;4445:6;4401:71;:::i;:::-;4257:222;;;;:::o;4485:619::-;4562:6;4570;4578;4627:2;4615:9;4606:7;4602:23;4598:32;4595:119;;;4633:79;;:::i;:::-;4595:119;4753:1;4778:53;4823:7;4814:6;4803:9;4799:22;4778:53;:::i;:::-;4768:63;;4724:117;4880:2;4906:53;4951:7;4942:6;4931:9;4927:22;4906:53;:::i;:::-;4896:63;;4851:118;5008:2;5034:53;5079:7;5070:6;5059:9;5055:22;5034:53;:::i;:::-;5024:63;;4979:118;4485:619;;;;;:::o;5110:86::-;5145:7;5185:4;5178:5;5174:16;5163:27;;5110:86;;;:::o;5202:112::-;5285:22;5301:5;5285:22;:::i;:::-;5280:3;5273:35;5202:112;;:::o;5320:214::-;5409:4;5447:2;5436:9;5432:18;5424:26;;5460:67;5524:1;5513:9;5509:17;5500:6;5460:67;:::i;:::-;5320:214;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:166::-;6672:18;6668:1;6660:6;6656:14;6649:42;6532:166;:::o;6704:366::-;6846:3;6867:67;6931:2;6926:3;6867:67;:::i;:::-;6860:74;;6943:93;7032:3;6943:93;:::i;:::-;7061:2;7056:3;7052:12;7045:19;;6704:366;;;:::o;7076:419::-;7242:4;7280:2;7269:9;7265:18;7257:26;;7329:9;7323:4;7319:20;7315:1;7304:9;7300:17;7293:47;7357:131;7483:4;7357:131;:::i;:::-;7349:139;;7076:419;;;:::o;7501:175::-;7641:27;7637:1;7629:6;7625:14;7618:51;7501:175;:::o;7682:366::-;7824:3;7845:67;7909:2;7904:3;7845:67;:::i;:::-;7838:74;;7921:93;8010:3;7921:93;:::i;:::-;8039:2;8034:3;8030:12;8023:19;;7682:366;;;:::o;8054:419::-;8220:4;8258:2;8247:9;8243:18;8235:26;;8307:9;8301:4;8297:20;8293:1;8282:9;8278:17;8271:47;8335:131;8461:4;8335:131;:::i;:::-;8327:139;;8054:419;;;:::o;8479:165::-;8619:17;8615:1;8607:6;8603:14;8596:41;8479:165;:::o;8650:366::-;8792:3;8813:67;8877:2;8872:3;8813:67;:::i;:::-;8806:74;;8889:93;8978:3;8889:93;:::i;:::-;9007:2;9002:3;8998:12;8991:19;;8650:366;;;:::o;9022:419::-;9188:4;9226:2;9215:9;9211:18;9203:26;;9275:9;9269:4;9265:20;9261:1;9250:9;9246:17;9239:47;9303:131;9429:4;9303:131;:::i;:::-;9295:139;;9022:419;;;:::o;9447:180::-;9495:77;9492:1;9485:88;9592:4;9589:1;9582:15;9616:4;9613:1;9606:15;9633:191;9673:3;9692:20;9710:1;9692:20;:::i;:::-;9687:25;;9726:20;9744:1;9726:20;:::i;:::-;9721:25;;9769:1;9766;9762:9;9755:16;;9790:3;9787:1;9784:10;9781:36;;;9797:18;;:::i;:::-;9781:36;9633:191;;;;:::o;9830:171::-;9970:23;9966:1;9958:6;9954:14;9947:47;9830:171;:::o;10007:366::-;10149:3;10170:67;10234:2;10229:3;10170:67;:::i;:::-;10163:74;;10246:93;10335:3;10246:93;:::i;:::-;10364:2;10359:3;10355:12;10348:19;;10007:366;;;:::o;10379:419::-;10545:4;10583:2;10572:9;10568:18;10560:26;;10632:9;10626:4;10622:20;10618:1;10607:9;10603:17;10596:47;10660:131;10786:4;10660:131;:::i;:::-;10652:139;;10379:419;;;:::o;10804:194::-;10844:4;10864:20;10882:1;10864:20;:::i;:::-;10859:25;;10898:20;10916:1;10898:20;:::i;:::-;10893:25;;10942:1;10939;10935:9;10927:17;;10966:1;10960:4;10957:11;10954:37;;;10971:18;;:::i;:::-;10954:37;10804:194;;;;:::o;11004:442::-;11153:4;11191:2;11180:9;11176:18;11168:26;;11204:71;11272:1;11261:9;11257:17;11248:6;11204:71;:::i;:::-;11285:72;11353:2;11342:9;11338:18;11329:6;11285:72;:::i;:::-;11367;11435:2;11424:9;11420:18;11411:6;11367:72;:::i;:::-;11004:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1428400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_SUPPLY()": "415",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"balanceOfUser(address)": "2962",
								"compliance()": "439",
								"decimals()": "406",
								"freezeUser(address)": "infinite",
								"frozen(address)": "2900",
								"getFrozenTokens(address)": "701",
								"identityRegistry()": "418",
								"isFrozen(address)": "2958",
								"mint(address,uint256)": "infinite",
								"mintedAmount()": "2471",
								"name()": "infinite",
								"onchainID()": "490",
								"owner()": "2583",
								"paused()": "375",
								"remainingSupply()": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreezeUser(address)": "infinite",
								"version()": "infinite",
								"whitelist(address)": "2900"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 626,
									"end": 1033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 695,
									"end": 705,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 746,
									"end": 747,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 736,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 726,
									"end": 743,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 726,
									"end": 747,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 718,
									"end": 793,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 718,
									"end": 793,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 868,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 878,
									"end": 888,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 878,
									"end": 895,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 874,
									"end": 875,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 895,
									"modifierDepth": 2,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 944,
									"end": 948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 917,
									"end": 926,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 937,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 938,
									"end": 939,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 927,
									"end": 940,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 940,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 917,
									"end": 941,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 948,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 897,
									"end": 900,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 897,
									"end": 900,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 854,
									"end": 960,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1003,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 978,
									"end": 988,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 401,
									"end": 417,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 972,
									"end": 977,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 972,
									"end": 977,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 972,
									"end": 977,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1003,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 972,
									"end": 1003,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1003,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 972,
									"end": 1003,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 972,
									"end": 1003,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 626,
									"end": 1033,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3382,
									"end": 3388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3431,
									"end": 3433,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3419,
									"end": 3428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3417,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3406,
									"end": 3429,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3402,
									"end": 3434,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3437,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3578,
									"end": 3579,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3576,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3563,
									"end": 3580,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3557,
									"end": 3581,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3626,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3606,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3597,
									"end": 3627,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3630,
									"end": 3709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3816,
									"end": 3823,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3807,
									"end": 3813,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3796,
									"end": 3805,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3792,
									"end": 3814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 3735,
									"end": 3824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3528,
									"end": 3834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3899,
									"end": 3905,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3933,
									"end": 3938,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3847,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4000,
									"end": 4077,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3997,
									"end": 3998,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3990,
									"end": 4078,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4094,
									"end": 4095,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4087,
									"end": 4102,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4121,
									"end": 4125,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4118,
									"end": 4119,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4111,
									"end": 4126,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4182,
									"end": 4188,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4219,
									"end": 4220,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4209,
									"end": 4221,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4267,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4260,
									"end": 4264,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4256,
									"end": 4268,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4343,
									"end": 4347,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4335,
									"end": 4341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4331,
									"end": 4348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4407,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4397,
									"end": 4403,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4394,
									"end": 4408,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4374,
									"end": 4392,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4371,
									"end": 4409,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 4424,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4189,
									"end": 4458,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4138,
									"end": 4458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4513,
									"end": 4517,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4536,
									"end": 4539,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4559,
									"end": 4562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4556,
									"end": 4557,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4563,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4593,
									"end": 4597,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4590,
									"end": 4591,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4648,
									"end": 4654,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4695,
									"end": 4697,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4690,
									"end": 4692,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4683,
									"end": 4688,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4679,
									"end": 4693,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4675,
									"end": 4698,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4611,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4754,
									"end": 4762,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4809,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4794,
									"end": 4810,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4892,
									"end": 4898,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4943,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4930,
									"end": 4940,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4926,
									"end": 4944,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4995,
									"end": 5061,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4984,
									"end": 4993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4965,
									"end": 5062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5113,
									"end": 5121,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5102,
									"end": 5111,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 5083,
									"end": 5122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5151,
									"end": 5160,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5144,
									"end": 5149,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5140,
									"end": 5161,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5194,
									"end": 5202,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5190,
									"end": 5209,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5183,
									"end": 5188,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5180,
									"end": 5210,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4823,
									"end": 5216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5259,
									"end": 5266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5288,
									"end": 5293,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5333,
									"end": 5336,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5359,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5305,
									"end": 5365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5430,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5481,
									"end": 5505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5472,
									"end": 5506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 5454,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5371,
									"end": 5513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5583,
									"end": 5588,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5594,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5741,
									"end": 5748,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 5710,
									"end": 5749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5844,
									"end": 5860,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 5820,
									"end": 5861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5818,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5799,
									"end": 5810,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5771,
									"end": 5862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5765,
									"end": 5769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5758,
									"end": 5863,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5676,
									"end": 5869,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5920,
									"end": 5923,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5875,
									"end": 5948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 6031,
									"end": 6063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6130,
									"end": 6136,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6128,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6116,
									"end": 6120,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 6072,
									"end": 6137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6007,
									"end": 6143,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5954,
									"end": 6143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6226,
									"end": 6229,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6219,
									"end": 6224,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6216,
									"end": 6230,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 6280,
									"end": 6319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6253,
									"end": 6254,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6246,
									"end": 6251,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6242,
									"end": 6255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6442,
									"end": 6444,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6437,
									"end": 6440,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6445,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6508,
									"end": 6513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 6476,
									"end": 6514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 6578,
									"end": 6588,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6560,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6550,
									"end": 6558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6546,
									"end": 6590,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6743,
									"end": 6745,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6728,
									"end": 6746,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6764,
									"end": 6772,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6861,
									"end": 6864,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6843,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6833,
									"end": 6841,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6829,
									"end": 6866,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6816,
									"end": 6827,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 6787,
									"end": 6867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6341,
									"end": 6884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 6952,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6994,
									"end": 6999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6988,
									"end": 6992,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6984,
									"end": 7000,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6890,
									"end": 7007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7057,
									"end": 7063,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7134,
									"end": 7140,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7126,
									"end": 7131,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7123,
									"end": 7124,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 7119,
									"end": 7132,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 7090,
									"end": 7141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7086,
									"end": 7142,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7171,
									"end": 7175,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7165,
									"end": 7169,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7161,
									"end": 7176,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7064,
									"end": 7182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7013,
									"end": 7182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7434,
									"end": 7437,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7428,
									"end": 7432,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 7409,
									"end": 7438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7471,
									"end": 7474,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7468,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7464,
									"end": 7475,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7458,
									"end": 7462,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7455,
									"end": 7476,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7187,
									"end": 7482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7637,
									"end": 7640,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 7604,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7706,
									"end": 7724,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7698,
									"end": 7704,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7695,
									"end": 7725,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 7728,
									"end": 7746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7804,
									"end": 7808,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7798,
									"end": 7809,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 7772,
									"end": 7810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7903,
									"end": 7907,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 7857,
									"end": 7924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7951,
									"end": 7952,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7975,
									"end": 7979,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8007,
									"end": 8009,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7999,
									"end": 8005,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7996,
									"end": 8010,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8024,
									"end": 8025,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8681,
									"end": 8682,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8698,
									"end": 8704,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8747,
									"end": 8756,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8742,
									"end": 8745,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8738,
									"end": 8757,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8732,
									"end": 8758,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8858,
									"end": 8864,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8851,
									"end": 8856,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 8798,
									"end": 8865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8792,
									"end": 8796,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8785,
									"end": 8866,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8654,
									"end": 8876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8071,
									"end": 8075,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8067,
									"end": 8076,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8059,
									"end": 8065,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8055,
									"end": 8077,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8137,
									"end": 8141,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 8105,
									"end": 8142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8164,
									"end": 8165,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8192,
									"end": 8199,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8189,
									"end": 8190,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8186,
									"end": 8200,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8271,
									"end": 8280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8266,
									"end": 8269,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8262,
									"end": 8281,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8256,
									"end": 8282,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8241,
									"end": 8283,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8322,
									"end": 8323,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8314,
									"end": 8320,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8310,
									"end": 8324,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8369,
									"end": 8371,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8358,
									"end": 8367,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8354,
									"end": 8372,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8215,
									"end": 8219,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8212,
									"end": 8213,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8208,
									"end": 8220,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8414,
									"end": 8420,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8405,
									"end": 8412,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8402,
									"end": 8421,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8472,
									"end": 8481,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8467,
									"end": 8470,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8463,
									"end": 8482,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8457,
									"end": 8483,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 8557,
									"end": 8561,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8549,
									"end": 8555,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8545,
									"end": 8562,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8534,
									"end": 8543,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 8515,
									"end": 8563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8507,
									"end": 8513,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8500,
									"end": 8564,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8422,
									"end": 8578,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "tag",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8624,
									"end": 8625,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8620,
									"end": 8621,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8612,
									"end": 8618,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8608,
									"end": 8622,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8604,
									"end": 8626,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8598,
									"end": 8602,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8591,
									"end": 8627,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7487,
									"end": 8882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 8993,
									"end": 8998,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 8975,
									"end": 8999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8970,
									"end": 8973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8963,
									"end": 9000,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8888,
									"end": 9006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9143,
									"end": 9145,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9132,
									"end": 9141,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9128,
									"end": 9146,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9224,
									"end": 9225,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9213,
									"end": 9222,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9209,
									"end": 9226,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9200,
									"end": 9206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 9156,
									"end": 9227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9012,
									"end": 9234,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9324,
									"end": 9335,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9358,
									"end": 9364,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9353,
									"end": 9356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9346,
									"end": 9365,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9398,
									"end": 9402,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9393,
									"end": 9396,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9389,
									"end": 9403,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9240,
									"end": 9409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9555,
									"end": 9589,
									"name": "PUSH",
									"source": 8,
									"value": "4174206C65617374206F6E652077686974656C69737465642061646472657373"
								},
								{
									"begin": 9551,
									"end": 9552,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9543,
									"end": 9549,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9539,
									"end": 9553,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9532,
									"end": 9590,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9624,
									"end": 9635,
									"name": "PUSH",
									"source": 8,
									"value": "2072657175697265640000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9619,
									"end": 9621,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9611,
									"end": 9617,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9607,
									"end": 9622,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9600,
									"end": 9636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9415,
									"end": 9643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9791,
									"end": 9794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9876,
									"end": 9878,
									"name": "PUSH",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 9871,
									"end": 9874,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 9812,
									"end": 9879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9805,
									"end": 9879,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9805,
									"end": 9879,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9977,
									"end": 9980,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 9888,
									"end": 9981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10006,
									"end": 10008,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10001,
									"end": 10004,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9997,
									"end": 10009,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9990,
									"end": 10009,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9990,
									"end": 10009,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9649,
									"end": 10015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10187,
									"end": 10191,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10225,
									"end": 10227,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10214,
									"end": 10223,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10210,
									"end": 10228,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10202,
									"end": 10228,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10202,
									"end": 10228,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10274,
									"end": 10283,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10268,
									"end": 10272,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10264,
									"end": 10284,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 10260,
									"end": 10261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10249,
									"end": 10258,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10245,
									"end": 10262,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10238,
									"end": 10285,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10428,
									"end": 10432,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 10302,
									"end": 10433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10294,
									"end": 10433,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10294,
									"end": 10433,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10021,
									"end": 10440,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10446,
									"end": 10626,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 10446,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10494,
									"end": 10571,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10491,
									"end": 10492,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10484,
									"end": 10572,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10591,
									"end": 10595,
									"name": "PUSH",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 10588,
									"end": 10589,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 10581,
									"end": 10596,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10615,
									"end": 10619,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 10612,
									"end": 10613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10605,
									"end": 10620,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 10632,
									"end": 10812,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 10632,
									"end": 10812,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10680,
									"end": 10757,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10677,
									"end": 10678,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10670,
									"end": 10758,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10777,
									"end": 10781,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 10774,
									"end": 10775,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 10767,
									"end": 10782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10801,
									"end": 10805,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 10798,
									"end": 10799,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 10806,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 10818,
									"end": 11051,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 10818,
									"end": 11051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10857,
									"end": 10860,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10880,
									"end": 10904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10898,
									"end": 10903,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10880,
									"end": 10904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 10880,
									"end": 10904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10880,
									"end": 10904,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10880,
									"end": 10904,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10871,
									"end": 10904,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10871,
									"end": 10904,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10926,
									"end": 10992,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10919,
									"end": 10924,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10916,
									"end": 10993,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 11016,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10913,
									"end": 11016,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10996,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10996,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 10996,
									"end": 11014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10996,
									"end": 11014,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10996,
									"end": 11014,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10913,
									"end": 11016,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 10913,
									"end": 11016,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11043,
									"end": 11044,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 11036,
									"end": 11041,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11032,
									"end": 11045,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11025,
									"end": 11045,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11025,
									"end": 11045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10818,
									"end": 11051,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10818,
									"end": 11051,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10818,
									"end": 11051,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10818,
									"end": 11051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11057,
									"end": 11248,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 11057,
									"end": 11248,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11097,
									"end": 11100,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11116,
									"end": 11136,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 11134,
									"end": 11135,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11116,
									"end": 11136,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 11116,
									"end": 11136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11116,
									"end": 11136,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 11116,
									"end": 11136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11111,
									"end": 11136,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11111,
									"end": 11136,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11150,
									"end": 11170,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 11168,
									"end": 11169,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11150,
									"end": 11170,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 11150,
									"end": 11170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11150,
									"end": 11170,
									"name": "tag",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 11150,
									"end": 11170,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11145,
									"end": 11170,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11145,
									"end": 11170,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11193,
									"end": 11194,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11190,
									"end": 11191,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11186,
									"end": 11195,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11179,
									"end": 11195,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11179,
									"end": 11195,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11214,
									"end": 11217,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 11211,
									"end": 11212,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11208,
									"end": 11218,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 11205,
									"end": 11241,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 11205,
									"end": 11241,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11205,
									"end": 11241,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 11221,
									"end": 11239,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11221,
									"end": 11239,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 11221,
									"end": 11239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11221,
									"end": 11239,
									"name": "tag",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11221,
									"end": 11239,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11205,
									"end": 11241,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11205,
									"end": 11241,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11057,
									"end": 11248,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11057,
									"end": 11248,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11057,
									"end": 11248,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11057,
									"end": 11248,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11057,
									"end": 11248,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11254,
									"end": 11372,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 11254,
									"end": 11372,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11341,
									"end": 11365,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 11359,
									"end": 11364,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 11341,
									"end": 11365,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 11341,
									"end": 11365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11341,
									"end": 11365,
									"name": "tag",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 11341,
									"end": 11365,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11336,
									"end": 11339,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11329,
									"end": 11366,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11254,
									"end": 11372,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11254,
									"end": 11372,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11254,
									"end": 11372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11527,
									"end": 11531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11565,
									"end": 11567,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 11554,
									"end": 11563,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11550,
									"end": 11568,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11542,
									"end": 11568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11542,
									"end": 11568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 11646,
									"end": 11647,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11635,
									"end": 11644,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11631,
									"end": 11648,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11622,
									"end": 11628,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11578,
									"end": 11649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "tag",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 11578,
									"end": 11649,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11659,
									"end": 11731,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "222"
								},
								{
									"begin": 11727,
									"end": 11729,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11716,
									"end": 11725,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11712,
									"end": 11730,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11703,
									"end": 11709,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 11659,
									"end": 11731,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 11659,
									"end": 11731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11659,
									"end": 11731,
									"name": "tag",
									"source": 8,
									"value": "222"
								},
								{
									"begin": 11659,
									"end": 11731,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11741,
									"end": 11813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "223"
								},
								{
									"begin": 11809,
									"end": 11811,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11798,
									"end": 11807,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11794,
									"end": 11812,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11785,
									"end": 11791,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11741,
									"end": 11813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 11741,
									"end": 11813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11741,
									"end": 11813,
									"name": "tag",
									"source": 8,
									"value": "223"
								},
								{
									"begin": 11741,
									"end": 11813,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11378,
									"end": 11820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 12048,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 11826,
									"end": 12048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11919,
									"end": 11923,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11957,
									"end": 11959,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11946,
									"end": 11955,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11942,
									"end": 11960,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11934,
									"end": 11960,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11934,
									"end": 11960,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11970,
									"end": 12041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "225"
								},
								{
									"begin": 12038,
									"end": 12039,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12027,
									"end": 12036,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 12023,
									"end": 12040,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 12014,
									"end": 12020,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11970,
									"end": 12041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 11970,
									"end": 12041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11970,
									"end": 12041,
									"name": "tag",
									"source": 8,
									"value": "225"
								},
								{
									"begin": 11970,
									"end": 12041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 12048,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 12048,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 12048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 12048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 12048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 3939,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a9779c834c2e5c4e6a33710956e24698408e5eac42d0b651eaf673fd2a8ad6764736f6c63430008140033",
									".code": [
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "8AB1D681"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "CB4B73AB"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "E08BA51A"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "E08BA51A"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "E43252D7"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "E5839836"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "CB4B73AB"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "D0516650"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "DA0239A6"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "9B19251A"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "ABA63705"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "8AB1D681"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "902D55A5"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "2D380242"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "5C975ABB"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "5C975ABB"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "6290865D"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "2D380242"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "54FD4D50"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "134E18F4"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "134E18F4"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "158B1A57"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "12CAE7AF"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 3939,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3793,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3793,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3793,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2020,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2020,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2559,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2559,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2559,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3116,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3116,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3116,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 562,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 562,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3479,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3479,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1913,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1913,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2305,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2305,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2167,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2167,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1211,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1211,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 362,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 362,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 362,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 440,
											"end": 481,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 440,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 440,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 440,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2790,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2790,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2790,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1804,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1804,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1468,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1468,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 501,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 501,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 501,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1615,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1615,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1348,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1348,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1071,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1071,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2401,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2401,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2401,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3890,
											"end": 3894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3880,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3895,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3880,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3240,
											"end": 3254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3239,
											"end": 3254,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3231,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3231,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3304,
											"end": 3328,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3328,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3286,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3286,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3376,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 562,
											"end": 589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3571,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3559,
											"end": 3572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3551,
											"end": 3592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3551,
											"end": 3592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3626,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3611,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3611,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3611,
											"end": 3632,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3611,
											"end": 3632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3648,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3648,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3603,
											"end": 3674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3603,
											"end": 3674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3691,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3701,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3685,
											"end": 3702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3685,
											"end": 3702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3713,
											"end": 3725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3713,
											"end": 3735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "PUSH",
											"source": 6,
											"value": "312E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2355,
											"end": 2359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1311,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 417,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 362,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 362,
											"end": 417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 481,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 440,
											"end": 481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2900,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2911,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2912,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2885,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2885,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2986,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2944,
											"end": 3016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2944,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3049,
											"end": 3058,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3034,
											"end": 3067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1554,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1468,
											"end": 1562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 501,
											"end": 539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 501,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 401,
											"end": 417,
											"name": "PUSH",
											"source": 6,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 1692,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1692,
											"end": 1719,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1692,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1692,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1692,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1692,
											"end": 1719,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1692,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1412,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1423,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1348,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1141,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1157,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1165,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2496,
											"end": 2515,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3560,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3705,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3868,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3781,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4049,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4251,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4133,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 4238,
											"end": 4243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4220,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 4220,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4215,
											"end": 4218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4257,
											"end": 4479,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4257,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4350,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4467,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4401,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4472,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4401,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4257,
											"end": 4479,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4257,
											"end": 4479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4257,
											"end": 4479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4257,
											"end": 4479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4257,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4613,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4625,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4630,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4714,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 4595,
											"end": 4714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4633,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 4633,
											"end": 4712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4712,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4633,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4714,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 4595,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4823,
											"end": 4830,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4812,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4799,
											"end": 4821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4778,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4831,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4778,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4831,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4882,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4951,
											"end": 4958,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 4940,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 4949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4906,
											"end": 4959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4906,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4959,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4851,
											"end": 4969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5034,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5079,
											"end": 5086,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5059,
											"end": 5068,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5055,
											"end": 5077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5034,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 5034,
											"end": 5087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5034,
											"end": 5087,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 5034,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4485,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5110,
											"end": 5196,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5110,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5145,
											"end": 5152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5189,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5190,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5110,
											"end": 5196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5110,
											"end": 5196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5110,
											"end": 5196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5110,
											"end": 5196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5314,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 5202,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5285,
											"end": 5307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 5285,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5534,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5320,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5409,
											"end": 5413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 5460,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 5460,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5534,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6698,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6532,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6672,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "53656E6465722069732066726F7A656E00000000000000000000000000000000"
										},
										{
											"begin": 6668,
											"end": 6669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6691,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 7070,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6704,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6867,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 6931,
											"end": 6933,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 6867,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 6934,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 6867,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6860,
											"end": 6934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 7032,
											"end": 7035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6943,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 6943,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 7070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 7070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 7070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 7070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7495,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7076,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7242,
											"end": 7246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7282,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7269,
											"end": 7278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7338,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7319,
											"end": 7339,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7304,
											"end": 7313,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7300,
											"end": 7317,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7340,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7357,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7357,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 7357,
											"end": 7488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7357,
											"end": 7488,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 7357,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7501,
											"end": 7676,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7501,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7641,
											"end": 7668,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E74206D75737420626520616E20696E746567657200000000000000"
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7635,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7625,
											"end": 7639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7618,
											"end": 7669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7501,
											"end": 7676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7501,
											"end": 7676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8048,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 7682,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7824,
											"end": 7827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7909,
											"end": 7911,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 7904,
											"end": 7907,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7845,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7845,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7845,
											"end": 7912,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 7845,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7912,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7912,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 8010,
											"end": 8013,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7921,
											"end": 8014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8014,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 7921,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8034,
											"end": 8037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8023,
											"end": 8042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8023,
											"end": 8042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8048,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 8048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8054,
											"end": 8473,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8054,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8247,
											"end": 8256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8235,
											"end": 8261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8235,
											"end": 8261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8317,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8282,
											"end": 8291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8318,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 8461,
											"end": 8465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 8335,
											"end": 8466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8466,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 8335,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8327,
											"end": 8466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8327,
											"end": 8466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8054,
											"end": 8473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8054,
											"end": 8473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8054,
											"end": 8473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8054,
											"end": 8473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8644,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 8479,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F742077686974656C69737465640000000000000000000000000000000000"
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8596,
											"end": 8637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8877,
											"end": 8879,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 8872,
											"end": 8875,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 8813,
											"end": 8880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 8813,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 8880,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 8880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8978,
											"end": 8981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 8889,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8889,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9007,
											"end": 9009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9002,
											"end": 9005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8998,
											"end": 9010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8991,
											"end": 9010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 9016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8650,
											"end": 9016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9441,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 9022,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9188,
											"end": 9192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9226,
											"end": 9228,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9215,
											"end": 9224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9275,
											"end": 9284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9265,
											"end": 9285,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9259,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9239,
											"end": 9286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9303,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 9429,
											"end": 9433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9303,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 9303,
											"end": 9434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9303,
											"end": 9434,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 9303,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9295,
											"end": 9434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9295,
											"end": 9434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9447,
											"end": 9627,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9447,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9572,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9492,
											"end": 9493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9573,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9596,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9589,
											"end": 9590,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9582,
											"end": 9597,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9616,
											"end": 9620,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9824,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 9633,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9673,
											"end": 9676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 9710,
											"end": 9711,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9692,
											"end": 9712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 9726,
											"end": 9746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9746,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9766,
											"end": 9767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9762,
											"end": 9771,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9793,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9794,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9817,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 9781,
											"end": 9817,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9797,
											"end": 9815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9817,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 9781,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9824,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9830,
											"end": 10001,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 9830,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 9993,
											"name": "PUSH",
											"source": 8,
											"value": "546F74616C20737570706C792065786365656465640000000000000000000000"
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9947,
											"end": 9994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9830,
											"end": 10001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9830,
											"end": 10001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10149,
											"end": 10152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 10229,
											"end": 10232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 10170,
											"end": 10237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 10246,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10359,
											"end": 10362,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10355,
											"end": 10367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10585,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10622,
											"end": 10642,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10603,
											"end": 10620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10596,
											"end": 10643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 10786,
											"end": 10790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10660,
											"end": 10791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10652,
											"end": 10791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10652,
											"end": 10791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10998,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 10804,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10844,
											"end": 10848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 10882,
											"end": 10883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 10864,
											"end": 10884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 10864,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10859,
											"end": 10884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 10916,
											"end": 10917,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 10898,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10893,
											"end": 10918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10893,
											"end": 10918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10942,
											"end": 10943,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10939,
											"end": 10940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10927,
											"end": 10944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10927,
											"end": 10944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10968,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10991,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10954,
											"end": 10991,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10971,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10971,
											"end": 10989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10971,
											"end": 10989,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 10971,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10991,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 10954,
											"end": 10991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10998,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10804,
											"end": 10998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11157,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11193,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11180,
											"end": 11189,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11176,
											"end": 11194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11168,
											"end": 11194,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11168,
											"end": 11194,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 11272,
											"end": 11273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11261,
											"end": 11270,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11274,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11248,
											"end": 11254,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 11204,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11275,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 11204,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11353,
											"end": 11355,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11342,
											"end": 11351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11338,
											"end": 11356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11329,
											"end": 11335,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 11285,
											"end": 11357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 11435,
											"end": 11437,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11424,
											"end": 11433,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11411,
											"end": 11417,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 11367,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11367,
											"end": 11439,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 11367,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CCK/CCKToken.sol",
								"contracts/CCK/ERC3643.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUser(address)": "12cae7af",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"freezeUser(address)": "e08ba51a",
							"frozen(address)": "d0516650",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"mintedAmount()": "2d380242",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"remainingSupply()": "da0239a6",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreezeUser(address)": "cb4b73ab",
							"version()": "54fd4d50",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitelist\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"freezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unfreezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken.sol\":\"CCKToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CCK/CCKToken.sol\":{\"keccak256\":\"0xdd1416b397209692c3f9c7d54cb81076386719bc5e94fc5e4f04791311f5c768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff07efbd6cfb31bcf794ed59bd89ec26c8cfabe64223d1fe919914ee18ac9de\",\"dweb:/ipfs/QmeAq3ZJtvNqyJ25gpSCLdtibc5wC5diEHG6DEpQMY7wzg\"]},\"contracts/CCK/ERC3643.sol\":{\"keccak256\":\"0x3879899ce81848dea435f7b95b6842b57ad0cfd8707686c14bccfffbd9ddeb85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24bc42cb8bcb9bac7a5fef2794a1659f6afd0e383dba6e3eced021f2168235d9\",\"dweb:/ipfs/QmWrmsMkWxJLqY2T6CiMCZ9ntyHJqcRxyQajjTdHXUCNqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 955,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "whitelist",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 959,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "frozen",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 961,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "mintedAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CCK/ERC3643.sol": {
				"IERC3643": {
					"abi": [
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compliance()": "6290865d",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"onchainID()": "aba63705",
							"paused()": "5c975abb",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/ERC3643.sol\":\"IERC3643\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/ERC3643.sol\":{\"keccak256\":\"0x3879899ce81848dea435f7b95b6842b57ad0cfd8707686c14bccfffbd9ddeb85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24bc42cb8bcb9bac7a5fef2794a1659f6afd0e383dba6e3eced021f2168235d9\",\"dweb:/ipfs/QmWrmsMkWxJLqY2T6CiMCZ9ntyHJqcRxyQajjTdHXUCNqk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CCK/CCKToken.sol:78:30:\n   |\n78 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n   |                              ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2603,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2584
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:58:5:\n   |\n58 |     function version() external view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2012,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 1913
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:62:5:\n   |\n62 |     function identityRegistry() external view override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2159,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2020
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:66:5:\n   |\n66 |     function compliance() external view override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2297,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2167
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:70:5:\n   |\n70 |     function paused() external view override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2393,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2305
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:78:5:\n   |\n78 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2710,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2559
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/CCK/CCKToken.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/CCKToken.sol",
					"exportedSymbols": {
						"CCKToken": [
							1283
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC3643": [
							1325
						],
						"Ownable": [
							147
						]
					},
					"id": 1284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 800,
							"src": "158:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 148,
							"src": "215:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/CCK/ERC3643.sol",
							"file": "contracts/CCK/ERC3643.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 1326,
							"src": "269:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"330:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "330:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "330:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"337:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "337:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "337:7:6"
								},
								{
									"baseName": {
										"id": 943,
										"name": "IERC3643",
										"nameLocations": [
											"346:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "346:8:6"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "346:8:6"
								}
							],
							"canonicalName": "CCKToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1283,
							"linearizedBaseContracts": [
								1283,
								1325,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CCKToken",
							"nameLocation": "318:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 951,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "386:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "362:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "362:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530305f303030",
											"id": 946,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "401:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 949,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 947,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "411:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 948,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "415:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "411:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "401:16:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 955,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "472:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "440:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 954,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "448:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "440:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 953,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "459:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0516650",
									"id": 959,
									"mutability": "mutable",
									"name": "frozen",
									"nameLocation": "533:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "501:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 958,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 956,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "501:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 957,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "520:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d380242",
									"id": 961,
									"mutability": "mutable",
									"name": "mintedAmount",
									"nameLocation": "577:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1283,
									"src": "562:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "707:326:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 976,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "726:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "737:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "726:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "746:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "726:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373207265717569726564",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "749:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															},
															"value": "At least one whitelisted address required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "718:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "718:75:6"
											},
											{
												"body": {
													"id": 1002,
													"nodeType": "Block",
													"src": "902:58:6",
													"statements": [
														{
															"expression": {
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 994,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "917:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 998,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 995,
																			"name": "_whitelist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "927:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 997,
																		"indexExpression": {
																			"id": 996,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "938:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "927:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "917:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "944:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "917:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "917:31:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "874:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 988,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "878:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "889:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "878:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "874:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"initializationExpression": {
													"assignments": [
														984
													],
													"declarations": [
														{
															"constant": false,
															"id": 984,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "867:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1003,
															"src": "859:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 983,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "859:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 986,
													"initialValue": {
														"hexValue": "30",
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "871:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "859:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "897:3:6",
														"subExpression": {
															"id": 991,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "897:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 993,
													"nodeType": "ExpressionStatement",
													"src": "897:3:6"
												},
												"nodeType": "ForStatement",
												"src": "854:106:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "978:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "982:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "978:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "990:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "972:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "972:31:6"
											}
										]
									},
									"id": 1011,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43434b",
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												},
												{
													"hexValue": "43434b",
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "680:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												}
											],
											"id": 969,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 966,
												"name": "ERC20",
												"nameLocations": [
													"667:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "667:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "667:19:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 971,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "695:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "699:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "695:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 973,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 970,
												"name": "Ownable",
												"nameLocations": [
													"687:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "687:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "687:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "655:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "638:27:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 962,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "638:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 963,
													"nodeType": "ArrayTypeName",
													"src": "638:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:29:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:6"
									},
									"scope": 1283,
									"src": "626:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "1130:43:6",
										"statements": [
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1018,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "1141:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1020,
														"indexExpression": {
															"id": 1019,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "1151:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1141:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1141:24:6"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1015,
												"name": "onlyOwner",
												"nameLocations": [
													"1120:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1120:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:9:6"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "1080:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1103:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1095:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1094:16:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:0:6"
									},
									"scope": 1283,
									"src": "1071:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "1275:44:6",
										"statements": [
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1032,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "1286:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"id": 1033,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "1296:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1286:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1306:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1286:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1286:25:6"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1029,
												"name": "onlyOwner",
												"nameLocations": [
													"1265:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1265:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1265:9:6"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "1220:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1248:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1240:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:16:6"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1275:0:6"
									},
									"scope": 1283,
									"src": "1211:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1401:38:6",
										"statements": [
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1046,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1412:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1048,
														"indexExpression": {
															"id": 1047,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "1419:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1412:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1427:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1412:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1412:19:6"
											}
										]
									},
									"functionSelector": "e08ba51a",
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1044,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1043,
												"name": "onlyOwner",
												"nameLocations": [
													"1391:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1391:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1391:9:6"
										}
									],
									"name": "freezeUser",
									"nameLocation": "1357:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1376:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1368:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:14:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1401:0:6"
									},
									"scope": 1283,
									"src": "1348:91:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1523:39:6",
										"statements": [
											{
												"expression": {
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1060,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1534:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1062,
														"indexExpression": {
															"id": 1061,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "1541:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1534:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1549:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1534:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1534:20:6"
											}
										]
									},
									"functionSelector": "cb4b73ab",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1057,
												"name": "onlyOwner",
												"nameLocations": [
													"1513:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1513:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1513:9:6"
										}
									],
									"name": "unfreezeUser",
									"nameLocation": "1477:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1498:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1490:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:14:6"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:6"
									},
									"scope": 1283,
									"src": "1468:94:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "1674:87:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1072,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1692:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1073,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1707:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1692:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1075,
												"nodeType": "Return",
												"src": "1685:34:6"
											}
										]
									},
									"functionSelector": "da0239a6",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingSupply",
									"nameLocation": "1624:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:2:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1665:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:9:6"
									},
									"scope": 1283,
									"src": "1615:146:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1290
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "1866:39:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1892:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CCKToken_$1283",
																"typeString": "contract CCKToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_CCKToken_$1283",
																"typeString": "contract CCKToken"
															}
														],
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1884:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1083,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1884:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1884:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1082,
												"id": 1087,
												"nodeType": "Return",
												"src": "1877:20:6"
											}
										]
									},
									"functionSelector": "aba63705",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "1813:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1079,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1839:8:6"
									},
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:2:6"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1857:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1856:9:6"
									},
									"scope": 1283,
									"src": "1804:101:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1979:33:6",
										"statements": [
											{
												"expression": {
													"hexValue": "312e302e30",
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
														"typeString": "literal_string \"1.0.0\""
													},
													"value": "1.0.0"
												},
												"functionReturnParameters": 1094,
												"id": 1096,
												"nodeType": "Return",
												"src": "1990:14:6"
											}
										]
									},
									"functionSelector": "54fd4d50",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "1922:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1091,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1946:8:6"
									},
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:2:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1964:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1092,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1964:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:15:6"
									},
									"scope": 1283,
									"src": "1913:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1300
									],
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "2089:70:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2115:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2107:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2107:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1108,
												"nodeType": "Return",
												"src": "2100:17:6"
											}
										]
									},
									"functionSelector": "134e18f4",
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "2029:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2062:8:6"
									},
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:2:6"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "2080:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:9:6"
									},
									"scope": 1283,
									"src": "2020:139:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1305
									],
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "2230:67:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2248:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2248:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1120,
												"nodeType": "Return",
												"src": "2241:17:6"
											}
										]
									},
									"functionSelector": "6290865d",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "2176:10:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1112,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2203:8:6"
									},
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:2:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2221:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:9:6"
									},
									"scope": 1283,
									"src": "2167:130:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1310
									],
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2361:32:6",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2379:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1127,
												"id": 1129,
												"nodeType": "Return",
												"src": "2372:12:6"
											}
										]
									},
									"functionSelector": "5c975abb",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2314:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2337:8:6"
									},
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2320:2:6"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2355:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2355:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:6:6"
									},
									"scope": 1283,
									"src": "2305:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1317
									],
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "2478:73:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1139,
														"name": "frozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2496:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1141,
													"indexExpression": {
														"id": 1140,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2503:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2496:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1142,
												"nodeType": "Return",
												"src": "2489:26:6"
											}
										]
									},
									"functionSelector": "e5839836",
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "2410:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2454:8:6"
									},
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2427:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2419:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:21:6"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "2472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:6:6"
									},
									"scope": 1283,
									"src": "2401:150:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1324
									],
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2646:64:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2664:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1151,
												"id": 1153,
												"nodeType": "Return",
												"src": "2657:8:6"
											}
										]
									},
									"functionSelector": "158b1a57",
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "2568:15:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2619:8:6"
									},
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2592:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2584:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:21:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2637:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2636:9:6"
									},
									"scope": 1283,
									"src": "2559:151:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "2874:201:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2893:19:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1166,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "2894:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1169,
																"indexExpression": {
																	"expression": {
																		"id": 1167,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2901:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2905:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2901:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2894:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2914:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2885:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1175,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "2952:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1180,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "2978:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2970:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1178,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "2970:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2970:15:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2962:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1176,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2962:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2962:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2952:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2944:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2944:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2944:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "3049:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "3060:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1187,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3034:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1283_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3040:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3034:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1192,
												"nodeType": "Return",
												"src": "3027:40:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2799:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2850:8:6"
									},
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2816:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2808:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2835:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2827:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:35:6"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "2868:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:6:6"
									},
									"scope": 1283,
									"src": "2790:285:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "3220:209:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3239:15:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1207,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "3240:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1209,
																"indexExpression": {
																	"id": 1208,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "3247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3240:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3256:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3231:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "3231:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "3294:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1220,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "3320:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3312:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1218,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "3312:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3312:15:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3304:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1216,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3304:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3304:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3294:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3330:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3286:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "3286:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1229,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3395:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "3403:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3414:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1227,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3376:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1283_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3382:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "3376:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3376:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1233,
												"nodeType": "Return",
												"src": "3369:52:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3125:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3196:8:6"
									},
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3146:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3138:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3162:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3154:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3181:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3173:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3137:51:6"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3214:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3214:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:6:6"
									},
									"scope": 1283,
									"src": "3116:313:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "3540:203:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1245,
																"name": "whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "3559:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1247,
															"indexExpression": {
																"id": 1246,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "3569:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3559:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077686974656c6973746564",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3574:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															},
															"value": "Not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3551:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3551:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3551:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1252,
																	"name": "mintedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "3611:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "3626:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3611:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1255,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "3636:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3611:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20737570706c79206578636565646564",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3650:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															},
															"value": "Total supply exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3603:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3603:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "3603:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3691:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3695:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3685:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "3685:17:6"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3713:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1266,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3729:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3713:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "3713:22:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1241,
												"name": "onlyOwner",
												"nameLocations": [
													"3530:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3530:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3530:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "3488:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3501:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3493:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3513:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3505:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:28:6"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3540:0:6"
									},
									"scope": 1283,
									"src": "3479:264:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "3862:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1278,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "3890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1277,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1280,
												"nodeType": "Return",
												"src": "3873:22:6"
											}
										]
									},
									"functionSelector": "12cae7af",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUser",
									"nameLocation": "3802:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3824:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3816:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3815:14:6"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3853:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3852:9:6"
									},
									"scope": 1283,
									"src": "3793:143:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1284,
							"src": "309:3630:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:3906:6"
				},
				"id": 6
			},
			"contracts/CCK/ERC3643.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/ERC3643.sol",
					"exportedSymbols": {
						"IERC3643": [
							1325
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1285,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3643",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1325,
							"linearizedBaseContracts": [
								1325
							],
							"name": "IERC3643",
							"nameLocation": "70:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "aba63705",
									"id": 1290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "95:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "130:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "129:9:7"
									},
									"scope": 1325,
									"src": "86:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "154:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:2:7"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "187:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "187:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:15:7"
									},
									"scope": 1325,
									"src": "145:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "134e18f4",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "217:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:7"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "259:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:9:7"
									},
									"scope": 1325,
									"src": "208:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6290865d",
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "283:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:7"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "319:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:9:7"
									},
									"scope": 1325,
									"src": "274:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c975abb",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "343:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:6:7"
									},
									"scope": 1325,
									"src": "334:47:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e5839836",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "396:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "413:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "405:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:21:7"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "449:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "449:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:6:7"
									},
									"scope": 1325,
									"src": "387:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "158b1a57",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "470:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "494:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "486:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "485:21:7"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "530:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:9:7"
									},
									"scope": 1325,
									"src": "461:78:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1326,
							"src": "60:482:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:509:7"
				},
				"id": 7
			}
		}
	}
}