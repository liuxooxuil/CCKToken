{
	"id": "fdaf6a3cbe6a95b5ee399e2bd1ad8631",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCK/CCKToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/// 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\r\n/// 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\r\n\r\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\"; \r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"contracts/CCK/ERC3643.sol\";\r\n \r\ncontract CCKToken is ERC20, Ownable, IERC3643 {\r\n\r\n    \r\n    // uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18; // 总供应量\r\n\r\n    uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18; // 总供应量\r\n    mapping(address => bool) public whitelist; // 白名单\r\n    mapping(address => bool) public frozen; // 冻结状态\r\n    address public uniswapPool; // Uniswap V3 池地址\r\n    uint256 public mintedAmount; // 已发行的代币数量\r\n\r\n    constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {\r\n        require(_whitelist.length > 0, \"At least one whitelisted address required\");\r\n        \r\n        // 批量添加白名单成员\r\n        for (uint256 i = 0; i < _whitelist.length; i++) {\r\n            whitelist[_whitelist[i]] = true;\r\n        }\r\n\r\n        _mint(msg.sender, TOTAL_SUPPLY); // 初始发行总量\r\n    }\r\n\r\n    // 添加白名单成员\r\n    function addToWhitelist(address member) external onlyOwner {\r\n        whitelist[member] = true;\r\n    }\r\n\r\n    // 移除白名单成员\r\n    function removeFromWhitelist(address member) external onlyOwner {\r\n        whitelist[member] = false;\r\n    }\r\n\r\n    // 冻结用户\r\n    function freezeUser(address user) external onlyOwner {\r\n        frozen[user] = true;\r\n    }\r\n\r\n    // 解冻用户\r\n    function unfreezeUser(address user) external onlyOwner {\r\n        frozen[user] = false;\r\n    }\r\n\r\n    // 返回可铸造的剩余代币数量\r\n    function remainingSupply() external view returns (uint256) {\r\n        return TOTAL_SUPPLY - mintedAmount; // 计算剩余的可铸造数量\r\n    }\r\n\r\n    // ERC-3643协议方法实现\r\n    function onchainID() external view override returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    function version() external view override returns (string memory) {\r\n        return \"1.0.0\";\r\n    }\r\n\r\n    function identityRegistry() external view override returns (address) {\r\n        return address(0); // 返回身份注册合约地址\r\n    }\r\n\r\n    function compliance() external view override returns (address) {\r\n        return address(0); // 返回合规性合约地址\r\n    }\r\n\r\n    function paused() external view override returns (bool) {\r\n        return false; \r\n    }\r\n\r\n    function isFrozen(address userAddress) external view override returns (bool) {\r\n        return frozen[userAddress]; // 返回用户冻结状态\r\n    }\r\n\r\n    function getFrozenTokens(address userAddress) external view override returns (uint256) {\r\n        return 0; // 目前没有冻结的代币逻辑\r\n    }\r\n\r\n    // 重写转账函数，确保转账金额为整数且不被冻结\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        require(!frozen[msg.sender], \"Sender is frozen\");\r\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    // 重写转账授权函数\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        require(!frozen[sender], \"Sender is frozen\");\r\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    // 发行代币，需在白名单内\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        require(whitelist[to], \"Not whitelisted\");\r\n        require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\");\r\n        _mint(to, amount);\r\n        mintedAmount += amount;\r\n    }\r\n\r\n      // 重写 ERC20 的 decimals 方法，设置为 0，表示没有小数点\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 0; // 没有小数位\r\n    }\r\n    \r\n    // 查看用户持有的代币数量\r\n    function balanceOfUser(address user) external view returns (uint256) {\r\n        return balanceOf(user); // 调用ERC20的balanceOf方法\r\n    }\r\n\r\n        // 获取当前价格\r\n    function getCurrentPrice() external view returns (uint256) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool);\r\n        (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\r\n        // 价格计算：sqrtPriceX96 转换为价格\r\n        uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** (192)); // 计算实际价格\r\n        return price; // 返回当前价格\r\n    }\r\n}"
			},
			"contracts/CCK/ERC3643.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IERC3643\r\n * @dev Interface for on-chain identity management and compliance.\r\n */\r\ninterface IERC3643 {\r\n    /**\r\n     * @dev Returns the on-chain ID of the contract.\r\n     * @return address The address of the contract.\r\n     */\r\n    function onchainID() external view returns (address);\r\n    \r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return string The version string.\r\n     */\r\n    function version() external view returns (string memory);\r\n    \r\n    /**\r\n     * @dev Returns the identity registry address.\r\n     * @return address The identity registry address.\r\n     */\r\n    function identityRegistry() external view returns (address);\r\n    \r\n    /**\r\n     * @dev Returns the compliance address.\r\n     * @return address The compliance address.\r\n     */\r\n    function compliance() external view returns (address);\r\n    \r\n    /**\r\n     * @dev Checks if the contract is paused.\r\n     * @return bool Indicates if the contract is paused.\r\n     */\r\n    function paused() external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Checks if a user is frozen.\r\n     * @param userAddress Address of the user to check.\r\n     * @return bool Indicates if the user is frozen.\r\n     */\r\n    function isFrozen(address userAddress) external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Returns the number of frozen tokens for a user.\r\n     * @param userAddress Address of the user to check.\r\n     * @return uint256 Amount of frozen tokens.\r\n     */\r\n    function getFrozenTokens(address userAddress) external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/CCK/CCKToken.sol": {
				"CCKToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_whitelist",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOfUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "freezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "frozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unfreezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/CCKToken.sol\":378:4777  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCK/CCKToken.sol\":843:1250  constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCK/CCKToken.sol\":912:922  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":963:964  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":943:953  _whitelist */\n  dup2\n    /* \"contracts/CCK/CCKToken.sol\":943:960  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CCKToken.sol\":943:964  _whitelist.length > 0 */\n  gt\n    /* \"contracts/CCK/CCKToken.sol\":935:1010  require(_whitelist.length > 0, \"At least one whitelisted address required\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CCK/CCKToken.sol\":1076:1085  uint256 i */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":1088:1089  0 */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":1076:1089  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":1071:1177  for (uint256 i = 0; i < _whitelist.length; i++) {... */\ntag_21:\n    /* \"contracts/CCK/CCKToken.sol\":1095:1105  _whitelist */\n  dup2\n    /* \"contracts/CCK/CCKToken.sol\":1095:1112  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CCKToken.sol\":1091:1092  i */\n  dup2\n    /* \"contracts/CCK/CCKToken.sol\":1091:1112  i < _whitelist.length */\n  lt\n    /* \"contracts/CCK/CCKToken.sol\":1071:1177  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  iszero\n  tag_22\n  jumpi\n    /* \"contracts/CCK/CCKToken.sol\":1161:1165  true */\n  0x01\n    /* \"contracts/CCK/CCKToken.sol\":1134:1143  whitelist */\n  0x06\n    /* \"contracts/CCK/CCKToken.sol\":1134:1158  whitelist[_whitelist[i]] */\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":1144:1154  _whitelist */\n  dup5\n    /* \"contracts/CCK/CCKToken.sol\":1155:1156  i */\n  dup5\n    /* \"contracts/CCK/CCKToken.sol\":1144:1157  _whitelist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_24\n  jumpi\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\ntag_24:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CCK/CCKToken.sol\":1134:1158  whitelist[_whitelist[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/CCK/CCKToken.sol\":1134:1165  whitelist[_whitelist[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":1114:1117  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":1071:1177  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  jump(tag_21)\ntag_22:\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":1189:1220  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_27\n    /* \"contracts/CCK/CCKToken.sol\":1195:1205  msg.sender */\n  caller\n    /* \"contracts/CCK/CCKToken.sol\":561:577  500_000 * 10**18 */\n  0x69e10de76676d0800000\n    /* \"contracts/CCK/CCKToken.sol\":1189:1194  _mint */\n  shl(0x20, tag_28)\n    /* \"contracts/CCK/CCKToken.sol\":1189:1220  _mint(msg.sender, TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/CCK/CCKToken.sol\":843:1250  constructor(address[] memory _whitelist) ERC20(\"CCK\", \"CCK\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/CCK/CCKToken.sol\":378:4777  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_40)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_45)\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_48:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_49:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_50:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_51:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_52:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_53:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_54:\n    /* \"#utility.yul\":834:861   */\n  tag_97\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_99\n  tag_53\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":907:995   */\ntag_98:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_55:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_101\n  tag_48\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_102\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_54\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_56:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_105\n  tag_53\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1326:1382   */\ntag_104:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_57:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  0x00\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_58:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_59:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_109\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_60:\n    /* \"#utility.yul\":1920:1944   */\n  tag_111\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  0x00\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_112:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_61:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_114\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_60\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_62:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_116\n    /* \"#utility.yul\":2289:2353   */\n  tag_117\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_56\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2273:2354   */\n  tag_55\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_119\n  tag_57\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2505:2627   */\ntag_118:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_120:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_123\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_63:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_126\n  tag_51\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2994:3116   */\ntag_125:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_127\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_62\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3841   */\ntag_3:\n    /* \"#utility.yul\":3382:3388   */\n  0x00\n    /* \"#utility.yul\":3431:3433   */\n  0x20\n    /* \"#utility.yul\":3419:3428   */\n  dup3\n    /* \"#utility.yul\":3410:3417   */\n  dup5\n    /* \"#utility.yul\":3406:3429   */\n  sub\n    /* \"#utility.yul\":3402:3434   */\n  slt\n    /* \"#utility.yul\":3399:3518   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":3437:3516   */\n  tag_130\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3399:3518   */\ntag_129:\n    /* \"#utility.yul\":3578:3579   */\n  0x00\n    /* \"#utility.yul\":3567:3576   */\n  dup3\n    /* \"#utility.yul\":3563:3580   */\n  add\n    /* \"#utility.yul\":3557:3581   */\n  mload\n    /* \"#utility.yul\":3608:3626   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3600:3606   */\n  dup2\n    /* \"#utility.yul\":3597:3627   */\n  gt\n    /* \"#utility.yul\":3594:3711   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3630:3709   */\n  tag_132\n  tag_50\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3594:3711   */\ntag_131:\n    /* \"#utility.yul\":3735:3824   */\n  tag_133\n    /* \"#utility.yul\":3816:3823   */\n  dup5\n    /* \"#utility.yul\":3807:3813   */\n  dup3\n    /* \"#utility.yul\":3796:3805   */\n  dup6\n    /* \"#utility.yul\":3792:3814   */\n  add\n    /* \"#utility.yul\":3735:3824   */\n  tag_63\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3725:3824   */\n  swap2\n  pop\n    /* \"#utility.yul\":3528:3834   */\n  pop\n    /* \"#utility.yul\":3287:3841   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3847:3946   */\ntag_64:\n    /* \"#utility.yul\":3899:3905   */\n  0x00\n    /* \"#utility.yul\":3933:3938   */\n  dup2\n    /* \"#utility.yul\":3927:3939   */\n  mload\n    /* \"#utility.yul\":3917:3939   */\n  swap1\n  pop\n    /* \"#utility.yul\":3847:3946   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3952:4132   */\ntag_65:\n    /* \"#utility.yul\":4000:4077   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3997:3998   */\n  0x00\n    /* \"#utility.yul\":3990:4078   */\n  mstore\n    /* \"#utility.yul\":4097:4101   */\n  0x22\n    /* \"#utility.yul\":4094:4095   */\n  0x04\n    /* \"#utility.yul\":4087:4102   */\n  mstore\n    /* \"#utility.yul\":4121:4125   */\n  0x24\n    /* \"#utility.yul\":4118:4119   */\n  0x00\n    /* \"#utility.yul\":4111:4126   */\n  revert\n    /* \"#utility.yul\":4138:4458   */\ntag_66:\n    /* \"#utility.yul\":4182:4188   */\n  0x00\n    /* \"#utility.yul\":4219:4220   */\n  0x02\n    /* \"#utility.yul\":4213:4217   */\n  dup3\n    /* \"#utility.yul\":4209:4221   */\n  div\n    /* \"#utility.yul\":4199:4221   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4267   */\n  0x01\n    /* \"#utility.yul\":4260:4264   */\n  dup3\n    /* \"#utility.yul\":4256:4268   */\n  and\n    /* \"#utility.yul\":4287:4305   */\n  dup1\n    /* \"#utility.yul\":4277:4358   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4343:4347   */\n  0x7f\n    /* \"#utility.yul\":4335:4341   */\n  dup3\n    /* \"#utility.yul\":4331:4348   */\n  and\n    /* \"#utility.yul\":4321:4348   */\n  swap2\n  pop\n    /* \"#utility.yul\":4277:4358   */\ntag_137:\n    /* \"#utility.yul\":4405:4407   */\n  0x20\n    /* \"#utility.yul\":4397:4403   */\n  dup3\n    /* \"#utility.yul\":4394:4408   */\n  lt\n    /* \"#utility.yul\":4374:4392   */\n  dup2\n    /* \"#utility.yul\":4371:4409   */\n  sub\n    /* \"#utility.yul\":4368:4452   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4424:4442   */\n  tag_139\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4368:4452   */\ntag_138:\n    /* \"#utility.yul\":4189:4458   */\n  pop\n    /* \"#utility.yul\":4138:4458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4464:4605   */\ntag_67:\n    /* \"#utility.yul\":4513:4517   */\n  0x00\n    /* \"#utility.yul\":4536:4539   */\n  dup2\n    /* \"#utility.yul\":4528:4539   */\n  swap1\n  pop\n    /* \"#utility.yul\":4559:4562   */\n  dup2\n    /* \"#utility.yul\":4556:4557   */\n  0x00\n    /* \"#utility.yul\":4549:4563   */\n  mstore\n    /* \"#utility.yul\":4593:4597   */\n  0x20\n    /* \"#utility.yul\":4590:4591   */\n  0x00\n    /* \"#utility.yul\":4580:4598   */\n  keccak256\n    /* \"#utility.yul\":4572:4598   */\n  swap1\n  pop\n    /* \"#utility.yul\":4464:4605   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4611:4704   */\ntag_68:\n    /* \"#utility.yul\":4648:4654   */\n  0x00\n    /* \"#utility.yul\":4695:4697   */\n  0x20\n    /* \"#utility.yul\":4690:4692   */\n  0x1f\n    /* \"#utility.yul\":4683:4688   */\n  dup4\n    /* \"#utility.yul\":4679:4693   */\n  add\n    /* \"#utility.yul\":4675:4698   */\n  div\n    /* \"#utility.yul\":4665:4698   */\n  swap1\n  pop\n    /* \"#utility.yul\":4611:4704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4817   */\ntag_69:\n    /* \"#utility.yul\":4754:4762   */\n  0x00\n    /* \"#utility.yul\":4804:4809   */\n  dup3\n    /* \"#utility.yul\":4798:4802   */\n  dup3\n    /* \"#utility.yul\":4794:4810   */\n  shl\n    /* \"#utility.yul\":4773:4810   */\n  swap1\n  pop\n    /* \"#utility.yul\":4710:4817   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4823:5216   */\ntag_70:\n    /* \"#utility.yul\":4892:4898   */\n  0x00\n    /* \"#utility.yul\":4942:4943   */\n  0x08\n    /* \"#utility.yul\":4930:4940   */\n  dup4\n    /* \"#utility.yul\":4926:4944   */\n  mul\n    /* \"#utility.yul\":4965:5062   */\n  tag_144\n    /* \"#utility.yul\":4995:5061   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4984:4993   */\n  dup3\n    /* \"#utility.yul\":4965:5062   */\n  tag_69\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5083:5122   */\n  tag_145\n    /* \"#utility.yul\":5113:5121   */\n  dup7\n    /* \"#utility.yul\":5102:5111   */\n  dup4\n    /* \"#utility.yul\":5083:5122   */\n  tag_69\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5071:5122   */\n  swap6\n  pop\n    /* \"#utility.yul\":5155:5159   */\n  dup1\n    /* \"#utility.yul\":5151:5160   */\n  not\n    /* \"#utility.yul\":5144:5149   */\n  dup5\n    /* \"#utility.yul\":5140:5161   */\n  and\n    /* \"#utility.yul\":5131:5161   */\n  swap4\n  pop\n    /* \"#utility.yul\":5204:5208   */\n  dup1\n    /* \"#utility.yul\":5194:5202   */\n  dup7\n    /* \"#utility.yul\":5190:5209   */\n  and\n    /* \"#utility.yul\":5183:5188   */\n  dup5\n    /* \"#utility.yul\":5180:5210   */\n  or\n    /* \"#utility.yul\":5170:5210   */\n  swap3\n  pop\n    /* \"#utility.yul\":4899:5216   */\n  pop\n  pop\n    /* \"#utility.yul\":4823:5216   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5222:5299   */\ntag_71:\n    /* \"#utility.yul\":5259:5266   */\n  0x00\n    /* \"#utility.yul\":5288:5293   */\n  dup2\n    /* \"#utility.yul\":5277:5293   */\n  swap1\n  pop\n    /* \"#utility.yul\":5222:5299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5305:5365   */\ntag_72:\n    /* \"#utility.yul\":5333:5336   */\n  0x00\n    /* \"#utility.yul\":5354:5359   */\n  dup2\n    /* \"#utility.yul\":5347:5359   */\n  swap1\n  pop\n    /* \"#utility.yul\":5305:5365   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5371:5513   */\ntag_73:\n    /* \"#utility.yul\":5421:5430   */\n  0x00\n    /* \"#utility.yul\":5454:5507   */\n  tag_149\n    /* \"#utility.yul\":5472:5506   */\n  tag_150\n    /* \"#utility.yul\":5481:5505   */\n  tag_151\n    /* \"#utility.yul\":5499:5504   */\n  dup5\n    /* \"#utility.yul\":5481:5505   */\n  tag_71\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5472:5506   */\n  tag_72\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5454:5507   */\n  tag_71\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5441:5507   */\n  swap1\n  pop\n    /* \"#utility.yul\":5371:5513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5519:5594   */\ntag_74:\n    /* \"#utility.yul\":5562:5565   */\n  0x00\n    /* \"#utility.yul\":5583:5588   */\n  dup2\n    /* \"#utility.yul\":5576:5588   */\n  swap1\n  pop\n    /* \"#utility.yul\":5519:5594   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5600:5869   */\ntag_75:\n    /* \"#utility.yul\":5710:5749   */\n  tag_154\n    /* \"#utility.yul\":5741:5748   */\n  dup4\n    /* \"#utility.yul\":5710:5749   */\n  tag_73\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5771:5862   */\n  tag_155\n    /* \"#utility.yul\":5820:5861   */\n  tag_156\n    /* \"#utility.yul\":5844:5860   */\n  dup3\n    /* \"#utility.yul\":5820:5861   */\n  tag_74\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5812:5818   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5799:5810   */\n  sload\n    /* \"#utility.yul\":5771:5862   */\n  tag_70\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5765:5769   */\n  dup3\n    /* \"#utility.yul\":5758:5863   */\n  sstore\n    /* \"#utility.yul\":5676:5869   */\n  pop\n    /* \"#utility.yul\":5600:5869   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:5948   */\ntag_76:\n    /* \"#utility.yul\":5920:5923   */\n  0x00\n    /* \"#utility.yul\":5941:5942   */\n  0x00\n    /* \"#utility.yul\":5934:5942   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:5948   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5954:6143   */\ntag_77:\n    /* \"#utility.yul\":6031:6063   */\n  tag_159\n  tag_76\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6072:6137   */\n  tag_160\n    /* \"#utility.yul\":6130:6136   */\n  dup2\n    /* \"#utility.yul\":6122:6128   */\n  dup5\n    /* \"#utility.yul\":6116:6120   */\n  dup5\n    /* \"#utility.yul\":6072:6137   */\n  tag_75\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6007:6143   */\n  pop\n    /* \"#utility.yul\":5954:6143   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6149:6335   */\ntag_78:\n    /* \"#utility.yul\":6209:6329   */\ntag_162:\n    /* \"#utility.yul\":6226:6229   */\n  dup2\n    /* \"#utility.yul\":6219:6224   */\n  dup2\n    /* \"#utility.yul\":6216:6230   */\n  lt\n    /* \"#utility.yul\":6209:6329   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":6280:6319   */\n  tag_165\n    /* \"#utility.yul\":6317:6318   */\n  0x00\n    /* \"#utility.yul\":6310:6315   */\n  dup3\n    /* \"#utility.yul\":6280:6319   */\n  tag_77\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6253:6254   */\n  0x01\n    /* \"#utility.yul\":6246:6251   */\n  dup2\n    /* \"#utility.yul\":6242:6255   */\n  add\n    /* \"#utility.yul\":6233:6255   */\n  swap1\n  pop\n    /* \"#utility.yul\":6209:6329   */\n  jump(tag_162)\ntag_164:\n    /* \"#utility.yul\":6149:6335   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6341:6884   */\ntag_79:\n    /* \"#utility.yul\":6442:6444   */\n  0x1f\n    /* \"#utility.yul\":6437:6440   */\n  dup3\n    /* \"#utility.yul\":6434:6445   */\n  gt\n    /* \"#utility.yul\":6431:6877   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6476:6514   */\n  tag_168\n    /* \"#utility.yul\":6508:6513   */\n  dup2\n    /* \"#utility.yul\":6476:6514   */\n  tag_67\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6560:6589   */\n  tag_169\n    /* \"#utility.yul\":6578:6588   */\n  dup5\n    /* \"#utility.yul\":6560:6589   */\n  tag_68\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6550:6558   */\n  dup2\n    /* \"#utility.yul\":6546:6590   */\n  add\n    /* \"#utility.yul\":6743:6745   */\n  0x20\n    /* \"#utility.yul\":6731:6741   */\n  dup6\n    /* \"#utility.yul\":6728:6746   */\n  lt\n    /* \"#utility.yul\":6725:6774   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6764:6772   */\n  dup2\n    /* \"#utility.yul\":6749:6772   */\n  swap1\n  pop\n    /* \"#utility.yul\":6725:6774   */\ntag_170:\n    /* \"#utility.yul\":6787:6867   */\n  tag_171\n    /* \"#utility.yul\":6843:6865   */\n  tag_172\n    /* \"#utility.yul\":6861:6864   */\n  dup6\n    /* \"#utility.yul\":6843:6865   */\n  tag_68\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6833:6841   */\n  dup4\n    /* \"#utility.yul\":6829:6866   */\n  add\n    /* \"#utility.yul\":6816:6827   */\n  dup3\n    /* \"#utility.yul\":6787:6867   */\n  tag_78\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6446:6877   */\n  pop\n  pop\n    /* \"#utility.yul\":6431:6877   */\ntag_167:\n    /* \"#utility.yul\":6341:6884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6890:7007   */\ntag_80:\n    /* \"#utility.yul\":6944:6952   */\n  0x00\n    /* \"#utility.yul\":6994:6999   */\n  dup3\n    /* \"#utility.yul\":6988:6992   */\n  dup3\n    /* \"#utility.yul\":6984:7000   */\n  shr\n    /* \"#utility.yul\":6963:7000   */\n  swap1\n  pop\n    /* \"#utility.yul\":6890:7007   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7013:7182   */\ntag_81:\n    /* \"#utility.yul\":7057:7063   */\n  0x00\n    /* \"#utility.yul\":7090:7141   */\n  tag_175\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7134:7140   */\n  not\n    /* \"#utility.yul\":7126:7131   */\n  dup5\n    /* \"#utility.yul\":7123:7124   */\n  0x08\n    /* \"#utility.yul\":7119:7132   */\n  mul\n    /* \"#utility.yul\":7090:7141   */\n  tag_80\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7086:7142   */\n  not\n    /* \"#utility.yul\":7171:7175   */\n  dup1\n    /* \"#utility.yul\":7165:7169   */\n  dup4\n    /* \"#utility.yul\":7161:7176   */\n  and\n    /* \"#utility.yul\":7151:7176   */\n  swap2\n  pop\n    /* \"#utility.yul\":7064:7182   */\n  pop\n    /* \"#utility.yul\":7013:7182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7187:7482   */\ntag_82:\n    /* \"#utility.yul\":7263:7267   */\n  0x00\n    /* \"#utility.yul\":7409:7438   */\n  tag_177\n    /* \"#utility.yul\":7434:7437   */\n  dup4\n    /* \"#utility.yul\":7428:7432   */\n  dup4\n    /* \"#utility.yul\":7409:7438   */\n  tag_81\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7401:7438   */\n  swap2\n  pop\n    /* \"#utility.yul\":7471:7474   */\n  dup3\n    /* \"#utility.yul\":7468:7469   */\n  0x02\n    /* \"#utility.yul\":7464:7475   */\n  mul\n    /* \"#utility.yul\":7458:7462   */\n  dup3\n    /* \"#utility.yul\":7455:7476   */\n  or\n    /* \"#utility.yul\":7447:7476   */\n  swap1\n  pop\n    /* \"#utility.yul\":7187:7482   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7487:8882   */\ntag_9:\n    /* \"#utility.yul\":7604:7641   */\n  tag_179\n    /* \"#utility.yul\":7637:7640   */\n  dup3\n    /* \"#utility.yul\":7604:7641   */\n  tag_64\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7706:7724   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7698:7704   */\n  dup2\n    /* \"#utility.yul\":7695:7725   */\n  gt\n    /* \"#utility.yul\":7692:7748   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7728:7746   */\n  tag_181\n  tag_53\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7692:7748   */\ntag_180:\n    /* \"#utility.yul\":7772:7810   */\n  tag_182\n    /* \"#utility.yul\":7804:7808   */\n  dup3\n    /* \"#utility.yul\":7798:7809   */\n  sload\n    /* \"#utility.yul\":7772:7810   */\n  tag_66\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7857:7924   */\n  tag_183\n    /* \"#utility.yul\":7917:7923   */\n  dup3\n    /* \"#utility.yul\":7909:7915   */\n  dup3\n    /* \"#utility.yul\":7903:7907   */\n  dup6\n    /* \"#utility.yul\":7857:7924   */\n  tag_79\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7951:7952   */\n  0x00\n    /* \"#utility.yul\":7975:7979   */\n  0x20\n    /* \"#utility.yul\":7962:7979   */\n  swap1\n  pop\n    /* \"#utility.yul\":8007:8009   */\n  0x1f\n    /* \"#utility.yul\":7999:8005   */\n  dup4\n    /* \"#utility.yul\":7996:8010   */\n  gt\n    /* \"#utility.yul\":8024:8025   */\n  0x01\n    /* \"#utility.yul\":8019:8637   */\n  dup2\n  eq\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8681:8682   */\n  0x00\n    /* \"#utility.yul\":8698:8704   */\n  dup5\n    /* \"#utility.yul\":8695:8772   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8747:8756   */\n  dup3\n    /* \"#utility.yul\":8742:8745   */\n  dup8\n    /* \"#utility.yul\":8738:8757   */\n  add\n    /* \"#utility.yul\":8732:8758   */\n  mload\n    /* \"#utility.yul\":8723:8758   */\n  swap1\n  pop\n    /* \"#utility.yul\":8695:8772   */\ntag_186:\n    /* \"#utility.yul\":8798:8865   */\n  tag_187\n    /* \"#utility.yul\":8858:8864   */\n  dup6\n    /* \"#utility.yul\":8851:8856   */\n  dup3\n    /* \"#utility.yul\":8798:8865   */\n  tag_82\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":8792:8796   */\n  dup7\n    /* \"#utility.yul\":8785:8866   */\n  sstore\n    /* \"#utility.yul\":8654:8876   */\n  pop\n    /* \"#utility.yul\":7989:8876   */\n  jump(tag_184)\n    /* \"#utility.yul\":8019:8637   */\ntag_185:\n    /* \"#utility.yul\":8071:8075   */\n  0x1f\n    /* \"#utility.yul\":8067:8076   */\n  not\n    /* \"#utility.yul\":8059:8065   */\n  dup5\n    /* \"#utility.yul\":8055:8077   */\n  and\n    /* \"#utility.yul\":8105:8142   */\n  tag_188\n    /* \"#utility.yul\":8137:8141   */\n  dup7\n    /* \"#utility.yul\":8105:8142   */\n  tag_67\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8164:8165   */\n  0x00\n    /* \"#utility.yul\":8178:8386   */\ntag_189:\n    /* \"#utility.yul\":8192:8199   */\n  dup3\n    /* \"#utility.yul\":8189:8190   */\n  dup2\n    /* \"#utility.yul\":8186:8200   */\n  lt\n    /* \"#utility.yul\":8178:8386   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8271:8280   */\n  dup5\n    /* \"#utility.yul\":8266:8269   */\n  dup10\n    /* \"#utility.yul\":8262:8281   */\n  add\n    /* \"#utility.yul\":8256:8282   */\n  mload\n    /* \"#utility.yul\":8248:8254   */\n  dup3\n    /* \"#utility.yul\":8241:8283   */\n  sstore\n    /* \"#utility.yul\":8322:8323   */\n  0x01\n    /* \"#utility.yul\":8314:8320   */\n  dup3\n    /* \"#utility.yul\":8310:8324   */\n  add\n    /* \"#utility.yul\":8300:8324   */\n  swap2\n  pop\n    /* \"#utility.yul\":8369:8371   */\n  0x20\n    /* \"#utility.yul\":8358:8367   */\n  dup6\n    /* \"#utility.yul\":8354:8372   */\n  add\n    /* \"#utility.yul\":8341:8372   */\n  swap5\n  pop\n    /* \"#utility.yul\":8215:8219   */\n  0x20\n    /* \"#utility.yul\":8212:8213   */\n  dup2\n    /* \"#utility.yul\":8208:8220   */\n  add\n    /* \"#utility.yul\":8203:8220   */\n  swap1\n  pop\n    /* \"#utility.yul\":8178:8386   */\n  jump(tag_189)\ntag_191:\n    /* \"#utility.yul\":8414:8420   */\n  dup7\n    /* \"#utility.yul\":8405:8412   */\n  dup4\n    /* \"#utility.yul\":8402:8421   */\n  lt\n    /* \"#utility.yul\":8399:8578   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8472:8481   */\n  dup5\n    /* \"#utility.yul\":8467:8470   */\n  dup10\n    /* \"#utility.yul\":8463:8482   */\n  add\n    /* \"#utility.yul\":8457:8483   */\n  mload\n    /* \"#utility.yul\":8515:8563   */\n  tag_193\n    /* \"#utility.yul\":8557:8561   */\n  0x1f\n    /* \"#utility.yul\":8549:8555   */\n  dup10\n    /* \"#utility.yul\":8545:8562   */\n  and\n    /* \"#utility.yul\":8534:8543   */\n  dup3\n    /* \"#utility.yul\":8515:8563   */\n  tag_81\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8507:8513   */\n  dup4\n    /* \"#utility.yul\":8500:8564   */\n  sstore\n    /* \"#utility.yul\":8422:8578   */\n  pop\n    /* \"#utility.yul\":8399:8578   */\ntag_192:\n    /* \"#utility.yul\":8624:8625   */\n  0x01\n    /* \"#utility.yul\":8620:8621   */\n  0x02\n    /* \"#utility.yul\":8612:8618   */\n  dup9\n    /* \"#utility.yul\":8608:8622   */\n  mul\n    /* \"#utility.yul\":8604:8626   */\n  add\n    /* \"#utility.yul\":8598:8602   */\n  dup9\n    /* \"#utility.yul\":8591:8627   */\n  sstore\n    /* \"#utility.yul\":8026:8637   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7989:8876   */\ntag_184:\n  pop\n    /* \"#utility.yul\":7579:8882   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7487:8882   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8888:9006   */\ntag_83:\n    /* \"#utility.yul\":8975:8999   */\n  tag_195\n    /* \"#utility.yul\":8993:8998   */\n  dup2\n    /* \"#utility.yul\":8975:8999   */\n  tag_59\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":8970:8973   */\n  dup3\n    /* \"#utility.yul\":8963:9000   */\n  mstore\n    /* \"#utility.yul\":8888:9006   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9012:9234   */\ntag_14:\n    /* \"#utility.yul\":9105:9109   */\n  0x00\n    /* \"#utility.yul\":9143:9145   */\n  0x20\n    /* \"#utility.yul\":9132:9141   */\n  dup3\n    /* \"#utility.yul\":9128:9146   */\n  add\n    /* \"#utility.yul\":9120:9146   */\n  swap1\n  pop\n    /* \"#utility.yul\":9156:9227   */\n  tag_197\n    /* \"#utility.yul\":9224:9225   */\n  0x00\n    /* \"#utility.yul\":9213:9222   */\n  dup4\n    /* \"#utility.yul\":9209:9226   */\n  add\n    /* \"#utility.yul\":9200:9206   */\n  dup5\n    /* \"#utility.yul\":9156:9227   */\n  tag_83\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9012:9234   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9240:9409   */\ntag_84:\n    /* \"#utility.yul\":9324:9335   */\n  0x00\n    /* \"#utility.yul\":9358:9364   */\n  dup3\n    /* \"#utility.yul\":9353:9356   */\n  dup3\n    /* \"#utility.yul\":9346:9365   */\n  mstore\n    /* \"#utility.yul\":9398:9402   */\n  0x20\n    /* \"#utility.yul\":9393:9396   */\n  dup3\n    /* \"#utility.yul\":9389:9403   */\n  add\n    /* \"#utility.yul\":9374:9403   */\n  swap1\n  pop\n    /* \"#utility.yul\":9240:9409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9415:9643   */\ntag_85:\n    /* \"#utility.yul\":9555:9589   */\n  0x4174206c65617374206f6e652077686974656c69737465642061646472657373\n    /* \"#utility.yul\":9551:9552   */\n  0x00\n    /* \"#utility.yul\":9543:9549   */\n  dup3\n    /* \"#utility.yul\":9539:9553   */\n  add\n    /* \"#utility.yul\":9532:9590   */\n  mstore\n    /* \"#utility.yul\":9624:9635   */\n  0x2072657175697265640000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9619:9621   */\n  0x20\n    /* \"#utility.yul\":9611:9617   */\n  dup3\n    /* \"#utility.yul\":9607:9622   */\n  add\n    /* \"#utility.yul\":9600:9636   */\n  mstore\n    /* \"#utility.yul\":9415:9643   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9649:10015   */\ntag_86:\n    /* \"#utility.yul\":9791:9794   */\n  0x00\n    /* \"#utility.yul\":9812:9879   */\n  tag_201\n    /* \"#utility.yul\":9876:9878   */\n  0x29\n    /* \"#utility.yul\":9871:9874   */\n  dup4\n    /* \"#utility.yul\":9812:9879   */\n  tag_84\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9805:9879   */\n  swap2\n  pop\n    /* \"#utility.yul\":9888:9981   */\n  tag_202\n    /* \"#utility.yul\":9977:9980   */\n  dup3\n    /* \"#utility.yul\":9888:9981   */\n  tag_85\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10006:10008   */\n  0x40\n    /* \"#utility.yul\":10001:10004   */\n  dup3\n    /* \"#utility.yul\":9997:10009   */\n  add\n    /* \"#utility.yul\":9990:10009   */\n  swap1\n  pop\n    /* \"#utility.yul\":9649:10015   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10021:10440   */\ntag_20:\n    /* \"#utility.yul\":10187:10191   */\n  0x00\n    /* \"#utility.yul\":10225:10227   */\n  0x20\n    /* \"#utility.yul\":10214:10223   */\n  dup3\n    /* \"#utility.yul\":10210:10228   */\n  add\n    /* \"#utility.yul\":10202:10228   */\n  swap1\n  pop\n    /* \"#utility.yul\":10274:10283   */\n  dup2\n    /* \"#utility.yul\":10268:10272   */\n  dup2\n    /* \"#utility.yul\":10264:10284   */\n  sub\n    /* \"#utility.yul\":10260:10261   */\n  0x00\n    /* \"#utility.yul\":10249:10258   */\n  dup4\n    /* \"#utility.yul\":10245:10262   */\n  add\n    /* \"#utility.yul\":10238:10285   */\n  mstore\n    /* \"#utility.yul\":10302:10433   */\n  tag_204\n    /* \"#utility.yul\":10428:10432   */\n  dup2\n    /* \"#utility.yul\":10302:10433   */\n  tag_86\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10294:10433   */\n  swap1\n  pop\n    /* \"#utility.yul\":10021:10440   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10446:10626   */\ntag_26:\n    /* \"#utility.yul\":10494:10571   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10491:10492   */\n  0x00\n    /* \"#utility.yul\":10484:10572   */\n  mstore\n    /* \"#utility.yul\":10591:10595   */\n  0x32\n    /* \"#utility.yul\":10588:10589   */\n  0x04\n    /* \"#utility.yul\":10581:10596   */\n  mstore\n    /* \"#utility.yul\":10615:10619   */\n  0x24\n    /* \"#utility.yul\":10612:10613   */\n  0x00\n    /* \"#utility.yul\":10605:10620   */\n  revert\n    /* \"#utility.yul\":10632:10812   */\ntag_87:\n    /* \"#utility.yul\":10680:10757   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10677:10678   */\n  0x00\n    /* \"#utility.yul\":10670:10758   */\n  mstore\n    /* \"#utility.yul\":10777:10781   */\n  0x11\n    /* \"#utility.yul\":10774:10775   */\n  0x04\n    /* \"#utility.yul\":10767:10782   */\n  mstore\n    /* \"#utility.yul\":10801:10805   */\n  0x24\n    /* \"#utility.yul\":10798:10799   */\n  0x00\n    /* \"#utility.yul\":10791:10806   */\n  revert\n    /* \"#utility.yul\":10818:11009   */\ntag_39:\n    /* \"#utility.yul\":10858:10861   */\n  0x00\n    /* \"#utility.yul\":10877:10897   */\n  tag_208\n    /* \"#utility.yul\":10895:10896   */\n  dup3\n    /* \"#utility.yul\":10877:10897   */\n  tag_71\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10872:10897   */\n  swap2\n  pop\n    /* \"#utility.yul\":10911:10931   */\n  tag_209\n    /* \"#utility.yul\":10929:10930   */\n  dup4\n    /* \"#utility.yul\":10911:10931   */\n  tag_71\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10906:10931   */\n  swap3\n  pop\n    /* \"#utility.yul\":10954:10955   */\n  dup3\n    /* \"#utility.yul\":10951:10952   */\n  dup3\n    /* \"#utility.yul\":10947:10956   */\n  add\n    /* \"#utility.yul\":10940:10956   */\n  swap1\n  pop\n    /* \"#utility.yul\":10975:10978   */\n  dup1\n    /* \"#utility.yul\":10972:10973   */\n  dup3\n    /* \"#utility.yul\":10969:10979   */\n  gt\n    /* \"#utility.yul\":10966:11002   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":10982:11000   */\n  tag_211\n  tag_87\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10966:11002   */\ntag_210:\n    /* \"#utility.yul\":10818:11009   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11015:11133   */\ntag_88:\n    /* \"#utility.yul\":11102:11126   */\n  tag_213\n    /* \"#utility.yul\":11120:11125   */\n  dup2\n    /* \"#utility.yul\":11102:11126   */\n  tag_71\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":11097:11100   */\n  dup3\n    /* \"#utility.yul\":11090:11127   */\n  mstore\n    /* \"#utility.yul\":11015:11133   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11139:11581   */\ntag_43:\n    /* \"#utility.yul\":11288:11292   */\n  0x00\n    /* \"#utility.yul\":11326:11328   */\n  0x60\n    /* \"#utility.yul\":11315:11324   */\n  dup3\n    /* \"#utility.yul\":11311:11329   */\n  add\n    /* \"#utility.yul\":11303:11329   */\n  swap1\n  pop\n    /* \"#utility.yul\":11339:11410   */\n  tag_215\n    /* \"#utility.yul\":11407:11408   */\n  0x00\n    /* \"#utility.yul\":11396:11405   */\n  dup4\n    /* \"#utility.yul\":11392:11409   */\n  add\n    /* \"#utility.yul\":11383:11389   */\n  dup7\n    /* \"#utility.yul\":11339:11410   */\n  tag_83\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11420:11492   */\n  tag_216\n    /* \"#utility.yul\":11488:11490   */\n  0x20\n    /* \"#utility.yul\":11477:11486   */\n  dup4\n    /* \"#utility.yul\":11473:11491   */\n  add\n    /* \"#utility.yul\":11464:11470   */\n  dup6\n    /* \"#utility.yul\":11420:11492   */\n  tag_88\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11502:11574   */\n  tag_217\n    /* \"#utility.yul\":11570:11572   */\n  0x40\n    /* \"#utility.yul\":11559:11568   */\n  dup4\n    /* \"#utility.yul\":11555:11573   */\n  add\n    /* \"#utility.yul\":11546:11552   */\n  dup5\n    /* \"#utility.yul\":11502:11574   */\n  tag_88\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11139:11581   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11587:11809   */\ntag_47:\n    /* \"#utility.yul\":11680:11684   */\n  0x00\n    /* \"#utility.yul\":11718:11720   */\n  0x20\n    /* \"#utility.yul\":11707:11716   */\n  dup3\n    /* \"#utility.yul\":11703:11721   */\n  add\n    /* \"#utility.yul\":11695:11721   */\n  swap1\n  pop\n    /* \"#utility.yul\":11731:11802   */\n  tag_219\n    /* \"#utility.yul\":11799:11800   */\n  0x00\n    /* \"#utility.yul\":11788:11797   */\n  dup4\n    /* \"#utility.yul\":11784:11801   */\n  add\n    /* \"#utility.yul\":11775:11781   */\n  dup5\n    /* \"#utility.yul\":11731:11802   */\n  tag_88\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11587:11809   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/CCKToken.sol\":378:4777  contract CCKToken is ERC20, Ownable, IERC3643 {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/CCKToken.sol\":378:4777  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd0516650\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe43252d7\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xd0516650\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xda0239a6\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe08ba51a\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa9059cbb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xaba63705\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xbdd3d825\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcb4b73ab\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x313ce567\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x6290865d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x6290865d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x158b1a57\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x158b1a57\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2d380242\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12cae7af\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x134e18f4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":4214:4357  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_5:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2237:2376  function identityRegistry() external view override returns (address) {... */\n    tag_6:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2776:2927  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_7:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":3333:3646  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_9:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":779:806  uint256 public mintedAmount */\n    tag_10:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":4049:4160  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":3696:3960  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":2130:2229  function version() external view override returns (string memory) {... */\n    tag_13:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2522:2610  function paused() external view override returns (bool) {... */\n    tag_14:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2384:2514  function compliance() external view override returns (address) {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":1428:1536  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_18:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":522:577  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_20:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":600:641  mapping(address => bool) public whitelist */\n    tag_22:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":3007:3292  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_23:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":2021:2122  function onchainID() external view override returns (address) {... */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":722:748  address public uniswapPool */\n    tag_25:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1685:1779  function unfreezeUser(address user) external onlyOwner {... */\n    tag_26:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":661:699  mapping(address => bool) public frozen */\n    tag_27:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1832:1978  function remainingSupply() external view returns (uint256) {... */\n    tag_28:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_29:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":1565:1656  function freezeUser(address user) external onlyOwner {... */\n    tag_30:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":1288:1390  function addToWhitelist(address member) external onlyOwner {... */\n    tag_31:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      stop\n        /* \"contracts/CCK/CCKToken.sol\":2618:2768  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_32:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CCKToken.sol\":4396:4774  function getCurrentPrice() external view returns (uint256) {... */\n    tag_33:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_158\n      jump\t// in\n    tag_159:\n      dup1\n      iszero\n      tag_160\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_161\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_160)\n    tag_161:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_162:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_162\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":4214:4357  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_55:\n        /* \"contracts/CCK/CCKToken.sol\":4274:4281  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4301:4316  balanceOf(user) */\n      tag_169\n        /* \"contracts/CCK/CCKToken.sol\":4311:4315  user */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":4301:4310  balanceOf */\n      tag_95\n        /* \"contracts/CCK/CCKToken.sol\":4301:4316  balanceOf(user) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/CCK/CCKToken.sol\":4294:4316  return balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":4214:4357  function balanceOfUser(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2237:2376  function identityRegistry() external view override returns (address) {... */\n    tag_59:\n        /* \"contracts/CCK/CCKToken.sol\":2297:2304  address */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2332:2333  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2317:2334  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2237:2376  function identityRegistry() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2776:2927  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_64:\n        /* \"contracts/CCK/CCKToken.sol\":2854:2861  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2881:2882  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2874:2882  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2776:2927  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":3333:3646  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_72:\n        /* \"contracts/CCK/CCKToken.sol\":3431:3435  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3457:3463  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":3457:3471  frozen[sender] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3464:3470  sender */\n      dup6\n        /* \"contracts/CCK/CCKToken.sol\":3457:3471  frozen[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3456:3471  !frozen[sender] */\n      iszero\n        /* \"contracts/CCK/CCKToken.sol\":3448:3492  require(!frozen[sender], \"Sender is frozen\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/CCK/CCKToken.sol\":3537:3543  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":3521:3545  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3511:3517  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3511:3545  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CCKToken.sol\":3503:3575  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/CCK/CCKToken.sol\":3593:3638  super.transferFrom(sender, recipient, amount) */\n      tag_180\n        /* \"contracts/CCK/CCKToken.sol\":3612:3618  sender */\n      dup5\n        /* \"contracts/CCK/CCKToken.sol\":3620:3629  recipient */\n      dup5\n        /* \"contracts/CCK/CCKToken.sol\":3631:3637  amount */\n      dup5\n        /* \"contracts/CCK/CCKToken.sol\":3593:3611  super.transferFrom */\n      tag_181\n        /* \"contracts/CCK/CCKToken.sol\":3593:3638  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/CCK/CCKToken.sol\":3586:3638  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":3333:3646  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":779:806  uint256 public mintedAmount */\n    tag_75:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":4049:4160  function decimals() public view virtual override returns (uint8) {... */\n    tag_78:\n        /* \"contracts/CCK/CCKToken.sol\":4107:4112  uint8 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4132:4133  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4125:4133  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":4049:4160  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":3696:3960  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/CCK/CCKToken.sol\":3776:3785  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken.sol\":3776:3789  whitelist[to] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3786:3788  to */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":3776:3789  whitelist[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3768:3809  require(whitelist[to], \"Not whitelisted\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/CCK/CCKToken.sol\":561:577  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken.sol\":3843:3849  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":3828:3840  mintedAmount */\n      sload(0x09)\n        /* \"contracts/CCK/CCKToken.sol\":3828:3849  mintedAmount + amount */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/CCK/CCKToken.sol\":3828:3865  mintedAmount + amount <= TOTAL_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CCK/CCKToken.sol\":3820:3891  require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/CCK/CCKToken.sol\":3902:3919  _mint(to, amount) */\n      tag_195\n        /* \"contracts/CCK/CCKToken.sol\":3908:3910  to */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3912:3918  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3902:3907  _mint */\n      tag_196\n        /* \"contracts/CCK/CCKToken.sol\":3902:3919  _mint(to, amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/CCK/CCKToken.sol\":3946:3952  amount */\n      dup1\n        /* \"contracts/CCK/CCKToken.sol\":3930:3942  mintedAmount */\n      0x09\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3930:3952  mintedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":3696:3960  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2130:2229  function version() external view override returns (string memory) {... */\n    tag_85:\n        /* \"contracts/CCK/CCKToken.sol\":2181:2194  string memory */\n      0x60\n        /* \"contracts/CCK/CCKToken.sol\":2207:2221  return \"1.0.0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x312e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2130:2229  function version() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2522:2610  function paused() external view override returns (bool) {... */\n    tag_88:\n        /* \"contracts/CCK/CCKToken.sol\":2572:2576  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2596:2601  false */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2589:2601  return false */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2522:2610  function paused() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2384:2514  function compliance() external view override returns (address) {... */\n    tag_91:\n        /* \"contracts/CCK/CCKToken.sol\":2438:2445  address */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2473:2474  0 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2458:2475  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2384:2514  function compliance() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1428:1536  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/CCK/CCKToken.sol\":1523:1528  false */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1503:1512  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken.sol\":1503:1520  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1513:1519  member */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1503:1520  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1503:1528  whitelist[member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1428:1536  function removeFromWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":522:577  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_106:\n        /* \"contracts/CCK/CCKToken.sol\":561:577  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken.sol\":522:577  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_158\n      jump\t// in\n    tag_212:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_158\n      jump\t// in\n    tag_213:\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_215\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_214)\n    tag_215:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_216:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_216\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":600:641  mapping(address => bool) public whitelist */\n    tag_113:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":3007:3292  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_117:\n        /* \"contracts/CCK/CCKToken.sol\":3085:3089  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3111:3117  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":3111:3129  frozen[msg.sender] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":3118:3128  msg.sender */\n      caller\n        /* \"contracts/CCK/CCKToken.sol\":3111:3129  frozen[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3110:3129  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/CCK/CCKToken.sol\":3102:3150  require(!frozen[msg.sender], \"Sender is frozen\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_176\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/CCK/CCKToken.sol\":3195:3201  amount */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":3179:3203  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":3169:3175  amount */\n      dup3\n        /* \"contracts/CCK/CCKToken.sol\":3169:3203  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CCKToken.sol\":3161:3233  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_179\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"contracts/CCK/CCKToken.sol\":3251:3284  super.transfer(recipient, amount) */\n      tag_222\n        /* \"contracts/CCK/CCKToken.sol\":3266:3275  recipient */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":3277:3283  amount */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":3251:3265  super.transfer */\n      tag_223\n        /* \"contracts/CCK/CCKToken.sol\":3251:3284  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/CCK/CCKToken.sol\":3244:3284  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":3007:3292  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2021:2122  function onchainID() external view override returns (address) {... */\n    tag_120:\n        /* \"contracts/CCK/CCKToken.sol\":2074:2081  address */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2109:2113  this */\n      address\n        /* \"contracts/CCK/CCKToken.sol\":2094:2114  return address(this) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2021:2122  function onchainID() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":722:748  address public uniswapPool */\n    tag_123:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1685:1779  function unfreezeUser(address user) external onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/CCK/CCKToken.sol\":1766:1771  false */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1751:1757  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":1751:1763  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1758:1762  user */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1751:1763  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1751:1771  frozen[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1685:1779  function unfreezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":661:699  mapping(address => bool) public frozen */\n    tag_130:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1832:1978  function remainingSupply() external view returns (uint256) {... */\n    tag_133:\n        /* \"contracts/CCK/CCKToken.sol\":1882:1889  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1924:1936  mintedAmount */\n      sload(0x09)\n        /* \"contracts/CCK/CCKToken.sol\":561:577  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/CCKToken.sol\":1909:1936  TOTAL_SUPPLY - mintedAmount */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/CCK/CCKToken.sol\":1902:1936  return TOTAL_SUPPLY - mintedAmount */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1832:1978  function remainingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1565:1656  function freezeUser(address user) external onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/CCK/CCKToken.sol\":1644:1648  true */\n      0x01\n        /* \"contracts/CCK/CCKToken.sol\":1629:1635  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":1629:1641  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1636:1640  user */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1629:1641  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1629:1648  frozen[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1565:1656  function freezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":1288:1390  function addToWhitelist(address member) external onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/CCK/CCKToken.sol\":1378:1382  true */\n      0x01\n        /* \"contracts/CCK/CCKToken.sol\":1358:1367  whitelist */\n      0x06\n        /* \"contracts/CCK/CCKToken.sol\":1358:1375  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1368:1374  member */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":1358:1375  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":1358:1382  whitelist[member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":1288:1390  function addToWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":2618:2768  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_148:\n        /* \"contracts/CCK/CCKToken.sol\":2689:2693  bool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2713:2719  frozen */\n      0x07\n        /* \"contracts/CCK/CCKToken.sol\":2713:2732  frozen[userAddress] */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":2720:2731  userAddress */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":2713:2732  frozen[userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":2706:2732  return frozen[userAddress] */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":2618:2768  function isFrozen(address userAddress) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CCKToken.sol\":4396:4774  function getCurrentPrice() external view returns (uint256) {... */\n    tag_151:\n        /* \"contracts/CCK/CCKToken.sol\":4446:4453  uint256 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4466:4485  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4503:4514  uniswapPool */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":4466:4515  IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":4527:4547  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4563:4567  pool */\n      dup2\n        /* \"contracts/CCK/CCKToken.sol\":4563:4573  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/CCK/CCKToken.sol\":4563:4575  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/CCK/CCKToken.sol\":4526:4575  (uint160 sqrtPriceX96, , , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":4642:4655  uint256 price */\n      0x00\n        /* \"contracts/CCK/CCKToken.sol\":4688:4698  2 ** (192) */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/CCK/CCKToken.sol\":4683:4684  2 */\n      0x02\n        /* \"contracts/CCK/CCKToken.sol\":4666:4678  sqrtPriceX96 */\n      dup4\n        /* \"contracts/CCK/CCKToken.sol\":4658:4679  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CCKToken.sol\":4658:4684  uint256(sqrtPriceX96) ** 2 */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/CCK/CCKToken.sol\":4658:4699  uint256(sqrtPriceX96) ** 2 / (2 ** (192)) */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"contracts/CCK/CCKToken.sol\":4642:4699  uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** (192)) */\n      swap1\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":4739:4744  price */\n      dup1\n        /* \"contracts/CCK/CCKToken.sol\":4732:4744  return price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CCK/CCKToken.sol\":4396:4774  function getCurrentPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_285\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_301\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_301:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_302)\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_306)\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_308:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_309:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_310:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_311:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_312:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_361\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_308\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":711:782   */\n      tag_362\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_309\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_363\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_310\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":881:910   */\n      tag_364\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_311\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_45:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_366\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_312\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_314:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_316:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_317:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_372\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_316\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_318:\n        /* \"#utility.yul\":1876:1900   */\n      tag_374\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_317\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_375:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_319:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_377\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_318\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_320:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_321:\n        /* \"#utility.yul\":2232:2256   */\n      tag_380\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_320\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_381:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_322:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_383\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_321\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_48:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_386\n      tag_314\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2525:2644   */\n    tag_385:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_387\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_319\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_388\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_322\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_323:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_324:\n        /* \"#utility.yul\":3089:3110   */\n      tag_391\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_323\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_51:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_393\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_324\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_54:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_396\n      tag_314\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":3415:3534   */\n    tag_395:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_397\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_319\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_325:\n        /* \"#utility.yul\":3761:3785   */\n      tag_399\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_320\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_57:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_401\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_325\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4144   */\n    tag_326:\n        /* \"#utility.yul\":4113:4137   */\n      tag_403\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4113:4137   */\n      tag_317\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4101:4138   */\n      mstore\n        /* \"#utility.yul\":4026:4144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4372   */\n    tag_61:\n        /* \"#utility.yul\":4243:4247   */\n      0x00\n        /* \"#utility.yul\":4281:4283   */\n      0x20\n        /* \"#utility.yul\":4270:4279   */\n      dup3\n        /* \"#utility.yul\":4266:4284   */\n      add\n        /* \"#utility.yul\":4258:4284   */\n      swap1\n      pop\n        /* \"#utility.yul\":4294:4365   */\n      tag_405\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4294:4365   */\n      tag_326\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4150:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4997   */\n    tag_71:\n        /* \"#utility.yul\":4455:4461   */\n      0x00\n        /* \"#utility.yul\":4463:4469   */\n      0x00\n        /* \"#utility.yul\":4471:4477   */\n      0x00\n        /* \"#utility.yul\":4520:4522   */\n      0x60\n        /* \"#utility.yul\":4508:4517   */\n      dup5\n        /* \"#utility.yul\":4499:4506   */\n      dup7\n        /* \"#utility.yul\":4495:4518   */\n      sub\n        /* \"#utility.yul\":4491:4523   */\n      slt\n        /* \"#utility.yul\":4488:4607   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4526:4605   */\n      tag_408\n      tag_314\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4488:4607   */\n    tag_407:\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4671:4724   */\n      tag_409\n        /* \"#utility.yul\":4716:4723   */\n      dup7\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4696:4705   */\n      dup8\n        /* \"#utility.yul\":4692:4714   */\n      add\n        /* \"#utility.yul\":4671:4724   */\n      tag_319\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4661:4724   */\n      swap4\n      pop\n        /* \"#utility.yul\":4617:4734   */\n      pop\n        /* \"#utility.yul\":4773:4775   */\n      0x20\n        /* \"#utility.yul\":4799:4852   */\n      tag_410\n        /* \"#utility.yul\":4844:4851   */\n      dup7\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      dup8\n        /* \"#utility.yul\":4820:4842   */\n      add\n        /* \"#utility.yul\":4799:4852   */\n      tag_319\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4789:4852   */\n      swap3\n      pop\n        /* \"#utility.yul\":4744:4862   */\n      pop\n        /* \"#utility.yul\":4901:4903   */\n      0x40\n        /* \"#utility.yul\":4927:4980   */\n      tag_411\n        /* \"#utility.yul\":4972:4979   */\n      dup7\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup8\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_322\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4917:4980   */\n      swap2\n      pop\n        /* \"#utility.yul\":4872:4990   */\n      pop\n        /* \"#utility.yul\":4378:4997   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5003:5089   */\n    tag_327:\n        /* \"#utility.yul\":5038:5045   */\n      0x00\n        /* \"#utility.yul\":5078:5082   */\n      0xff\n        /* \"#utility.yul\":5071:5076   */\n      dup3\n        /* \"#utility.yul\":5067:5083   */\n      and\n        /* \"#utility.yul\":5056:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5095:5207   */\n    tag_328:\n        /* \"#utility.yul\":5178:5200   */\n      tag_414\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5178:5200   */\n      tag_327\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5166:5201   */\n      mstore\n        /* \"#utility.yul\":5095:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5427   */\n    tag_80:\n        /* \"#utility.yul\":5302:5306   */\n      0x00\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5329:5338   */\n      dup3\n        /* \"#utility.yul\":5325:5343   */\n      add\n        /* \"#utility.yul\":5317:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":5353:5420   */\n      tag_416\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5353:5420   */\n      tag_328\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5213:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_137:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_419\n      tag_314\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5526:5645   */\n    tag_418:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_420\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_319\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_421\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_319\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_329:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_158:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_424:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_426\n      tag_329\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6329:6413   */\n    tag_425:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6591   */\n    tag_330:\n        /* \"#utility.yul\":6565:6583   */\n      0x53656e6465722069732066726f7a656e00000000000000000000000000000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6584   */\n      mstore\n        /* \"#utility.yul\":6425:6591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6597:6963   */\n    tag_331:\n        /* \"#utility.yul\":6739:6742   */\n      0x00\n        /* \"#utility.yul\":6760:6827   */\n      tag_429\n        /* \"#utility.yul\":6824:6826   */\n      0x10\n        /* \"#utility.yul\":6819:6822   */\n      dup4\n        /* \"#utility.yul\":6760:6827   */\n      tag_309\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6753:6827   */\n      swap2\n      pop\n        /* \"#utility.yul\":6836:6929   */\n      tag_430\n        /* \"#utility.yul\":6925:6928   */\n      dup3\n        /* \"#utility.yul\":6836:6929   */\n      tag_330\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6954:6956   */\n      0x20\n        /* \"#utility.yul\":6949:6952   */\n      dup3\n        /* \"#utility.yul\":6945:6957   */\n      add\n        /* \"#utility.yul\":6938:6957   */\n      swap1\n      pop\n        /* \"#utility.yul\":6597:6963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6969:7388   */\n    tag_176:\n        /* \"#utility.yul\":7135:7139   */\n      0x00\n        /* \"#utility.yul\":7173:7175   */\n      0x20\n        /* \"#utility.yul\":7162:7171   */\n      dup3\n        /* \"#utility.yul\":7158:7176   */\n      add\n        /* \"#utility.yul\":7150:7176   */\n      swap1\n      pop\n        /* \"#utility.yul\":7222:7231   */\n      dup2\n        /* \"#utility.yul\":7216:7220   */\n      dup2\n        /* \"#utility.yul\":7212:7232   */\n      sub\n        /* \"#utility.yul\":7208:7209   */\n      0x00\n        /* \"#utility.yul\":7197:7206   */\n      dup4\n        /* \"#utility.yul\":7193:7210   */\n      add\n        /* \"#utility.yul\":7186:7233   */\n      mstore\n        /* \"#utility.yul\":7250:7381   */\n      tag_432\n        /* \"#utility.yul\":7376:7380   */\n      dup2\n        /* \"#utility.yul\":7250:7381   */\n      tag_331\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7242:7381   */\n      swap1\n      pop\n        /* \"#utility.yul\":6969:7388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7394:7569   */\n    tag_332:\n        /* \"#utility.yul\":7534:7561   */\n      0x416d6f756e74206d75737420626520616e20696e746567657200000000000000\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7522:7528   */\n      dup3\n        /* \"#utility.yul\":7518:7532   */\n      add\n        /* \"#utility.yul\":7511:7562   */\n      mstore\n        /* \"#utility.yul\":7394:7569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7575:7941   */\n    tag_333:\n        /* \"#utility.yul\":7717:7720   */\n      0x00\n        /* \"#utility.yul\":7738:7805   */\n      tag_435\n        /* \"#utility.yul\":7802:7804   */\n      0x19\n        /* \"#utility.yul\":7797:7800   */\n      dup4\n        /* \"#utility.yul\":7738:7805   */\n      tag_309\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7731:7805   */\n      swap2\n      pop\n        /* \"#utility.yul\":7814:7907   */\n      tag_436\n        /* \"#utility.yul\":7903:7906   */\n      dup3\n        /* \"#utility.yul\":7814:7907   */\n      tag_332\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"#utility.yul\":7927:7930   */\n      dup3\n        /* \"#utility.yul\":7923:7935   */\n      add\n        /* \"#utility.yul\":7916:7935   */\n      swap1\n      pop\n        /* \"#utility.yul\":7575:7941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7947:8366   */\n    tag_179:\n        /* \"#utility.yul\":8113:8117   */\n      0x00\n        /* \"#utility.yul\":8151:8153   */\n      0x20\n        /* \"#utility.yul\":8140:8149   */\n      dup3\n        /* \"#utility.yul\":8136:8154   */\n      add\n        /* \"#utility.yul\":8128:8154   */\n      swap1\n      pop\n        /* \"#utility.yul\":8200:8209   */\n      dup2\n        /* \"#utility.yul\":8194:8198   */\n      dup2\n        /* \"#utility.yul\":8190:8210   */\n      sub\n        /* \"#utility.yul\":8186:8187   */\n      0x00\n        /* \"#utility.yul\":8175:8184   */\n      dup4\n        /* \"#utility.yul\":8171:8188   */\n      add\n        /* \"#utility.yul\":8164:8211   */\n      mstore\n        /* \"#utility.yul\":8228:8359   */\n      tag_438\n        /* \"#utility.yul\":8354:8358   */\n      dup2\n        /* \"#utility.yul\":8228:8359   */\n      tag_333\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8220:8359   */\n      swap1\n      pop\n        /* \"#utility.yul\":7947:8366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8372:8537   */\n    tag_334:\n        /* \"#utility.yul\":8512:8529   */\n      0x4e6f742077686974656c69737465640000000000000000000000000000000000\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8500:8506   */\n      dup3\n        /* \"#utility.yul\":8496:8510   */\n      add\n        /* \"#utility.yul\":8489:8530   */\n      mstore\n        /* \"#utility.yul\":8372:8537   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8543:8909   */\n    tag_335:\n        /* \"#utility.yul\":8685:8688   */\n      0x00\n        /* \"#utility.yul\":8706:8773   */\n      tag_441\n        /* \"#utility.yul\":8770:8772   */\n      0x0f\n        /* \"#utility.yul\":8765:8768   */\n      dup4\n        /* \"#utility.yul\":8706:8773   */\n      tag_309\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8699:8773   */\n      swap2\n      pop\n        /* \"#utility.yul\":8782:8875   */\n      tag_442\n        /* \"#utility.yul\":8871:8874   */\n      dup3\n        /* \"#utility.yul\":8782:8875   */\n      tag_334\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8900:8902   */\n      0x20\n        /* \"#utility.yul\":8895:8898   */\n      dup3\n        /* \"#utility.yul\":8891:8903   */\n      add\n        /* \"#utility.yul\":8884:8903   */\n      swap1\n      pop\n        /* \"#utility.yul\":8543:8909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8915:9334   */\n    tag_189:\n        /* \"#utility.yul\":9081:9085   */\n      0x00\n        /* \"#utility.yul\":9119:9121   */\n      0x20\n        /* \"#utility.yul\":9108:9117   */\n      dup3\n        /* \"#utility.yul\":9104:9122   */\n      add\n        /* \"#utility.yul\":9096:9122   */\n      swap1\n      pop\n        /* \"#utility.yul\":9168:9177   */\n      dup2\n        /* \"#utility.yul\":9162:9166   */\n      dup2\n        /* \"#utility.yul\":9158:9178   */\n      sub\n        /* \"#utility.yul\":9154:9155   */\n      0x00\n        /* \"#utility.yul\":9143:9152   */\n      dup4\n        /* \"#utility.yul\":9139:9156   */\n      add\n        /* \"#utility.yul\":9132:9179   */\n      mstore\n        /* \"#utility.yul\":9196:9327   */\n      tag_444\n        /* \"#utility.yul\":9322:9326   */\n      dup2\n        /* \"#utility.yul\":9196:9327   */\n      tag_335\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9188:9327   */\n      swap1\n      pop\n        /* \"#utility.yul\":8915:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9520   */\n    tag_336:\n        /* \"#utility.yul\":9388:9465   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9385:9386   */\n      0x00\n        /* \"#utility.yul\":9378:9466   */\n      mstore\n        /* \"#utility.yul\":9485:9489   */\n      0x11\n        /* \"#utility.yul\":9482:9483   */\n      0x04\n        /* \"#utility.yul\":9475:9490   */\n      mstore\n        /* \"#utility.yul\":9509:9513   */\n      0x24\n        /* \"#utility.yul\":9506:9507   */\n      0x00\n        /* \"#utility.yul\":9499:9514   */\n      revert\n        /* \"#utility.yul\":9526:9717   */\n    tag_191:\n        /* \"#utility.yul\":9566:9569   */\n      0x00\n        /* \"#utility.yul\":9585:9605   */\n      tag_447\n        /* \"#utility.yul\":9603:9604   */\n      dup3\n        /* \"#utility.yul\":9585:9605   */\n      tag_320\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9580:9605   */\n      swap2\n      pop\n        /* \"#utility.yul\":9619:9639   */\n      tag_448\n        /* \"#utility.yul\":9637:9638   */\n      dup4\n        /* \"#utility.yul\":9619:9639   */\n      tag_320\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9614:9639   */\n      swap3\n      pop\n        /* \"#utility.yul\":9662:9663   */\n      dup3\n        /* \"#utility.yul\":9659:9660   */\n      dup3\n        /* \"#utility.yul\":9655:9664   */\n      add\n        /* \"#utility.yul\":9648:9664   */\n      swap1\n      pop\n        /* \"#utility.yul\":9683:9686   */\n      dup1\n        /* \"#utility.yul\":9680:9681   */\n      dup3\n        /* \"#utility.yul\":9677:9687   */\n      gt\n        /* \"#utility.yul\":9674:9710   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9690:9708   */\n      tag_450\n      tag_336\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9674:9710   */\n    tag_449:\n        /* \"#utility.yul\":9526:9717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9723:9894   */\n    tag_337:\n        /* \"#utility.yul\":9863:9886   */\n      0x546f74616c20737570706c792065786365656465640000000000000000000000\n        /* \"#utility.yul\":9859:9860   */\n      0x00\n        /* \"#utility.yul\":9851:9857   */\n      dup3\n        /* \"#utility.yul\":9847:9861   */\n      add\n        /* \"#utility.yul\":9840:9887   */\n      mstore\n        /* \"#utility.yul\":9723:9894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9900:10266   */\n    tag_338:\n        /* \"#utility.yul\":10042:10045   */\n      0x00\n        /* \"#utility.yul\":10063:10130   */\n      tag_453\n        /* \"#utility.yul\":10127:10129   */\n      0x15\n        /* \"#utility.yul\":10122:10125   */\n      dup4\n        /* \"#utility.yul\":10063:10130   */\n      tag_309\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10056:10130   */\n      swap2\n      pop\n        /* \"#utility.yul\":10139:10232   */\n      tag_454\n        /* \"#utility.yul\":10228:10231   */\n      dup3\n        /* \"#utility.yul\":10139:10232   */\n      tag_337\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10257:10259   */\n      0x20\n        /* \"#utility.yul\":10252:10255   */\n      dup3\n        /* \"#utility.yul\":10248:10260   */\n      add\n        /* \"#utility.yul\":10241:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":9900:10266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10272:10691   */\n    tag_194:\n        /* \"#utility.yul\":10438:10442   */\n      0x00\n        /* \"#utility.yul\":10476:10478   */\n      0x20\n        /* \"#utility.yul\":10465:10474   */\n      dup3\n        /* \"#utility.yul\":10461:10479   */\n      add\n        /* \"#utility.yul\":10453:10479   */\n      swap1\n      pop\n        /* \"#utility.yul\":10525:10534   */\n      dup2\n        /* \"#utility.yul\":10519:10523   */\n      dup2\n        /* \"#utility.yul\":10515:10535   */\n      sub\n        /* \"#utility.yul\":10511:10512   */\n      0x00\n        /* \"#utility.yul\":10500:10509   */\n      dup4\n        /* \"#utility.yul\":10496:10513   */\n      add\n        /* \"#utility.yul\":10489:10536   */\n      mstore\n        /* \"#utility.yul\":10553:10684   */\n      tag_456\n        /* \"#utility.yul\":10679:10683   */\n      dup2\n        /* \"#utility.yul\":10553:10684   */\n      tag_338\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10545:10684   */\n      swap1\n      pop\n        /* \"#utility.yul\":10272:10691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10697:10891   */\n    tag_230:\n        /* \"#utility.yul\":10737:10741   */\n      0x00\n        /* \"#utility.yul\":10757:10777   */\n      tag_458\n        /* \"#utility.yul\":10775:10776   */\n      dup3\n        /* \"#utility.yul\":10757:10777   */\n      tag_320\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10752:10777   */\n      swap2\n      pop\n        /* \"#utility.yul\":10791:10811   */\n      tag_459\n        /* \"#utility.yul\":10809:10810   */\n      dup4\n        /* \"#utility.yul\":10791:10811   */\n      tag_320\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10786:10811   */\n      swap3\n      pop\n        /* \"#utility.yul\":10835:10836   */\n      dup3\n        /* \"#utility.yul\":10832:10833   */\n      dup3\n        /* \"#utility.yul\":10828:10837   */\n      sub\n        /* \"#utility.yul\":10820:10837   */\n      swap1\n      pop\n        /* \"#utility.yul\":10859:10860   */\n      dup2\n        /* \"#utility.yul\":10853:10857   */\n      dup2\n        /* \"#utility.yul\":10850:10861   */\n      gt\n        /* \"#utility.yul\":10847:10884   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10864:10882   */\n      tag_461\n      tag_336\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10847:10884   */\n    tag_460:\n        /* \"#utility.yul\":10697:10891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10897:11019   */\n    tag_339:\n        /* \"#utility.yul\":10970:10994   */\n      tag_463\n        /* \"#utility.yul\":10988:10993   */\n      dup2\n        /* \"#utility.yul\":10970:10994   */\n      tag_316\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10963:10968   */\n      dup2\n        /* \"#utility.yul\":10960:10995   */\n      eq\n        /* \"#utility.yul\":10950:11013   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":11009:11010   */\n      0x00\n        /* \"#utility.yul\":11006:11007   */\n      0x00\n        /* \"#utility.yul\":10999:11011   */\n      revert\n        /* \"#utility.yul\":10950:11013   */\n    tag_464:\n        /* \"#utility.yul\":10897:11019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11168   */\n    tag_340:\n        /* \"#utility.yul\":11082:11087   */\n      0x00\n        /* \"#utility.yul\":11113:11119   */\n      dup2\n        /* \"#utility.yul\":11107:11120   */\n      mload\n        /* \"#utility.yul\":11098:11120   */\n      swap1\n      pop\n        /* \"#utility.yul\":11129:11162   */\n      tag_466\n        /* \"#utility.yul\":11156:11161   */\n      dup2\n        /* \"#utility.yul\":11129:11162   */\n      tag_339\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11025:11168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11174:11264   */\n    tag_341:\n        /* \"#utility.yul\":11209:11216   */\n      0x00\n        /* \"#utility.yul\":11252:11257   */\n      dup2\n        /* \"#utility.yul\":11249:11250   */\n      0x02\n        /* \"#utility.yul\":11238:11258   */\n      signextend\n        /* \"#utility.yul\":11227:11258   */\n      swap1\n      pop\n        /* \"#utility.yul\":11174:11264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11270:11388   */\n    tag_342:\n        /* \"#utility.yul\":11341:11363   */\n      tag_469\n        /* \"#utility.yul\":11357:11362   */\n      dup2\n        /* \"#utility.yul\":11341:11363   */\n      tag_341\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11334:11339   */\n      dup2\n        /* \"#utility.yul\":11331:11364   */\n      eq\n        /* \"#utility.yul\":11321:11382   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":11378:11379   */\n      0x00\n        /* \"#utility.yul\":11375:11376   */\n      0x00\n        /* \"#utility.yul\":11368:11380   */\n      revert\n        /* \"#utility.yul\":11321:11382   */\n    tag_470:\n        /* \"#utility.yul\":11270:11388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11533   */\n    tag_343:\n        /* \"#utility.yul\":11449:11454   */\n      0x00\n        /* \"#utility.yul\":11480:11486   */\n      dup2\n        /* \"#utility.yul\":11474:11487   */\n      mload\n        /* \"#utility.yul\":11465:11487   */\n      swap1\n      pop\n        /* \"#utility.yul\":11496:11527   */\n      tag_472\n        /* \"#utility.yul\":11521:11526   */\n      dup2\n        /* \"#utility.yul\":11496:11527   */\n      tag_342\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11394:11533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11628   */\n    tag_344:\n        /* \"#utility.yul\":11575:11582   */\n      0x00\n        /* \"#utility.yul\":11615:11621   */\n      0xffff\n        /* \"#utility.yul\":11608:11613   */\n      dup3\n        /* \"#utility.yul\":11604:11622   */\n      and\n        /* \"#utility.yul\":11593:11622   */\n      swap1\n      pop\n        /* \"#utility.yul\":11539:11628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11634:11754   */\n    tag_345:\n        /* \"#utility.yul\":11706:11729   */\n      tag_475\n        /* \"#utility.yul\":11723:11728   */\n      dup2\n        /* \"#utility.yul\":11706:11729   */\n      tag_344\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11699:11704   */\n      dup2\n        /* \"#utility.yul\":11696:11730   */\n      eq\n        /* \"#utility.yul\":11686:11748   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":11744:11745   */\n      0x00\n        /* \"#utility.yul\":11741:11742   */\n      0x00\n        /* \"#utility.yul\":11734:11746   */\n      revert\n        /* \"#utility.yul\":11686:11748   */\n    tag_476:\n        /* \"#utility.yul\":11634:11754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11760:11901   */\n    tag_346:\n        /* \"#utility.yul\":11816:11821   */\n      0x00\n        /* \"#utility.yul\":11847:11853   */\n      dup2\n        /* \"#utility.yul\":11841:11854   */\n      mload\n        /* \"#utility.yul\":11832:11854   */\n      swap1\n      pop\n        /* \"#utility.yul\":11863:11895   */\n      tag_478\n        /* \"#utility.yul\":11889:11894   */\n      dup2\n        /* \"#utility.yul\":11863:11895   */\n      tag_345\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11760:11901   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11907:12025   */\n    tag_347:\n        /* \"#utility.yul\":11978:12000   */\n      tag_480\n        /* \"#utility.yul\":11994:11999   */\n      dup2\n        /* \"#utility.yul\":11978:12000   */\n      tag_327\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11971:11976   */\n      dup2\n        /* \"#utility.yul\":11968:12001   */\n      eq\n        /* \"#utility.yul\":11958:12019   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":12015:12016   */\n      0x00\n        /* \"#utility.yul\":12012:12013   */\n      0x00\n        /* \"#utility.yul\":12005:12017   */\n      revert\n        /* \"#utility.yul\":11958:12019   */\n    tag_481:\n        /* \"#utility.yul\":11907:12025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12031:12170   */\n    tag_348:\n        /* \"#utility.yul\":12086:12091   */\n      0x00\n        /* \"#utility.yul\":12117:12123   */\n      dup2\n        /* \"#utility.yul\":12111:12124   */\n      mload\n        /* \"#utility.yul\":12102:12124   */\n      swap1\n      pop\n        /* \"#utility.yul\":12133:12164   */\n      tag_483\n        /* \"#utility.yul\":12158:12163   */\n      dup2\n        /* \"#utility.yul\":12133:12164   */\n      tag_347\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12031:12170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12176:12292   */\n    tag_349:\n        /* \"#utility.yul\":12246:12267   */\n      tag_485\n        /* \"#utility.yul\":12261:12266   */\n      dup2\n        /* \"#utility.yul\":12246:12267   */\n      tag_323\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12239:12244   */\n      dup2\n        /* \"#utility.yul\":12236:12268   */\n      eq\n        /* \"#utility.yul\":12226:12286   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":12282:12283   */\n      0x00\n        /* \"#utility.yul\":12279:12280   */\n      0x00\n        /* \"#utility.yul\":12272:12284   */\n      revert\n        /* \"#utility.yul\":12226:12286   */\n    tag_486:\n        /* \"#utility.yul\":12176:12292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12298:12435   */\n    tag_350:\n        /* \"#utility.yul\":12352:12357   */\n      0x00\n        /* \"#utility.yul\":12383:12389   */\n      dup2\n        /* \"#utility.yul\":12377:12390   */\n      mload\n        /* \"#utility.yul\":12368:12390   */\n      swap1\n      pop\n        /* \"#utility.yul\":12399:12429   */\n      tag_488\n        /* \"#utility.yul\":12423:12428   */\n      dup2\n        /* \"#utility.yul\":12399:12429   */\n      tag_349\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12298:12435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12441:13712   */\n    tag_243:\n        /* \"#utility.yul\":12555:12561   */\n      0x00\n        /* \"#utility.yul\":12563:12569   */\n      0x00\n        /* \"#utility.yul\":12571:12577   */\n      0x00\n        /* \"#utility.yul\":12579:12585   */\n      0x00\n        /* \"#utility.yul\":12587:12593   */\n      0x00\n        /* \"#utility.yul\":12595:12601   */\n      0x00\n        /* \"#utility.yul\":12603:12609   */\n      0x00\n        /* \"#utility.yul\":12652:12655   */\n      0xe0\n        /* \"#utility.yul\":12640:12649   */\n      dup9\n        /* \"#utility.yul\":12631:12638   */\n      dup11\n        /* \"#utility.yul\":12627:12650   */\n      sub\n        /* \"#utility.yul\":12623:12656   */\n      slt\n        /* \"#utility.yul\":12620:12740   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":12659:12738   */\n      tag_491\n      tag_314\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12620:12740   */\n    tag_490:\n        /* \"#utility.yul\":12779:12780   */\n      0x00\n        /* \"#utility.yul\":12804:12868   */\n      tag_492\n        /* \"#utility.yul\":12860:12867   */\n      dup11\n        /* \"#utility.yul\":12851:12857   */\n      dup3\n        /* \"#utility.yul\":12840:12849   */\n      dup12\n        /* \"#utility.yul\":12836:12858   */\n      add\n        /* \"#utility.yul\":12804:12868   */\n      tag_340\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12794:12868   */\n      swap8\n      pop\n        /* \"#utility.yul\":12750:12878   */\n      pop\n        /* \"#utility.yul\":12917:12919   */\n      0x20\n        /* \"#utility.yul\":12943:13005   */\n      tag_493\n        /* \"#utility.yul\":12997:13004   */\n      dup11\n        /* \"#utility.yul\":12988:12994   */\n      dup3\n        /* \"#utility.yul\":12977:12986   */\n      dup12\n        /* \"#utility.yul\":12973:12995   */\n      add\n        /* \"#utility.yul\":12943:13005   */\n      tag_343\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12933:13005   */\n      swap7\n      pop\n        /* \"#utility.yul\":12888:13015   */\n      pop\n        /* \"#utility.yul\":13054:13056   */\n      0x40\n        /* \"#utility.yul\":13080:13143   */\n      tag_494\n        /* \"#utility.yul\":13135:13142   */\n      dup11\n        /* \"#utility.yul\":13126:13132   */\n      dup3\n        /* \"#utility.yul\":13115:13124   */\n      dup12\n        /* \"#utility.yul\":13111:13133   */\n      add\n        /* \"#utility.yul\":13080:13143   */\n      tag_346\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13070:13143   */\n      swap6\n      pop\n        /* \"#utility.yul\":13025:13153   */\n      pop\n        /* \"#utility.yul\":13192:13194   */\n      0x60\n        /* \"#utility.yul\":13218:13281   */\n      tag_495\n        /* \"#utility.yul\":13273:13280   */\n      dup11\n        /* \"#utility.yul\":13264:13270   */\n      dup3\n        /* \"#utility.yul\":13253:13262   */\n      dup12\n        /* \"#utility.yul\":13249:13271   */\n      add\n        /* \"#utility.yul\":13218:13281   */\n      tag_346\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13208:13281   */\n      swap5\n      pop\n        /* \"#utility.yul\":13163:13291   */\n      pop\n        /* \"#utility.yul\":13330:13333   */\n      0x80\n        /* \"#utility.yul\":13357:13420   */\n      tag_496\n        /* \"#utility.yul\":13412:13419   */\n      dup11\n        /* \"#utility.yul\":13403:13409   */\n      dup3\n        /* \"#utility.yul\":13392:13401   */\n      dup12\n        /* \"#utility.yul\":13388:13410   */\n      add\n        /* \"#utility.yul\":13357:13420   */\n      tag_346\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13347:13420   */\n      swap4\n      pop\n        /* \"#utility.yul\":13301:13430   */\n      pop\n        /* \"#utility.yul\":13469:13472   */\n      0xa0\n        /* \"#utility.yul\":13496:13558   */\n      tag_497\n        /* \"#utility.yul\":13550:13557   */\n      dup11\n        /* \"#utility.yul\":13541:13547   */\n      dup3\n        /* \"#utility.yul\":13530:13539   */\n      dup12\n        /* \"#utility.yul\":13526:13548   */\n      add\n        /* \"#utility.yul\":13496:13558   */\n      tag_348\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13486:13558   */\n      swap3\n      pop\n        /* \"#utility.yul\":13440:13568   */\n      pop\n        /* \"#utility.yul\":13607:13610   */\n      0xc0\n        /* \"#utility.yul\":13634:13695   */\n      tag_498\n        /* \"#utility.yul\":13687:13694   */\n      dup11\n        /* \"#utility.yul\":13678:13684   */\n      dup3\n        /* \"#utility.yul\":13667:13676   */\n      dup12\n        /* \"#utility.yul\":13663:13685   */\n      add\n        /* \"#utility.yul\":13634:13695   */\n      tag_350\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13624:13695   */\n      swap2\n      pop\n        /* \"#utility.yul\":13578:13705   */\n      pop\n        /* \"#utility.yul\":12441:13712   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13718:13820   */\n    tag_351:\n        /* \"#utility.yul\":13760:13768   */\n      0x00\n        /* \"#utility.yul\":13807:13812   */\n      dup2\n        /* \"#utility.yul\":13804:13805   */\n      0x01\n        /* \"#utility.yul\":13800:13813   */\n      shr\n        /* \"#utility.yul\":13779:13813   */\n      swap1\n      pop\n        /* \"#utility.yul\":13718:13820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13826:14674   */\n    tag_352:\n        /* \"#utility.yul\":13887:13892   */\n      0x00\n        /* \"#utility.yul\":13894:13898   */\n      0x00\n        /* \"#utility.yul\":13918:13924   */\n      dup3\n        /* \"#utility.yul\":13909:13924   */\n      swap2\n      pop\n        /* \"#utility.yul\":13942:13947   */\n      dup4\n        /* \"#utility.yul\":13933:13947   */\n      swap1\n      pop\n        /* \"#utility.yul\":13956:14668   */\n    tag_501:\n        /* \"#utility.yul\":13977:13978   */\n      0x01\n        /* \"#utility.yul\":13967:13975   */\n      dup6\n        /* \"#utility.yul\":13964:13979   */\n      gt\n        /* \"#utility.yul\":13956:14668   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":14072:14076   */\n      dup1\n        /* \"#utility.yul\":14067:14070   */\n      dup7\n        /* \"#utility.yul\":14063:14077   */\n      div\n        /* \"#utility.yul\":14057:14061   */\n      dup2\n        /* \"#utility.yul\":14054:14078   */\n      gt\n        /* \"#utility.yul\":14051:14101   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":14081:14099   */\n      tag_505\n      tag_336\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14051:14101   */\n    tag_504:\n        /* \"#utility.yul\":14131:14132   */\n      0x01\n        /* \"#utility.yul\":14121:14129   */\n      dup6\n        /* \"#utility.yul\":14117:14133   */\n      and\n        /* \"#utility.yul\":14114:14565   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":14546:14550   */\n      dup1\n        /* \"#utility.yul\":14539:14544   */\n      dup3\n        /* \"#utility.yul\":14535:14551   */\n      mul\n        /* \"#utility.yul\":14526:14551   */\n      swap2\n      pop\n        /* \"#utility.yul\":14114:14565   */\n    tag_506:\n        /* \"#utility.yul\":14596:14600   */\n      dup1\n        /* \"#utility.yul\":14590:14594   */\n      dup2\n        /* \"#utility.yul\":14586:14601   */\n      mul\n        /* \"#utility.yul\":14578:14601   */\n      swap1\n      pop\n        /* \"#utility.yul\":14626:14658   */\n      tag_507\n        /* \"#utility.yul\":14649:14657   */\n      dup6\n        /* \"#utility.yul\":14626:14658   */\n      tag_351\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14614:14658   */\n      swap5\n      pop\n        /* \"#utility.yul\":13956:14668   */\n      jump(tag_501)\n    tag_503:\n        /* \"#utility.yul\":13826:14674   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14680:15753   */\n    tag_353:\n        /* \"#utility.yul\":14734:14739   */\n      0x00\n        /* \"#utility.yul\":14925:14933   */\n      dup3\n        /* \"#utility.yul\":14915:14955   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":14946:14947   */\n      0x01\n        /* \"#utility.yul\":14937:14947   */\n      swap1\n      pop\n        /* \"#utility.yul\":14948:14953   */\n      jump(tag_508)\n        /* \"#utility.yul\":14915:14955   */\n    tag_509:\n        /* \"#utility.yul\":14974:14978   */\n      dup2\n        /* \"#utility.yul\":14964:15000   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":14991:14992   */\n      0x00\n        /* \"#utility.yul\":14982:14992   */\n      swap1\n      pop\n        /* \"#utility.yul\":14993:14998   */\n      jump(tag_508)\n        /* \"#utility.yul\":14964:15000   */\n    tag_510:\n        /* \"#utility.yul\":15060:15064   */\n      dup2\n        /* \"#utility.yul\":15108:15109   */\n      0x01\n        /* \"#utility.yul\":15103:15130   */\n      dup2\n      eq\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15144:15145   */\n      0x02\n        /* \"#utility.yul\":15139:15330   */\n      dup2\n      eq\n      tag_513\n      jumpi\n        /* \"#utility.yul\":15053:15330   */\n      jump(tag_511)\n        /* \"#utility.yul\":15103:15130   */\n    tag_512:\n        /* \"#utility.yul\":15121:15122   */\n      0x01\n        /* \"#utility.yul\":15112:15122   */\n      swap2\n      pop\n        /* \"#utility.yul\":15123:15128   */\n      pop\n      jump(tag_508)\n        /* \"#utility.yul\":15139:15330   */\n    tag_513:\n        /* \"#utility.yul\":15184:15187   */\n      0xff\n        /* \"#utility.yul\":15174:15182   */\n      dup5\n        /* \"#utility.yul\":15171:15188   */\n      gt\n        /* \"#utility.yul\":15168:15211   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":15191:15209   */\n      tag_515\n      tag_336\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15168:15211   */\n    tag_514:\n        /* \"#utility.yul\":15240:15248   */\n      dup4\n        /* \"#utility.yul\":15237:15238   */\n      0x02\n        /* \"#utility.yul\":15233:15249   */\n      exp\n        /* \"#utility.yul\":15224:15249   */\n      swap2\n      pop\n        /* \"#utility.yul\":15275:15278   */\n      dup5\n        /* \"#utility.yul\":15268:15273   */\n      dup3\n        /* \"#utility.yul\":15265:15279   */\n      gt\n        /* \"#utility.yul\":15262:15302   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":15282:15300   */\n      tag_517\n      tag_336\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15262:15302   */\n    tag_516:\n        /* \"#utility.yul\":15315:15320   */\n      pop\n      jump(tag_508)\n        /* \"#utility.yul\":15053:15330   */\n    tag_511:\n      pop\n        /* \"#utility.yul\":15439:15441   */\n      0x20\n        /* \"#utility.yul\":15429:15437   */\n      dup4\n        /* \"#utility.yul\":15426:15442   */\n      lt\n        /* \"#utility.yul\":15420:15423   */\n      0x0133\n        /* \"#utility.yul\":15414:15418   */\n      dup4\n        /* \"#utility.yul\":15411:15424   */\n      lt\n        /* \"#utility.yul\":15407:15443   */\n      and\n        /* \"#utility.yul\":15389:15391   */\n      0x4e\n        /* \"#utility.yul\":15379:15387   */\n      dup5\n        /* \"#utility.yul\":15376:15392   */\n      lt\n        /* \"#utility.yul\":15371:15373   */\n      0x0b\n        /* \"#utility.yul\":15365:15369   */\n      dup5\n        /* \"#utility.yul\":15362:15374   */\n      lt\n        /* \"#utility.yul\":15358:15393   */\n      and\n        /* \"#utility.yul\":15342:15453   */\n      or\n        /* \"#utility.yul\":15339:15585   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":15495:15503   */\n      dup3\n        /* \"#utility.yul\":15489:15493   */\n      dup3\n        /* \"#utility.yul\":15485:15504   */\n      exp\n        /* \"#utility.yul\":15476:15504   */\n      swap1\n      pop\n        /* \"#utility.yul\":15530:15533   */\n      dup4\n        /* \"#utility.yul\":15523:15528   */\n      dup2\n        /* \"#utility.yul\":15520:15534   */\n      gt\n        /* \"#utility.yul\":15517:15557   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":15537:15555   */\n      tag_520\n      tag_336\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15517:15557   */\n    tag_519:\n        /* \"#utility.yul\":15570:15575   */\n      jump(tag_508)\n        /* \"#utility.yul\":15339:15585   */\n    tag_518:\n        /* \"#utility.yul\":15610:15652   */\n      tag_521\n        /* \"#utility.yul\":15648:15651   */\n      dup5\n        /* \"#utility.yul\":15638:15646   */\n      dup5\n        /* \"#utility.yul\":15632:15636   */\n      dup5\n        /* \"#utility.yul\":15629:15630   */\n      0x01\n        /* \"#utility.yul\":15610:15652   */\n      tag_352\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15595:15652   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":15684:15688   */\n      dup2\n        /* \"#utility.yul\":15679:15682   */\n      dup5\n        /* \"#utility.yul\":15675:15689   */\n      div\n        /* \"#utility.yul\":15668:15673   */\n      dup2\n        /* \"#utility.yul\":15665:15690   */\n      gt\n        /* \"#utility.yul\":15662:15713   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":15693:15711   */\n      tag_523\n      tag_336\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15662:15713   */\n    tag_522:\n        /* \"#utility.yul\":15742:15746   */\n      dup2\n        /* \"#utility.yul\":15735:15740   */\n      dup2\n        /* \"#utility.yul\":15731:15747   */\n      mul\n        /* \"#utility.yul\":15722:15747   */\n      swap1\n      pop\n        /* \"#utility.yul\":14680:15753   */\n    tag_508:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15759:16040   */\n    tag_245:\n        /* \"#utility.yul\":15817:15822   */\n      0x00\n        /* \"#utility.yul\":15841:15864   */\n      tag_525\n        /* \"#utility.yul\":15859:15863   */\n      dup3\n        /* \"#utility.yul\":15841:15864   */\n      tag_320\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15833:15864   */\n      swap2\n      pop\n        /* \"#utility.yul\":15885:15910   */\n      tag_526\n        /* \"#utility.yul\":15901:15909   */\n      dup4\n        /* \"#utility.yul\":15885:15910   */\n      tag_327\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15873:15910   */\n      swap3\n      pop\n        /* \"#utility.yul\":15929:16033   */\n      tag_527\n        /* \"#utility.yul\":15966:16032   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15956:15964   */\n      dup5\n        /* \"#utility.yul\":15950:15954   */\n      dup5\n        /* \"#utility.yul\":15929:16033   */\n      tag_353\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15920:16033   */\n      swap1\n      pop\n        /* \"#utility.yul\":15759:16040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16046:16226   */\n    tag_354:\n        /* \"#utility.yul\":16094:16171   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16091:16092   */\n      0x00\n        /* \"#utility.yul\":16084:16172   */\n      mstore\n        /* \"#utility.yul\":16191:16195   */\n      0x12\n        /* \"#utility.yul\":16188:16189   */\n      0x04\n        /* \"#utility.yul\":16181:16196   */\n      mstore\n        /* \"#utility.yul\":16215:16219   */\n      0x24\n        /* \"#utility.yul\":16212:16213   */\n      0x00\n        /* \"#utility.yul\":16205:16220   */\n      revert\n        /* \"#utility.yul\":16232:16417   */\n    tag_247:\n        /* \"#utility.yul\":16272:16273   */\n      0x00\n        /* \"#utility.yul\":16289:16309   */\n      tag_530\n        /* \"#utility.yul\":16307:16308   */\n      dup3\n        /* \"#utility.yul\":16289:16309   */\n      tag_320\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16284:16309   */\n      swap2\n      pop\n        /* \"#utility.yul\":16323:16343   */\n      tag_531\n        /* \"#utility.yul\":16341:16342   */\n      dup4\n        /* \"#utility.yul\":16323:16343   */\n      tag_320\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16318:16343   */\n      swap3\n      pop\n        /* \"#utility.yul\":16362:16363   */\n      dup3\n        /* \"#utility.yul\":16352:16387   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":16367:16385   */\n      tag_533\n      tag_354\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16352:16387   */\n    tag_532:\n        /* \"#utility.yul\":16409:16410   */\n      dup3\n        /* \"#utility.yul\":16406:16407   */\n      dup3\n        /* \"#utility.yul\":16402:16411   */\n      div\n        /* \"#utility.yul\":16397:16411   */\n      swap1\n      pop\n        /* \"#utility.yul\":16232:16417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16423:16865   */\n    tag_291:\n        /* \"#utility.yul\":16572:16576   */\n      0x00\n        /* \"#utility.yul\":16610:16612   */\n      0x60\n        /* \"#utility.yul\":16599:16608   */\n      dup3\n        /* \"#utility.yul\":16595:16613   */\n      add\n        /* \"#utility.yul\":16587:16613   */\n      swap1\n      pop\n        /* \"#utility.yul\":16623:16694   */\n      tag_535\n        /* \"#utility.yul\":16691:16692   */\n      0x00\n        /* \"#utility.yul\":16680:16689   */\n      dup4\n        /* \"#utility.yul\":16676:16693   */\n      add\n        /* \"#utility.yul\":16667:16673   */\n      dup7\n        /* \"#utility.yul\":16623:16694   */\n      tag_326\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16704:16776   */\n      tag_536\n        /* \"#utility.yul\":16772:16774   */\n      0x20\n        /* \"#utility.yul\":16761:16770   */\n      dup4\n        /* \"#utility.yul\":16757:16775   */\n      add\n        /* \"#utility.yul\":16748:16754   */\n      dup6\n        /* \"#utility.yul\":16704:16776   */\n      tag_325\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16786:16858   */\n      tag_537\n        /* \"#utility.yul\":16854:16856   */\n      0x40\n        /* \"#utility.yul\":16843:16852   */\n      dup4\n        /* \"#utility.yul\":16839:16857   */\n      add\n        /* \"#utility.yul\":16830:16836   */\n      dup5\n        /* \"#utility.yul\":16786:16858   */\n      tag_325\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16423:16865   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c170f3f79e9404792cff6951ad0d0bb678cf7b13539ae1f43a16b0baa21e5cc064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1456": {
									"entryPoint": null,
									"id": 1456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 753,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 558,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 886,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11812:15",
										"nodeType": "YulBlock",
										"src": "0:11812:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "423:28:15",
													"nodeType": "YulBlock",
													"src": "423:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:15",
																		"nodeType": "YulLiteral",
																		"src": "443:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:12:15",
																"nodeType": "YulFunctionCall",
																"src": "433:12:15"
															},
															"nativeSrc": "433:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:15"
											},
											{
												"body": {
													"nativeSrc": "505:54:15",
													"nodeType": "YulBlock",
													"src": "505:54:15",
													"statements": [
														{
															"nativeSrc": "515:38:15",
															"nodeType": "YulAssignment",
															"src": "515:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:15",
																				"nodeType": "YulLiteral",
																				"src": "540:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:15"
																		},
																		"nativeSrc": "529:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:15",
																				"nodeType": "YulLiteral",
																				"src": "549:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:15"
																		},
																		"nativeSrc": "545:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:15"
																},
																"nativeSrc": "525:28:15",
																"nodeType": "YulFunctionCall",
																"src": "525:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:15",
														"nodeType": "YulTypedName",
														"src": "488:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:15",
														"nodeType": "YulTypedName",
														"src": "498:6:15",
														"type": ""
													}
												],
												"src": "457:102:15"
											},
											{
												"body": {
													"nativeSrc": "593:152:15",
													"nodeType": "YulBlock",
													"src": "593:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:15",
																		"nodeType": "YulLiteral",
																		"src": "610:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:15",
																		"nodeType": "YulLiteral",
																		"src": "613:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:15"
																},
																"nativeSrc": "603:88:15",
																"nodeType": "YulFunctionCall",
																"src": "603:88:15"
															},
															"nativeSrc": "603:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:15",
																		"nodeType": "YulLiteral",
																		"src": "707:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:15",
																		"nodeType": "YulLiteral",
																		"src": "710:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:15"
																},
																"nativeSrc": "700:15:15",
																"nodeType": "YulFunctionCall",
																"src": "700:15:15"
															},
															"nativeSrc": "700:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:15",
																		"nodeType": "YulLiteral",
																		"src": "731:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:15",
																		"nodeType": "YulLiteral",
																		"src": "734:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:15"
																},
																"nativeSrc": "724:15:15",
																"nodeType": "YulFunctionCall",
																"src": "724:15:15"
															},
															"nativeSrc": "724:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:15"
											},
											{
												"body": {
													"nativeSrc": "794:238:15",
													"nodeType": "YulBlock",
													"src": "794:238:15",
													"statements": [
														{
															"nativeSrc": "804:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:15"
																		},
																		"nativeSrc": "834:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:15"
																},
																"nativeSrc": "822:40:15",
																"nodeType": "YulFunctionCall",
																"src": "822:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:15",
																	"nodeType": "YulTypedName",
																	"src": "808:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:15",
																"nodeType": "YulBlock",
																"src": "973:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:15"
																			},
																			"nativeSrc": "975:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:15"
																		},
																		"nativeSrc": "975:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:15",
																				"nodeType": "YulLiteral",
																				"src": "928:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:15"
																		},
																		"nativeSrc": "913:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:15"
																		},
																		"nativeSrc": "949:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:15"
																},
																"nativeSrc": "910:62:15",
																"nodeType": "YulFunctionCall",
																"src": "910:62:15"
															},
															"nativeSrc": "907:88:15",
															"nodeType": "YulIf",
															"src": "907:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:15"
																},
																"nativeSrc": "1004:22:15",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:15"
															},
															"nativeSrc": "1004:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:15",
														"nodeType": "YulTypedName",
														"src": "780:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:15",
														"nodeType": "YulTypedName",
														"src": "788:4:15",
														"type": ""
													}
												],
												"src": "751:281:15"
											},
											{
												"body": {
													"nativeSrc": "1079:88:15",
													"nodeType": "YulBlock",
													"src": "1079:88:15",
													"statements": [
														{
															"nativeSrc": "1089:30:15",
															"nodeType": "YulAssignment",
															"src": "1089:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:15"
																},
																"nativeSrc": "1099:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:15"
																},
																"nativeSrc": "1128:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:15"
															},
															"nativeSrc": "1128:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:15",
														"nodeType": "YulTypedName",
														"src": "1063:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:15",
														"nodeType": "YulTypedName",
														"src": "1072:6:15",
														"type": ""
													}
												],
												"src": "1038:129:15"
											},
											{
												"body": {
													"nativeSrc": "1255:229:15",
													"nodeType": "YulBlock",
													"src": "1255:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:15",
																"nodeType": "YulBlock",
																"src": "1360:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:15"
																			},
																			"nativeSrc": "1362:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:15"
																		},
																		"nativeSrc": "1362:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:15",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:15"
																},
																"nativeSrc": "1329:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:15"
															},
															"nativeSrc": "1326:56:15",
															"nodeType": "YulIf",
															"src": "1326:56:15"
														},
														{
															"nativeSrc": "1392:25:15",
															"nodeType": "YulAssignment",
															"src": "1392:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:15"
																},
																"nativeSrc": "1400:17:15",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:15"
																}
															]
														},
														{
															"nativeSrc": "1454:23:15",
															"nodeType": "YulAssignment",
															"src": "1454:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:15"
																},
																"nativeSrc": "1462:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:15",
														"nodeType": "YulTypedName",
														"src": "1239:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:15",
														"nodeType": "YulTypedName",
														"src": "1250:4:15",
														"type": ""
													}
												],
												"src": "1173:311:15"
											},
											{
												"body": {
													"nativeSrc": "1579:28:15",
													"nodeType": "YulBlock",
													"src": "1579:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:15"
																},
																"nativeSrc": "1589:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:15"
															},
															"nativeSrc": "1589:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:15"
											},
											{
												"body": {
													"nativeSrc": "1658:81:15",
													"nodeType": "YulBlock",
													"src": "1658:81:15",
													"statements": [
														{
															"nativeSrc": "1668:65:15",
															"nodeType": "YulAssignment",
															"src": "1668:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:15"
																},
																"nativeSrc": "1679:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:15",
														"nodeType": "YulTypedName",
														"src": "1640:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:15",
														"nodeType": "YulTypedName",
														"src": "1650:7:15",
														"type": ""
													}
												],
												"src": "1613:126:15"
											},
											{
												"body": {
													"nativeSrc": "1790:51:15",
													"nodeType": "YulBlock",
													"src": "1790:51:15",
													"statements": [
														{
															"nativeSrc": "1800:35:15",
															"nodeType": "YulAssignment",
															"src": "1800:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:15"
																},
																"nativeSrc": "1811:24:15",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:15",
														"nodeType": "YulTypedName",
														"src": "1772:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:15",
														"nodeType": "YulTypedName",
														"src": "1782:7:15",
														"type": ""
													}
												],
												"src": "1745:96:15"
											},
											{
												"body": {
													"nativeSrc": "1890:79:15",
													"nodeType": "YulBlock",
													"src": "1890:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:15",
																"nodeType": "YulBlock",
																"src": "1947:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:15"
																			},
																			"nativeSrc": "1949:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:15"
																		},
																		"nativeSrc": "1949:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:15"
																				},
																				"nativeSrc": "1920:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:15"
																		},
																		"nativeSrc": "1910:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:15"
																},
																"nativeSrc": "1903:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:15"
															},
															"nativeSrc": "1900:63:15",
															"nodeType": "YulIf",
															"src": "1900:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:15",
														"nodeType": "YulTypedName",
														"src": "1883:5:15",
														"type": ""
													}
												],
												"src": "1847:122:15"
											},
											{
												"body": {
													"nativeSrc": "2038:80:15",
													"nodeType": "YulBlock",
													"src": "2038:80:15",
													"statements": [
														{
															"nativeSrc": "2048:22:15",
															"nodeType": "YulAssignment",
															"src": "2048:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:15"
																},
																"nativeSrc": "2057:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:15"
																},
																"nativeSrc": "2079:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:15"
															},
															"nativeSrc": "2079:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:15",
														"nodeType": "YulTypedName",
														"src": "2016:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:15",
														"nodeType": "YulTypedName",
														"src": "2024:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:15",
														"nodeType": "YulTypedName",
														"src": "2032:5:15",
														"type": ""
													}
												],
												"src": "1975:143:15"
											},
											{
												"body": {
													"nativeSrc": "2254:619:15",
													"nodeType": "YulBlock",
													"src": "2254:619:15",
													"statements": [
														{
															"nativeSrc": "2264:90:15",
															"nodeType": "YulAssignment",
															"src": "2264:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:15"
																		},
																		"nativeSrc": "2289:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:15"
																},
																"nativeSrc": "2273:81:15",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:15"
																}
															]
														},
														{
															"nativeSrc": "2363:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:15",
																"nodeType": "YulIdentifier",
																"src": "2374:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:15",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:15"
																},
																"nativeSrc": "2389:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:15"
															},
															"nativeSrc": "2389:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:15"
														},
														{
															"nativeSrc": "2419:23:15",
															"nodeType": "YulAssignment",
															"src": "2419:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:15"
																},
																"nativeSrc": "2426:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:15"
																}
															]
														},
														{
															"nativeSrc": "2452:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:15"
																		},
																		"nativeSrc": "2478:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:15"
																},
																"nativeSrc": "2466:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:15",
																"nodeType": "YulBlock",
																"src": "2524:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:15"
																			},
																			"nativeSrc": "2538:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:15"
																		},
																		"nativeSrc": "2538:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:15"
																},
																"nativeSrc": "2508:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:15"
															},
															"nativeSrc": "2505:122:15",
															"nodeType": "YulIf",
															"src": "2505:122:15"
														},
														{
															"body": {
																"nativeSrc": "2712:155:15",
																"nodeType": "YulBlock",
																"src": "2712:155:15",
																"statements": [
																	{
																		"nativeSrc": "2727:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:15",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:15"
																					},
																					"nativeSrc": "2774:48:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:15"
																			},
																			"nativeSrc": "2762:61:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:15"
																		},
																		"nativeSrc": "2762:61:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:15"
																	},
																	{
																		"nativeSrc": "2836:21:15",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:15",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:15"
																			},
																			"nativeSrc": "2843:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:15"
																},
																"nativeSrc": "2662:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:15"
															},
															"nativeSrc": "2636:231:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:15",
																"nodeType": "YulBlock",
																"src": "2678:25:15",
																"statements": [
																	{
																		"nativeSrc": "2680:21:15",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:15",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:15"
																			},
																			"nativeSrc": "2687:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:15",
																"nodeType": "YulBlock",
																"src": "2640:21:15",
																"statements": [
																	{
																		"nativeSrc": "2642:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:15",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:15",
														"nodeType": "YulTypedName",
														"src": "2224:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:15",
														"nodeType": "YulTypedName",
														"src": "2232:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:15",
														"nodeType": "YulTypedName",
														"src": "2240:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:15",
														"nodeType": "YulTypedName",
														"src": "2248:5:15",
														"type": ""
													}
												],
												"src": "2141:732:15"
											},
											{
												"body": {
													"nativeSrc": "2984:297:15",
													"nodeType": "YulBlock",
													"src": "2984:297:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:15",
																"nodeType": "YulBlock",
																"src": "3033:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:15"
																			},
																			"nativeSrc": "3035:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:15"
																		},
																		"nativeSrc": "3035:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:15"
																				},
																				"nativeSrc": "3008:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:15"
																		},
																		"nativeSrc": "3004:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:15"
																},
																"nativeSrc": "2997:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:15"
															},
															"nativeSrc": "2994:122:15",
															"nodeType": "YulIf",
															"src": "2994:122:15"
														},
														{
															"nativeSrc": "3125:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:15"
																},
																"nativeSrc": "3139:13:15",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:15",
															"nodeType": "YulAssignment",
															"src": "3161:114:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:15"
																		},
																		"nativeSrc": "3244:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:15",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:15"
																},
																"nativeSrc": "3170:105:15",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:15",
														"nodeType": "YulTypedName",
														"src": "2962:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:15",
														"nodeType": "YulTypedName",
														"src": "2970:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:15",
														"nodeType": "YulTypedName",
														"src": "2978:5:15",
														"type": ""
													}
												],
												"src": "2896:385:15"
											},
											{
												"body": {
													"nativeSrc": "3389:452:15",
													"nodeType": "YulBlock",
													"src": "3389:452:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3435:83:15",
																"nodeType": "YulBlock",
																"src": "3435:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3437:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3437:77:15"
																			},
																			"nativeSrc": "3437:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3437:79:15"
																		},
																		"nativeSrc": "3437:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3437:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3410:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3406:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:15"
																		},
																		"nativeSrc": "3406:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3431:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3402:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:15"
																},
																"nativeSrc": "3402:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3402:32:15"
															},
															"nativeSrc": "3399:119:15",
															"nodeType": "YulIf",
															"src": "3399:119:15"
														},
														{
															"nativeSrc": "3528:306:15",
															"nodeType": "YulBlock",
															"src": "3528:306:15",
															"statements": [
																{
																	"nativeSrc": "3543:38:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3543:38:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3567:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3567:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3578:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3578:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3563:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:15"
																				},
																				"nativeSrc": "3563:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:17:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3557:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3557:5:15"
																		},
																		"nativeSrc": "3557:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:24:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3547:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3547:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3628:83:15",
																		"nodeType": "YulBlock",
																		"src": "3628:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3630:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "3630:77:15"
																					},
																					"nativeSrc": "3630:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3630:79:15"
																				},
																				"nativeSrc": "3630:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3630:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3600:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3608:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3608:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3597:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3597:2:15"
																		},
																		"nativeSrc": "3597:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3597:30:15"
																	},
																	"nativeSrc": "3594:117:15",
																	"nodeType": "YulIf",
																	"src": "3594:117:15"
																},
																{
																	"nativeSrc": "3725:99:15",
																	"nodeType": "YulAssignment",
																	"src": "3725:99:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3796:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3796:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3807:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3807:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3792:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:15"
																				},
																				"nativeSrc": "3792:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3792:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3816:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3816:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3735:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "3735:56:15"
																		},
																		"nativeSrc": "3735:89:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:89:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3725:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3725:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3287:554:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3359:9:15",
														"nodeType": "YulTypedName",
														"src": "3359:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3370:7:15",
														"nodeType": "YulTypedName",
														"src": "3370:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3382:6:15",
														"nodeType": "YulTypedName",
														"src": "3382:6:15",
														"type": ""
													}
												],
												"src": "3287:554:15"
											},
											{
												"body": {
													"nativeSrc": "3906:40:15",
													"nodeType": "YulBlock",
													"src": "3906:40:15",
													"statements": [
														{
															"nativeSrc": "3917:22:15",
															"nodeType": "YulAssignment",
															"src": "3917:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3933:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3933:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3927:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3927:5:15"
																},
																"nativeSrc": "3927:12:15",
																"nodeType": "YulFunctionCall",
																"src": "3927:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3917:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3917:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3847:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3889:5:15",
														"nodeType": "YulTypedName",
														"src": "3889:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3899:6:15",
														"nodeType": "YulTypedName",
														"src": "3899:6:15",
														"type": ""
													}
												],
												"src": "3847:99:15"
											},
											{
												"body": {
													"nativeSrc": "3980:152:15",
													"nodeType": "YulBlock",
													"src": "3980:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3997:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3997:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4000:77:15",
																		"nodeType": "YulLiteral",
																		"src": "4000:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3990:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:15"
																},
																"nativeSrc": "3990:88:15",
																"nodeType": "YulFunctionCall",
																"src": "3990:88:15"
															},
															"nativeSrc": "3990:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "3990:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4094:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4094:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4097:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4087:6:15"
																},
																"nativeSrc": "4087:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4087:15:15"
															},
															"nativeSrc": "4087:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4087:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4118:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4118:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4121:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:15"
																},
																"nativeSrc": "4111:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4111:15:15"
															},
															"nativeSrc": "4111:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4111:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3952:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "3952:180:15"
											},
											{
												"body": {
													"nativeSrc": "4189:269:15",
													"nodeType": "YulBlock",
													"src": "4189:269:15",
													"statements": [
														{
															"nativeSrc": "4199:22:15",
															"nodeType": "YulAssignment",
															"src": "4199:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4213:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4219:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4209:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:15"
																},
																"nativeSrc": "4209:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4209:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4199:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:15"
																}
															]
														},
														{
															"nativeSrc": "4230:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4230:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4260:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4260:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4266:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4266:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4256:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:15"
																},
																"nativeSrc": "4256:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4256:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4234:18:15",
																	"nodeType": "YulTypedName",
																	"src": "4234:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4307:51:15",
																"nodeType": "YulBlock",
																"src": "4307:51:15",
																"statements": [
																	{
																		"nativeSrc": "4321:27:15",
																		"nodeType": "YulAssignment",
																		"src": "4321:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4335:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4335:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4343:4:15",
																					"nodeType": "YulLiteral",
																					"src": "4343:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4331:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4331:3:15"
																			},
																			"nativeSrc": "4331:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4331:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4321:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4287:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "4287:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4280:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:15"
																},
																"nativeSrc": "4280:26:15",
																"nodeType": "YulFunctionCall",
																"src": "4280:26:15"
															},
															"nativeSrc": "4277:81:15",
															"nodeType": "YulIf",
															"src": "4277:81:15"
														},
														{
															"body": {
																"nativeSrc": "4410:42:15",
																"nodeType": "YulBlock",
																"src": "4410:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4424:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4424:16:15"
																			},
																			"nativeSrc": "4424:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4424:18:15"
																		},
																		"nativeSrc": "4424:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4424:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4374:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "4374:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4397:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4405:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4394:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4394:2:15"
																		},
																		"nativeSrc": "4394:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4371:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:15"
																},
																"nativeSrc": "4371:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4371:38:15"
															},
															"nativeSrc": "4368:84:15",
															"nodeType": "YulIf",
															"src": "4368:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4138:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4173:4:15",
														"nodeType": "YulTypedName",
														"src": "4173:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4182:6:15",
														"nodeType": "YulTypedName",
														"src": "4182:6:15",
														"type": ""
													}
												],
												"src": "4138:320:15"
											},
											{
												"body": {
													"nativeSrc": "4518:87:15",
													"nodeType": "YulBlock",
													"src": "4518:87:15",
													"statements": [
														{
															"nativeSrc": "4528:11:15",
															"nodeType": "YulAssignment",
															"src": "4528:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "4536:3:15",
																"nodeType": "YulIdentifier",
																"src": "4536:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4528:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4528:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4556:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4556:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4559:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4549:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4549:6:15"
																},
																"nativeSrc": "4549:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4549:14:15"
															},
															"nativeSrc": "4549:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "4549:14:15"
														},
														{
															"nativeSrc": "4572:26:15",
															"nodeType": "YulAssignment",
															"src": "4572:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4590:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4590:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4593:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4580:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4580:9:15"
																},
																"nativeSrc": "4580:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4580:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4572:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4572:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4464:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4505:3:15",
														"nodeType": "YulTypedName",
														"src": "4505:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4513:4:15",
														"nodeType": "YulTypedName",
														"src": "4513:4:15",
														"type": ""
													}
												],
												"src": "4464:141:15"
											},
											{
												"body": {
													"nativeSrc": "4655:49:15",
													"nodeType": "YulBlock",
													"src": "4655:49:15",
													"statements": [
														{
															"nativeSrc": "4665:33:15",
															"nodeType": "YulAssignment",
															"src": "4665:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4683:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4683:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4690:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4690:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4679:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:15"
																		},
																		"nativeSrc": "4679:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4679:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4695:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4695:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4675:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:15"
																},
																"nativeSrc": "4675:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4675:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4665:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4611:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4638:5:15",
														"nodeType": "YulTypedName",
														"src": "4638:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4648:6:15",
														"nodeType": "YulTypedName",
														"src": "4648:6:15",
														"type": ""
													}
												],
												"src": "4611:93:15"
											},
											{
												"body": {
													"nativeSrc": "4763:54:15",
													"nodeType": "YulBlock",
													"src": "4763:54:15",
													"statements": [
														{
															"nativeSrc": "4773:37:15",
															"nodeType": "YulAssignment",
															"src": "4773:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4798:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4798:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4804:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4804:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4794:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4794:3:15"
																},
																"nativeSrc": "4794:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4794:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4773:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "4773:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4710:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4738:4:15",
														"nodeType": "YulTypedName",
														"src": "4738:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4744:5:15",
														"nodeType": "YulTypedName",
														"src": "4744:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4754:8:15",
														"nodeType": "YulTypedName",
														"src": "4754:8:15",
														"type": ""
													}
												],
												"src": "4710:107:15"
											},
											{
												"body": {
													"nativeSrc": "4899:317:15",
													"nodeType": "YulBlock",
													"src": "4899:317:15",
													"statements": [
														{
															"nativeSrc": "4909:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4909:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4930:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "4930:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4942:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4926:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:15"
																},
																"nativeSrc": "4926:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4926:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4913:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4913:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4953:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4953:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4984:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4984:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4995:66:15",
																		"nodeType": "YulLiteral",
																		"src": "4995:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4965:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4965:18:15"
																},
																"nativeSrc": "4965:97:15",
																"nodeType": "YulFunctionCall",
																"src": "4965:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4957:4:15",
																	"nodeType": "YulTypedName",
																	"src": "4957:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5071:51:15",
															"nodeType": "YulAssignment",
															"src": "5071:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5102:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5102:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5113:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5113:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5083:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5083:18:15"
																},
																"nativeSrc": "5083:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5083:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5071:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "5071:8:15"
																}
															]
														},
														{
															"nativeSrc": "5131:30:15",
															"nodeType": "YulAssignment",
															"src": "5131:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5144:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5144:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5155:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5155:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5151:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:15"
																		},
																		"nativeSrc": "5151:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5140:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:15"
																},
																"nativeSrc": "5140:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5140:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5131:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5131:5:15"
																}
															]
														},
														{
															"nativeSrc": "5170:40:15",
															"nodeType": "YulAssignment",
															"src": "5170:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5183:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5194:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "5194:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5204:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5204:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5190:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:15"
																		},
																		"nativeSrc": "5190:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5190:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5180:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:15"
																},
																"nativeSrc": "5180:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5180:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5170:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4823:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4860:5:15",
														"nodeType": "YulTypedName",
														"src": "4860:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4867:10:15",
														"nodeType": "YulTypedName",
														"src": "4867:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4879:8:15",
														"nodeType": "YulTypedName",
														"src": "4879:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4892:6:15",
														"nodeType": "YulTypedName",
														"src": "4892:6:15",
														"type": ""
													}
												],
												"src": "4823:393:15"
											},
											{
												"body": {
													"nativeSrc": "5267:32:15",
													"nodeType": "YulBlock",
													"src": "5267:32:15",
													"statements": [
														{
															"nativeSrc": "5277:16:15",
															"nodeType": "YulAssignment",
															"src": "5277:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "5288:5:15",
																"nodeType": "YulIdentifier",
																"src": "5288:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5277:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5277:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5222:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5249:5:15",
														"nodeType": "YulTypedName",
														"src": "5249:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5259:7:15",
														"nodeType": "YulTypedName",
														"src": "5259:7:15",
														"type": ""
													}
												],
												"src": "5222:77:15"
											},
											{
												"body": {
													"nativeSrc": "5337:28:15",
													"nodeType": "YulBlock",
													"src": "5337:28:15",
													"statements": [
														{
															"nativeSrc": "5347:12:15",
															"nodeType": "YulAssignment",
															"src": "5347:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "5354:5:15",
																"nodeType": "YulIdentifier",
																"src": "5354:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5347:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5305:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5323:5:15",
														"nodeType": "YulTypedName",
														"src": "5323:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5333:3:15",
														"nodeType": "YulTypedName",
														"src": "5333:3:15",
														"type": ""
													}
												],
												"src": "5305:60:15"
											},
											{
												"body": {
													"nativeSrc": "5431:82:15",
													"nodeType": "YulBlock",
													"src": "5431:82:15",
													"statements": [
														{
															"nativeSrc": "5441:66:15",
															"nodeType": "YulAssignment",
															"src": "5441:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5499:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5499:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5481:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5481:17:15"
																				},
																				"nativeSrc": "5481:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5481:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5472:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "5472:8:15"
																		},
																		"nativeSrc": "5472:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5454:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "5454:17:15"
																},
																"nativeSrc": "5454:53:15",
																"nodeType": "YulFunctionCall",
																"src": "5454:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5441:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5441:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5371:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5411:5:15",
														"nodeType": "YulTypedName",
														"src": "5411:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5421:9:15",
														"nodeType": "YulTypedName",
														"src": "5421:9:15",
														"type": ""
													}
												],
												"src": "5371:142:15"
											},
											{
												"body": {
													"nativeSrc": "5566:28:15",
													"nodeType": "YulBlock",
													"src": "5566:28:15",
													"statements": [
														{
															"nativeSrc": "5576:12:15",
															"nodeType": "YulAssignment",
															"src": "5576:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "5583:5:15",
																"nodeType": "YulIdentifier",
																"src": "5583:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5576:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5519:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5552:5:15",
														"nodeType": "YulTypedName",
														"src": "5552:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5562:3:15",
														"nodeType": "YulTypedName",
														"src": "5562:3:15",
														"type": ""
													}
												],
												"src": "5519:75:15"
											},
											{
												"body": {
													"nativeSrc": "5676:193:15",
													"nodeType": "YulBlock",
													"src": "5676:193:15",
													"statements": [
														{
															"nativeSrc": "5686:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5686:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5741:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5741:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5710:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "5710:30:15"
																},
																"nativeSrc": "5710:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5710:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5690:16:15",
																	"nodeType": "YulTypedName",
																	"src": "5690:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5765:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5765:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5805:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "5805:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5799:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "5799:5:15"
																				},
																				"nativeSrc": "5799:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5799:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5812:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5812:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5844:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "5844:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5820:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "5820:23:15"
																				},
																				"nativeSrc": "5820:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5771:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "5771:27:15"
																		},
																		"nativeSrc": "5771:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5771:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5758:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:15"
																},
																"nativeSrc": "5758:105:15",
																"nodeType": "YulFunctionCall",
																"src": "5758:105:15"
															},
															"nativeSrc": "5758:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "5758:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5600:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5653:4:15",
														"nodeType": "YulTypedName",
														"src": "5653:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5659:6:15",
														"nodeType": "YulTypedName",
														"src": "5659:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5667:7:15",
														"nodeType": "YulTypedName",
														"src": "5667:7:15",
														"type": ""
													}
												],
												"src": "5600:269:15"
											},
											{
												"body": {
													"nativeSrc": "5924:24:15",
													"nodeType": "YulBlock",
													"src": "5924:24:15",
													"statements": [
														{
															"nativeSrc": "5934:8:15",
															"nodeType": "YulAssignment",
															"src": "5934:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "5941:1:15",
																"nodeType": "YulLiteral",
																"src": "5941:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5934:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5875:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5920:3:15",
														"nodeType": "YulTypedName",
														"src": "5920:3:15",
														"type": ""
													}
												],
												"src": "5875:73:15"
											},
											{
												"body": {
													"nativeSrc": "6007:136:15",
													"nodeType": "YulBlock",
													"src": "6007:136:15",
													"statements": [
														{
															"nativeSrc": "6017:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6017:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6031:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "6031:30:15"
																},
																"nativeSrc": "6031:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6031:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6021:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6021:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6116:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6116:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6122:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6130:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6130:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6072:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6072:43:15"
																},
																"nativeSrc": "6072:65:15",
																"nodeType": "YulFunctionCall",
																"src": "6072:65:15"
															},
															"nativeSrc": "6072:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "6072:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5954:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5993:4:15",
														"nodeType": "YulTypedName",
														"src": "5993:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5999:6:15",
														"nodeType": "YulTypedName",
														"src": "5999:6:15",
														"type": ""
													}
												],
												"src": "5954:189:15"
											},
											{
												"body": {
													"nativeSrc": "6199:136:15",
													"nodeType": "YulBlock",
													"src": "6199:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6266:63:15",
																"nodeType": "YulBlock",
																"src": "6266:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6310:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6310:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6317:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6317:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6280:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "6280:29:15"
																			},
																			"nativeSrc": "6280:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6280:39:15"
																		},
																		"nativeSrc": "6280:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6280:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6219:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6219:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6226:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6226:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6216:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6216:2:15"
																},
																"nativeSrc": "6216:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6216:14:15"
															},
															"nativeSrc": "6209:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6231:26:15",
																"nodeType": "YulBlock",
																"src": "6231:26:15",
																"statements": [
																	{
																		"nativeSrc": "6233:22:15",
																		"nodeType": "YulAssignment",
																		"src": "6233:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6246:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6246:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6253:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6253:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6242:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6242:3:15"
																			},
																			"nativeSrc": "6242:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6242:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6233:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6233:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6213:2:15",
																"nodeType": "YulBlock",
																"src": "6213:2:15",
																"statements": []
															},
															"src": "6209:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6149:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6187:5:15",
														"nodeType": "YulTypedName",
														"src": "6187:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6194:3:15",
														"nodeType": "YulTypedName",
														"src": "6194:3:15",
														"type": ""
													}
												],
												"src": "6149:186:15"
											},
											{
												"body": {
													"nativeSrc": "6420:464:15",
													"nodeType": "YulBlock",
													"src": "6420:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6446:431:15",
																"nodeType": "YulBlock",
																"src": "6446:431:15",
																"statements": [
																	{
																		"nativeSrc": "6460:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6460:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6508:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6508:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6476:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "6476:31:15"
																			},
																			"nativeSrc": "6476:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6464:8:15",
																				"nodeType": "YulTypedName",
																				"src": "6464:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6527:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6527:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6550:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "6550:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6578:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "6578:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6560:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "6560:17:15"
																					},
																					"nativeSrc": "6560:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6560:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6546:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6546:3:15"
																			},
																			"nativeSrc": "6546:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6546:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6531:11:15",
																				"nodeType": "YulTypedName",
																				"src": "6531:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6747:27:15",
																			"nodeType": "YulBlock",
																			"src": "6747:27:15",
																			"statements": [
																				{
																					"nativeSrc": "6749:23:15",
																					"nodeType": "YulAssignment",
																					"src": "6749:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6764:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "6764:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6749:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "6749:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6731:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "6731:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6743:2:15",
																					"nodeType": "YulLiteral",
																					"src": "6743:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6728:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "6728:2:15"
																			},
																			"nativeSrc": "6728:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6728:18:15"
																		},
																		"nativeSrc": "6725:49:15",
																		"nodeType": "YulIf",
																		"src": "6725:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6816:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "6816:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6833:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "6833:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6861:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "6861:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6843:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "6843:17:15"
																							},
																							"nativeSrc": "6843:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "6843:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6829:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6829:3:15"
																					},
																					"nativeSrc": "6829:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6829:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6787:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "6787:28:15"
																			},
																			"nativeSrc": "6787:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6787:80:15"
																		},
																		"nativeSrc": "6787:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6787:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6437:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6437:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6442:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6442:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6434:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:15"
																},
																"nativeSrc": "6434:11:15",
																"nodeType": "YulFunctionCall",
																"src": "6434:11:15"
															},
															"nativeSrc": "6431:446:15",
															"nodeType": "YulIf",
															"src": "6431:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6341:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6396:5:15",
														"nodeType": "YulTypedName",
														"src": "6396:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6403:3:15",
														"nodeType": "YulTypedName",
														"src": "6403:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6408:10:15",
														"nodeType": "YulTypedName",
														"src": "6408:10:15",
														"type": ""
													}
												],
												"src": "6341:543:15"
											},
											{
												"body": {
													"nativeSrc": "6953:54:15",
													"nodeType": "YulBlock",
													"src": "6953:54:15",
													"statements": [
														{
															"nativeSrc": "6963:37:15",
															"nodeType": "YulAssignment",
															"src": "6963:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6988:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6988:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6994:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6994:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6984:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6984:3:15"
																},
																"nativeSrc": "6984:16:15",
																"nodeType": "YulFunctionCall",
																"src": "6984:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6963:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "6963:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6890:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6928:4:15",
														"nodeType": "YulTypedName",
														"src": "6928:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6934:5:15",
														"nodeType": "YulTypedName",
														"src": "6934:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6944:8:15",
														"nodeType": "YulTypedName",
														"src": "6944:8:15",
														"type": ""
													}
												],
												"src": "6890:117:15"
											},
											{
												"body": {
													"nativeSrc": "7064:118:15",
													"nodeType": "YulBlock",
													"src": "7064:118:15",
													"statements": [
														{
															"nativeSrc": "7074:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7074:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7123:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7123:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7126:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7126:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7119:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7119:3:15"
																				},
																				"nativeSrc": "7119:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7119:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7134:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:15"
																				},
																				"nativeSrc": "7134:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7090:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "7090:28:15"
																		},
																		"nativeSrc": "7090:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7090:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7086:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:15"
																},
																"nativeSrc": "7086:56:15",
																"nodeType": "YulFunctionCall",
																"src": "7086:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7078:4:15",
																	"nodeType": "YulTypedName",
																	"src": "7078:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7151:25:15",
															"nodeType": "YulAssignment",
															"src": "7151:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7165:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7165:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7171:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7171:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7161:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:15"
																},
																"nativeSrc": "7161:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7161:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7151:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7013:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7041:4:15",
														"nodeType": "YulTypedName",
														"src": "7041:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7047:5:15",
														"nodeType": "YulTypedName",
														"src": "7047:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7057:6:15",
														"nodeType": "YulTypedName",
														"src": "7057:6:15",
														"type": ""
													}
												],
												"src": "7013:169:15"
											},
											{
												"body": {
													"nativeSrc": "7268:214:15",
													"nodeType": "YulBlock",
													"src": "7268:214:15",
													"statements": [
														{
															"nativeSrc": "7401:37:15",
															"nodeType": "YulAssignment",
															"src": "7401:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7428:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7428:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7434:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7434:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7409:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7409:18:15"
																},
																"nativeSrc": "7409:29:15",
																"nodeType": "YulFunctionCall",
																"src": "7409:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7401:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7401:4:15"
																}
															]
														},
														{
															"nativeSrc": "7447:29:15",
															"nodeType": "YulAssignment",
															"src": "7447:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7458:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7458:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7468:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7468:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7471:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7471:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7464:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:15"
																		},
																		"nativeSrc": "7464:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7455:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7455:2:15"
																},
																"nativeSrc": "7455:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7455:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7447:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7447:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7187:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7249:4:15",
														"nodeType": "YulTypedName",
														"src": "7249:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7255:3:15",
														"nodeType": "YulTypedName",
														"src": "7255:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7263:4:15",
														"nodeType": "YulTypedName",
														"src": "7263:4:15",
														"type": ""
													}
												],
												"src": "7187:295:15"
											},
											{
												"body": {
													"nativeSrc": "7579:1303:15",
													"nodeType": "YulBlock",
													"src": "7579:1303:15",
													"statements": [
														{
															"nativeSrc": "7590:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7590:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7637:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7637:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7604:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "7604:32:15"
																},
																"nativeSrc": "7604:37:15",
																"nodeType": "YulFunctionCall",
																"src": "7604:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7594:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7594:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7726:22:15",
																"nodeType": "YulBlock",
																"src": "7726:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7728:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7728:16:15"
																			},
																			"nativeSrc": "7728:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7728:18:15"
																		},
																		"nativeSrc": "7728:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7698:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7706:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7706:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7695:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7695:2:15"
																},
																"nativeSrc": "7695:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7695:30:15"
															},
															"nativeSrc": "7692:56:15",
															"nodeType": "YulIf",
															"src": "7692:56:15"
														},
														{
															"nativeSrc": "7758:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7758:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7804:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7804:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7798:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7798:5:15"
																		},
																		"nativeSrc": "7798:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7772:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "7772:25:15"
																},
																"nativeSrc": "7772:38:15",
																"nodeType": "YulFunctionCall",
																"src": "7772:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7762:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7762:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7903:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7903:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7909:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7909:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7917:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7857:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "7857:45:15"
																},
																"nativeSrc": "7857:67:15",
																"nodeType": "YulFunctionCall",
																"src": "7857:67:15"
															},
															"nativeSrc": "7857:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "7857:67:15"
														},
														{
															"nativeSrc": "7934:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7934:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7951:1:15",
																"nodeType": "YulLiteral",
																"src": "7951:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7938:9:15",
																	"nodeType": "YulTypedName",
																	"src": "7938:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7962:17:15",
															"nodeType": "YulAssignment",
															"src": "7962:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "7975:4:15",
																"nodeType": "YulLiteral",
																"src": "7975:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7962:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "7962:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8026:611:15",
																		"nodeType": "YulBlock",
																		"src": "8026:611:15",
																		"statements": [
																			{
																				"nativeSrc": "8040:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8040:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8059:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "8059:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8071:4:15",
																									"nodeType": "YulLiteral",
																									"src": "8071:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8067:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8067:3:15"
																							},
																							"nativeSrc": "8067:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8067:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8055:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "8055:3:15"
																					},
																					"nativeSrc": "8055:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8055:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8044:7:15",
																						"nodeType": "YulTypedName",
																						"src": "8044:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8091:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8091:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8137:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8137:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8105:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "8105:31:15"
																					},
																					"nativeSrc": "8105:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8105:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8095:6:15",
																						"nodeType": "YulTypedName",
																						"src": "8095:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8155:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8155:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8164:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8164:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8159:1:15",
																						"nodeType": "YulTypedName",
																						"src": "8159:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8223:163:15",
																					"nodeType": "YulBlock",
																					"src": "8223:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8248:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8248:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8266:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "8266:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8271:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "8271:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8262:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "8262:3:15"
																												},
																												"nativeSrc": "8262:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "8262:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8256:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "8256:5:15"
																										},
																										"nativeSrc": "8256:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8256:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8241:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8241:6:15"
																								},
																								"nativeSrc": "8241:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8241:42:15"
																							},
																							"nativeSrc": "8241:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8241:42:15"
																						},
																						{
																							"nativeSrc": "8300:24:15",
																							"nodeType": "YulAssignment",
																							"src": "8300:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8314:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8314:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8322:1:15",
																										"nodeType": "YulLiteral",
																										"src": "8322:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8310:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8310:3:15"
																								},
																								"nativeSrc": "8310:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8310:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8300:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8300:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8341:31:15",
																							"nodeType": "YulAssignment",
																							"src": "8341:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8358:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "8358:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8369:2:15",
																										"nodeType": "YulLiteral",
																										"src": "8369:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8354:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8354:3:15"
																								},
																								"nativeSrc": "8354:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8354:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8341:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "8341:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8189:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "8189:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8192:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "8192:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8186:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8186:2:15"
																					},
																					"nativeSrc": "8186:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8186:14:15"
																				},
																				"nativeSrc": "8178:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8201:21:15",
																					"nodeType": "YulBlock",
																					"src": "8201:21:15",
																					"statements": [
																						{
																							"nativeSrc": "8203:17:15",
																							"nodeType": "YulAssignment",
																							"src": "8203:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8212:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "8212:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8215:4:15",
																										"nodeType": "YulLiteral",
																										"src": "8215:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8208:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8208:3:15"
																								},
																								"nativeSrc": "8208:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8208:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8203:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "8203:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8182:3:15",
																					"nodeType": "YulBlock",
																					"src": "8182:3:15",
																					"statements": []
																				},
																				"src": "8178:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "8422:156:15",
																					"nodeType": "YulBlock",
																					"src": "8422:156:15",
																					"statements": [
																						{
																							"nativeSrc": "8440:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8440:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8467:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8467:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8472:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8472:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8463:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8463:3:15"
																										},
																										"nativeSrc": "8463:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8463:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8457:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8457:5:15"
																								},
																								"nativeSrc": "8457:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8444:9:15",
																									"nodeType": "YulTypedName",
																									"src": "8444:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8507:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8507:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8534:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8534:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8549:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "8549:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8557:4:15",
																														"nodeType": "YulLiteral",
																														"src": "8557:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8545:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "8545:3:15"
																												},
																												"nativeSrc": "8545:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "8545:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8515:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "8515:18:15"
																										},
																										"nativeSrc": "8515:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8515:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8500:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8500:6:15"
																								},
																								"nativeSrc": "8500:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8500:64:15"
																							},
																							"nativeSrc": "8500:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8500:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8405:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "8405:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8414:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "8414:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8402:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8402:2:15"
																					},
																					"nativeSrc": "8402:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8402:19:15"
																				},
																				"nativeSrc": "8399:179:15",
																				"nodeType": "YulIf",
																				"src": "8399:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8598:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8598:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8612:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "8612:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8620:1:15",
																											"nodeType": "YulLiteral",
																											"src": "8620:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8608:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "8608:3:15"
																									},
																									"nativeSrc": "8608:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "8608:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8624:1:15",
																									"nodeType": "YulLiteral",
																									"src": "8624:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8604:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8604:3:15"
																							},
																							"nativeSrc": "8604:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8604:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8591:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8591:6:15"
																					},
																					"nativeSrc": "8591:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8591:36:15"
																				},
																				"nativeSrc": "8591:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8591:36:15"
																			}
																		]
																	},
																	"nativeSrc": "8019:618:15",
																	"nodeType": "YulCase",
																	"src": "8019:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8024:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8024:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8654:222:15",
																		"nodeType": "YulBlock",
																		"src": "8654:222:15",
																		"statements": [
																			{
																				"nativeSrc": "8668:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8668:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8681:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8672:5:15",
																						"nodeType": "YulTypedName",
																						"src": "8672:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8705:67:15",
																					"nodeType": "YulBlock",
																					"src": "8705:67:15",
																					"statements": [
																						{
																							"nativeSrc": "8723:35:15",
																							"nodeType": "YulAssignment",
																							"src": "8723:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8742:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8742:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8747:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8747:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8738:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8738:3:15"
																										},
																										"nativeSrc": "8738:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8738:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8732:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8732:5:15"
																								},
																								"nativeSrc": "8732:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8732:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8723:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8723:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8698:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "8698:6:15"
																				},
																				"nativeSrc": "8695:77:15",
																				"nodeType": "YulIf",
																				"src": "8695:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8792:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8792:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8851:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8851:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8858:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8858:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8798:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "8798:52:15"
																							},
																							"nativeSrc": "8798:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8798:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8785:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8785:6:15"
																					},
																					"nativeSrc": "8785:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8785:81:15"
																				},
																				"nativeSrc": "8785:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8785:81:15"
																			}
																		]
																	},
																	"nativeSrc": "8646:230:15",
																	"nodeType": "YulCase",
																	"src": "8646:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7999:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7999:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8007:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8007:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7996:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7996:2:15"
																},
																"nativeSrc": "7996:14:15",
																"nodeType": "YulFunctionCall",
																"src": "7996:14:15"
															},
															"nativeSrc": "7989:887:15",
															"nodeType": "YulSwitch",
															"src": "7989:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7487:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7568:4:15",
														"nodeType": "YulTypedName",
														"src": "7568:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7574:3:15",
														"nodeType": "YulTypedName",
														"src": "7574:3:15",
														"type": ""
													}
												],
												"src": "7487:1395:15"
											},
											{
												"body": {
													"nativeSrc": "8953:53:15",
													"nodeType": "YulBlock",
													"src": "8953:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8970:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8970:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8993:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8993:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8975:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "8975:17:15"
																		},
																		"nativeSrc": "8975:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8975:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8963:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:15"
																},
																"nativeSrc": "8963:37:15",
																"nodeType": "YulFunctionCall",
																"src": "8963:37:15"
															},
															"nativeSrc": "8963:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "8963:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8888:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8941:5:15",
														"nodeType": "YulTypedName",
														"src": "8941:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8948:3:15",
														"nodeType": "YulTypedName",
														"src": "8948:3:15",
														"type": ""
													}
												],
												"src": "8888:118:15"
											},
											{
												"body": {
													"nativeSrc": "9110:124:15",
													"nodeType": "YulBlock",
													"src": "9110:124:15",
													"statements": [
														{
															"nativeSrc": "9120:26:15",
															"nodeType": "YulAssignment",
															"src": "9120:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9132:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9132:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9143:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9128:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9128:3:15"
																},
																"nativeSrc": "9128:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9128:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9120:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9120:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9200:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9200:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9213:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9213:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9224:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9224:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9209:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:15"
																		},
																		"nativeSrc": "9209:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9209:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9156:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9156:43:15"
																},
																"nativeSrc": "9156:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9156:71:15"
															},
															"nativeSrc": "9156:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9156:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9012:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9082:9:15",
														"nodeType": "YulTypedName",
														"src": "9082:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9094:6:15",
														"nodeType": "YulTypedName",
														"src": "9094:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9105:4:15",
														"nodeType": "YulTypedName",
														"src": "9105:4:15",
														"type": ""
													}
												],
												"src": "9012:222:15"
											},
											{
												"body": {
													"nativeSrc": "9336:73:15",
													"nodeType": "YulBlock",
													"src": "9336:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9353:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9358:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9358:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9346:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:15"
																},
																"nativeSrc": "9346:19:15",
																"nodeType": "YulFunctionCall",
																"src": "9346:19:15"
															},
															"nativeSrc": "9346:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "9346:19:15"
														},
														{
															"nativeSrc": "9374:29:15",
															"nodeType": "YulAssignment",
															"src": "9374:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9393:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9398:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9389:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:15"
																},
																"nativeSrc": "9389:14:15",
																"nodeType": "YulFunctionCall",
																"src": "9389:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9374:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "9374:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9240:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9308:3:15",
														"nodeType": "YulTypedName",
														"src": "9308:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9313:6:15",
														"nodeType": "YulTypedName",
														"src": "9313:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9324:11:15",
														"nodeType": "YulTypedName",
														"src": "9324:11:15",
														"type": ""
													}
												],
												"src": "9240:169:15"
											},
											{
												"body": {
													"nativeSrc": "9521:122:15",
													"nodeType": "YulBlock",
													"src": "9521:122:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9543:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9543:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9551:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9551:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9539:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:15"
																		},
																		"nativeSrc": "9539:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9539:14:15"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373",
																		"kind": "string",
																		"nativeSrc": "9555:34:15",
																		"nodeType": "YulLiteral",
																		"src": "9555:34:15",
																		"type": "",
																		"value": "At least one whitelisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9532:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:15"
																},
																"nativeSrc": "9532:58:15",
																"nodeType": "YulFunctionCall",
																"src": "9532:58:15"
															},
															"nativeSrc": "9532:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "9532:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9611:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9611:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9619:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:15"
																		},
																		"nativeSrc": "9607:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:15:15"
																	},
																	{
																		"hexValue": "207265717569726564",
																		"kind": "string",
																		"nativeSrc": "9624:11:15",
																		"nodeType": "YulLiteral",
																		"src": "9624:11:15",
																		"type": "",
																		"value": " required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9600:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9600:6:15"
																},
																"nativeSrc": "9600:36:15",
																"nodeType": "YulFunctionCall",
																"src": "9600:36:15"
															},
															"nativeSrc": "9600:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "9600:36:15"
														}
													]
												},
												"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
												"nativeSrc": "9415:228:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9513:6:15",
														"nodeType": "YulTypedName",
														"src": "9513:6:15",
														"type": ""
													}
												],
												"src": "9415:228:15"
											},
											{
												"body": {
													"nativeSrc": "9795:220:15",
													"nodeType": "YulBlock",
													"src": "9795:220:15",
													"statements": [
														{
															"nativeSrc": "9805:74:15",
															"nodeType": "YulAssignment",
															"src": "9805:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9871:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9871:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9876:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9876:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9812:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "9812:58:15"
																},
																"nativeSrc": "9812:67:15",
																"nodeType": "YulFunctionCall",
																"src": "9812:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9805:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9805:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9977:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9977:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																	"nativeSrc": "9888:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "9888:88:15"
																},
																"nativeSrc": "9888:93:15",
																"nodeType": "YulFunctionCall",
																"src": "9888:93:15"
															},
															"nativeSrc": "9888:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "9888:93:15"
														},
														{
															"nativeSrc": "9990:19:15",
															"nodeType": "YulAssignment",
															"src": "9990:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10001:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10001:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10006:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9997:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:15"
																},
																"nativeSrc": "9997:12:15",
																"nodeType": "YulFunctionCall",
																"src": "9997:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9990:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9990:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9649:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9783:3:15",
														"nodeType": "YulTypedName",
														"src": "9783:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9791:3:15",
														"nodeType": "YulTypedName",
														"src": "9791:3:15",
														"type": ""
													}
												],
												"src": "9649:366:15"
											},
											{
												"body": {
													"nativeSrc": "10192:248:15",
													"nodeType": "YulBlock",
													"src": "10192:248:15",
													"statements": [
														{
															"nativeSrc": "10202:26:15",
															"nodeType": "YulAssignment",
															"src": "10202:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10214:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10214:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10225:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10225:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10210:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10210:3:15"
																},
																"nativeSrc": "10210:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10210:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10202:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10202:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10249:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10260:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10260:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10245:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:15"
																		},
																		"nativeSrc": "10245:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10268:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10268:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10274:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10264:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10264:3:15"
																		},
																		"nativeSrc": "10264:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10264:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10238:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10238:6:15"
																},
																"nativeSrc": "10238:47:15",
																"nodeType": "YulFunctionCall",
																"src": "10238:47:15"
															},
															"nativeSrc": "10238:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "10238:47:15"
														},
														{
															"nativeSrc": "10294:139:15",
															"nodeType": "YulAssignment",
															"src": "10294:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10428:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10428:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10302:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "10302:124:15"
																},
																"nativeSrc": "10302:131:15",
																"nodeType": "YulFunctionCall",
																"src": "10302:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10294:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10294:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10021:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10172:9:15",
														"nodeType": "YulTypedName",
														"src": "10172:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10187:4:15",
														"nodeType": "YulTypedName",
														"src": "10187:4:15",
														"type": ""
													}
												],
												"src": "10021:419:15"
											},
											{
												"body": {
													"nativeSrc": "10474:152:15",
													"nodeType": "YulBlock",
													"src": "10474:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10491:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10491:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10494:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10494:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10484:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:15"
																},
																"nativeSrc": "10484:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10484:88:15"
															},
															"nativeSrc": "10484:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10484:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10588:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10588:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10591:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10591:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10581:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:15"
																},
																"nativeSrc": "10581:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10581:15:15"
															},
															"nativeSrc": "10581:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10581:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10612:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10612:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10615:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10615:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10605:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10605:6:15"
																},
																"nativeSrc": "10605:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10605:15:15"
															},
															"nativeSrc": "10605:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10605:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10446:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10446:180:15"
											},
											{
												"body": {
													"nativeSrc": "10660:152:15",
													"nodeType": "YulBlock",
													"src": "10660:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10677:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10677:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10680:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10670:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:15"
																},
																"nativeSrc": "10670:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10670:88:15"
															},
															"nativeSrc": "10670:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10670:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10774:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10774:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10777:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10777:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10767:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10767:6:15"
																},
																"nativeSrc": "10767:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10767:15:15"
															},
															"nativeSrc": "10767:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10767:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10798:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10798:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10801:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10801:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10791:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10791:6:15"
																},
																"nativeSrc": "10791:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10791:15:15"
															},
															"nativeSrc": "10791:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10791:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10632:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10632:180:15"
											},
											{
												"body": {
													"nativeSrc": "10862:147:15",
													"nodeType": "YulBlock",
													"src": "10862:147:15",
													"statements": [
														{
															"nativeSrc": "10872:25:15",
															"nodeType": "YulAssignment",
															"src": "10872:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10895:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10895:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10877:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10877:17:15"
																},
																"nativeSrc": "10877:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10877:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10872:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10872:1:15"
																}
															]
														},
														{
															"nativeSrc": "10906:25:15",
															"nodeType": "YulAssignment",
															"src": "10906:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10929:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10929:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10911:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10911:17:15"
																},
																"nativeSrc": "10911:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10911:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10906:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10906:1:15"
																}
															]
														},
														{
															"nativeSrc": "10940:16:15",
															"nodeType": "YulAssignment",
															"src": "10940:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10951:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10951:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10954:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10954:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10947:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10947:3:15"
																},
																"nativeSrc": "10947:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10947:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10940:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10940:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10980:22:15",
																"nodeType": "YulBlock",
																"src": "10980:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10982:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10982:16:15"
																			},
																			"nativeSrc": "10982:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10982:18:15"
																		},
																		"nativeSrc": "10982:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10982:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10972:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10972:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10975:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10975:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10969:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10969:2:15"
																},
																"nativeSrc": "10969:10:15",
																"nodeType": "YulFunctionCall",
																"src": "10969:10:15"
															},
															"nativeSrc": "10966:36:15",
															"nodeType": "YulIf",
															"src": "10966:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10818:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10849:1:15",
														"nodeType": "YulTypedName",
														"src": "10849:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10852:1:15",
														"nodeType": "YulTypedName",
														"src": "10852:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10858:3:15",
														"nodeType": "YulTypedName",
														"src": "10858:3:15",
														"type": ""
													}
												],
												"src": "10818:191:15"
											},
											{
												"body": {
													"nativeSrc": "11080:53:15",
													"nodeType": "YulBlock",
													"src": "11080:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11097:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11097:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11120:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11120:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11102:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "11102:17:15"
																		},
																		"nativeSrc": "11102:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11102:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11090:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11090:6:15"
																},
																"nativeSrc": "11090:37:15",
																"nodeType": "YulFunctionCall",
																"src": "11090:37:15"
															},
															"nativeSrc": "11090:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "11090:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11015:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11068:5:15",
														"nodeType": "YulTypedName",
														"src": "11068:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11075:3:15",
														"nodeType": "YulTypedName",
														"src": "11075:3:15",
														"type": ""
													}
												],
												"src": "11015:118:15"
											},
											{
												"body": {
													"nativeSrc": "11293:288:15",
													"nodeType": "YulBlock",
													"src": "11293:288:15",
													"statements": [
														{
															"nativeSrc": "11303:26:15",
															"nodeType": "YulAssignment",
															"src": "11303:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11315:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11315:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11326:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11326:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11311:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11311:3:15"
																},
																"nativeSrc": "11311:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11311:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11303:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11303:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11383:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11383:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11396:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11396:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11407:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11407:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11392:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11392:3:15"
																		},
																		"nativeSrc": "11392:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11392:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11339:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11339:43:15"
																},
																"nativeSrc": "11339:71:15",
																"nodeType": "YulFunctionCall",
																"src": "11339:71:15"
															},
															"nativeSrc": "11339:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "11339:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11464:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11464:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11477:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11488:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11488:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11473:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11473:3:15"
																		},
																		"nativeSrc": "11473:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11473:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11420:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11420:43:15"
																},
																"nativeSrc": "11420:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11420:72:15"
															},
															"nativeSrc": "11420:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11420:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11546:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11546:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11559:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11559:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11570:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11570:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11555:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11555:3:15"
																		},
																		"nativeSrc": "11555:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11555:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11502:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11502:43:15"
																},
																"nativeSrc": "11502:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11502:72:15"
															},
															"nativeSrc": "11502:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11502:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11139:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11249:9:15",
														"nodeType": "YulTypedName",
														"src": "11249:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11261:6:15",
														"nodeType": "YulTypedName",
														"src": "11261:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11269:6:15",
														"nodeType": "YulTypedName",
														"src": "11269:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11277:6:15",
														"nodeType": "YulTypedName",
														"src": "11277:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11288:4:15",
														"nodeType": "YulTypedName",
														"src": "11288:4:15",
														"type": ""
													}
												],
												"src": "11139:442:15"
											},
											{
												"body": {
													"nativeSrc": "11685:124:15",
													"nodeType": "YulBlock",
													"src": "11685:124:15",
													"statements": [
														{
															"nativeSrc": "11695:26:15",
															"nodeType": "YulAssignment",
															"src": "11695:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11707:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11707:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11718:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11718:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11703:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11703:3:15"
																},
																"nativeSrc": "11703:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11703:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11695:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11695:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11775:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11788:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11788:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11799:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11799:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11784:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11784:3:15"
																		},
																		"nativeSrc": "11784:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11784:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11731:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11731:43:15"
																},
																"nativeSrc": "11731:71:15",
																"nodeType": "YulFunctionCall",
																"src": "11731:71:15"
															},
															"nativeSrc": "11731:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "11731:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11587:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11657:9:15",
														"nodeType": "YulTypedName",
														"src": "11657:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11669:6:15",
														"nodeType": "YulTypedName",
														"src": "11669:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11680:4:15",
														"nodeType": "YulTypedName",
														"src": "11680:4:15",
														"type": ""
													}
												],
												"src": "11587:222:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one whitelisted address\")\n\n        mstore(add(memPtr, 32), \" required\")\n\n    }\n\n    function abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612cc8380380612cc88339818101604052810190610031919061074a565b336040518060400160405280600381526020017f43434b00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43434b000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906109a1565b5080600490816100bd91906109a1565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610a7f565b60405180910390fd5b61013f8161022e60201b60201c565b505f815111610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610b18565b60405180910390fd5b5f5f90505b815181101561020d57600160065f8484815181106101a9576101a8610b36565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610188565b50610228336969e10de76676d08000006102f160201b60201c565b50610c20565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610361575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103589190610a7f565b60405180910390fd5b6103725f838361037660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103c6578060025f8282546103ba9190610b90565b92505081905550610494565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561044f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161044693929190610bd2565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104db578060025f8282540392505081905550610525565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105829190610c07565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105ea826105a4565b810181811067ffffffffffffffff82111715610609576106086105b4565b5b80604052505050565b5f61061b61058f565b905061062782826105e1565b919050565b5f67ffffffffffffffff821115610646576106456105b4565b5b602082029050602081019050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106848261065b565b9050919050565b6106948161067a565b811461069e575f5ffd5b50565b5f815190506106af8161068b565b92915050565b5f6106c76106c28461062c565b610612565b905080838252602082019050602084028301858111156106ea576106e9610657565b5b835b8181101561071357806106ff88826106a1565b8452602084019350506020810190506106ec565b5050509392505050565b5f82601f830112610731576107306105a0565b5b81516107418482602086016106b5565b91505092915050565b5f6020828403121561075f5761075e610598565b5b5f82015167ffffffffffffffff81111561077c5761077b61059c565b5b6107888482850161071d565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107df57607f821691505b6020821081036107f2576107f161079b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610819565b61085e8683610819565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6108a261089d61089884610876565b61087f565b610876565b9050919050565b5f819050919050565b6108bb83610888565b6108cf6108c7826108a9565b848454610825565b825550505050565b5f5f905090565b6108e66108d7565b6108f18184846108b2565b505050565b5b81811015610914576109095f826108de565b6001810190506108f7565b5050565b601f8211156109595761092a816107f8565b6109338461080a565b81016020851015610942578190505b61095661094e8561080a565b8301826108f6565b50505b505050565b5f82821c905092915050565b5f6109795f198460080261095e565b1980831691505092915050565b5f610991838361096a565b9150826002028217905092915050565b6109aa82610791565b67ffffffffffffffff8111156109c3576109c26105b4565b5b6109cd82546107c8565b6109d8828285610918565b5f60209050601f831160018114610a09575f84156109f7578287015190505b610a018582610986565b865550610a68565b601f198416610a17866107f8565b5f5b82811015610a3e57848901518255600182019150602085019450602081019050610a19565b86831015610a5b5784890151610a57601f89168261096a565b8355505b6001600288020188555050505b505050505050565b610a798161067a565b82525050565b5f602082019050610a925f830184610a70565b92915050565b5f82825260208201905092915050565b7f4174206c65617374206f6e652077686974656c697374656420616464726573735f8201527f2072657175697265640000000000000000000000000000000000000000000000602082015250565b5f610b02602983610a98565b9150610b0d82610aa8565b604082019050919050565b5f6020820190508181035f830152610b2f81610af6565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b9a82610876565b9150610ba583610876565b9250828201905080821115610bbd57610bbc610b63565b5b92915050565b610bcc81610876565b82525050565b5f606082019050610be55f830186610a70565b610bf26020830185610bc3565b610bff6040830184610bc3565b949350505050565b5f602082019050610c1a5f830184610bc3565b92915050565b61209b80610c2d5f395ff3fe608060405234801561000f575f5ffd5b50600436106101ee575f3560e01c80638da5cb5b1161010d578063d0516650116100a0578063e43252d71161006f578063e43252d7146105c0578063e5839836146105dc578063eb91d37e1461060c578063f2fde38b1461062a576101ee565b8063d051665014610526578063da0239a614610556578063dd62ed3e14610574578063e08ba51a146105a4576101ee565b8063a9059cbb116100dc578063a9059cbb1461049e578063aba63705146104ce578063bdd3d825146104ec578063cb4b73ab1461050a576101ee565b80638da5cb5b14610414578063902d55a51461043257806395d89b41146104505780639b19251a1461046e576101ee565b8063313ce567116101855780636290865d116101545780636290865d146103a057806370a08231146103be578063715018a6146103ee5780638ab1d681146103f8576101ee565b8063313ce5671461032a57806340c10f191461034857806354fd4d50146103645780635c975abb14610382576101ee565b8063158b1a57116101c1578063158b1a571461028e57806318160ddd146102be57806323b872dd146102dc5780632d3802421461030c576101ee565b806306fdde03146101f2578063095ea7b31461021057806312cae7af14610240578063134e18f414610270575b5f5ffd5b6101fa610646565b60405161020791906117e3565b60405180910390f35b61022a60048036038101906102259190611894565b6106d6565b60405161023791906118ec565b60405180910390f35b61025a60048036038101906102559190611905565b6106f8565b604051610267919061193f565b60405180910390f35b610278610709565b6040516102859190611967565b60405180910390f35b6102a860048036038101906102a39190611905565b610710565b6040516102b5919061193f565b60405180910390f35b6102c6610719565b6040516102d3919061193f565b60405180910390f35b6102f660048036038101906102f19190611980565b610722565b60405161030391906118ec565b60405180910390f35b610314610815565b604051610321919061193f565b60405180910390f35b61033261081b565b60405161033f91906119eb565b60405180910390f35b610362600480360381019061035d9190611894565b610822565b005b61036c610933565b60405161037991906117e3565b60405180910390f35b61038a610970565b60405161039791906118ec565b60405180910390f35b6103a8610977565b6040516103b59190611967565b60405180910390f35b6103d860048036038101906103d39190611905565b61097e565b6040516103e5919061193f565b60405180910390f35b6103f66109c3565b005b610412600480360381019061040d9190611905565b6109d6565b005b61041c610a35565b6040516104299190611967565b60405180910390f35b61043a610a5d565b604051610447919061193f565b60405180910390f35b610458610a6b565b60405161046591906117e3565b60405180910390f35b61048860048036038101906104839190611905565b610afb565b60405161049591906118ec565b60405180910390f35b6104b860048036038101906104b39190611894565b610b18565b6040516104c591906118ec565b60405180910390f35b6104d6610c09565b6040516104e39190611967565b60405180910390f35b6104f4610c10565b6040516105019190611967565b60405180910390f35b610524600480360381019061051f9190611905565b610c35565b005b610540600480360381019061053b9190611905565b610c94565b60405161054d91906118ec565b60405180910390f35b61055e610cb1565b60405161056b919061193f565b60405180910390f35b61058e60048036038101906105899190611a04565b610ccf565b60405161059b919061193f565b60405180910390f35b6105be60048036038101906105b99190611905565b610d51565b005b6105da60048036038101906105d59190611905565b610db1565b005b6105f660048036038101906105f19190611905565b610e11565b60405161060391906118ec565b60405180910390f35b610614610e63565b604051610621919061193f565b60405180910390f35b610644600480360381019061063f9190611905565b610f52565b005b60606003805461065590611a6f565b80601f016020809104026020016040519081016040528092919081815260200182805461068190611a6f565b80156106cc5780601f106106a3576101008083540402835291602001916106cc565b820191905f5260205f20905b8154815290600101906020018083116106af57829003601f168201915b5050505050905090565b5f5f6106e0610fd6565b90506106ed818585610fdd565b600191505092915050565b5f6107028261097e565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611b51565b60405180910390fd5b61080c848484610fef565b90509392505050565b60095481565b5f5f905090565b61082a61101d565b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa90611bb9565b60405180910390fd5b6969e10de76676d0800000816009546108cc9190611c04565b111561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611c81565b60405180910390fd5b61091782826110a4565b8060095f8282546109289190611c04565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109cb61101d565b6109d45f611123565b565b6109de61101d565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a7a90611a6f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa690611a6f565b8015610af15780601f10610ac857610100808354040283529160200191610af1565b820191905f5260205f20905b815481529060010190602001808311610ad457829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9a90611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee90611b51565b60405180910390fd5b610c0183836111e6565b905092915050565b5f30905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c3d61101d565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f6009546969e10de76676d0800000610cca9190611c9f565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5961101d565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610db961101d565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610ed3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef79190611dbd565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610f3d9190611f89565b610f479190612000565b905080935050505090565b610f5a61101d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fca575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fc19190611967565b60405180910390fd5b610fd381611123565b50565b5f33905090565b610fea8383836001611208565b505050565b5f5f610ff9610fd6565b90506110068582856113d7565b61101185858561146a565b60019150509392505050565b611025610fd6565b73ffffffffffffffffffffffffffffffffffffffff16611043610a35565b73ffffffffffffffffffffffffffffffffffffffff16146110a257611066610fd6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110999190611967565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611114575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161110b9190611967565b60405180910390fd5b61111f5f838361155a565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6111f0610fd6565b90506111fd81858561146a565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611278575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161126f9190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112e8575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112df9190611967565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113d1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113c8919061193f565b60405180910390a35b50505050565b5f6113e28484610ccf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114645781811015611455578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144c93929190612030565b60405180910390fd5b61146384848484035f611208565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114da575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d19190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115419190611967565b60405180910390fd5b61155583838361155a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115aa578060025f82825461159e9190611c04565b92505081905550611678565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611633578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161162a93929190612030565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116bf578060025f8282540392505081905550611709565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611766919061193f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117b582611773565b6117bf818561177d565b93506117cf81856020860161178d565b6117d88161179b565b840191505092915050565b5f6020820190508181035f8301526117fb81846117ab565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61183082611807565b9050919050565b61184081611826565b811461184a575f5ffd5b50565b5f8135905061185b81611837565b92915050565b5f819050919050565b61187381611861565b811461187d575f5ffd5b50565b5f8135905061188e8161186a565b92915050565b5f5f604083850312156118aa576118a9611803565b5b5f6118b78582860161184d565b92505060206118c885828601611880565b9150509250929050565b5f8115159050919050565b6118e6816118d2565b82525050565b5f6020820190506118ff5f8301846118dd565b92915050565b5f6020828403121561191a57611919611803565b5b5f6119278482850161184d565b91505092915050565b61193981611861565b82525050565b5f6020820190506119525f830184611930565b92915050565b61196181611826565b82525050565b5f60208201905061197a5f830184611958565b92915050565b5f5f5f6060848603121561199757611996611803565b5b5f6119a48682870161184d565b93505060206119b58682870161184d565b92505060406119c686828701611880565b9150509250925092565b5f60ff82169050919050565b6119e5816119d0565b82525050565b5f6020820190506119fe5f8301846119dc565b92915050565b5f5f60408385031215611a1a57611a19611803565b5b5f611a278582860161184d565b9250506020611a388582860161184d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8657607f821691505b602082108103611a9957611a98611a42565b5b50919050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f611ad360108361177d565b9150611ade82611a9f565b602082019050919050565b5f6020820190508181035f830152611b0081611ac7565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611b3b60198361177d565b9150611b4682611b07565b602082019050919050565b5f6020820190508181035f830152611b6881611b2f565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611ba3600f8361177d565b9150611bae82611b6f565b602082019050919050565b5f6020820190508181035f830152611bd081611b97565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0e82611861565b9150611c1983611861565b9250828201905080821115611c3157611c30611bd7565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611c6b60158361177d565b9150611c7682611c37565b602082019050919050565b5f6020820190508181035f830152611c9881611c5f565b9050919050565b5f611ca982611861565b9150611cb483611861565b9250828203905081811115611ccc57611ccb611bd7565b5b92915050565b611cdb81611807565b8114611ce5575f5ffd5b50565b5f81519050611cf681611cd2565b92915050565b5f8160020b9050919050565b611d1181611cfc565b8114611d1b575f5ffd5b50565b5f81519050611d2c81611d08565b92915050565b5f61ffff82169050919050565b611d4881611d32565b8114611d52575f5ffd5b50565b5f81519050611d6381611d3f565b92915050565b611d72816119d0565b8114611d7c575f5ffd5b50565b5f81519050611d8d81611d69565b92915050565b611d9c816118d2565b8114611da6575f5ffd5b50565b5f81519050611db781611d93565b92915050565b5f5f5f5f5f5f5f60e0888a031215611dd857611dd7611803565b5b5f611de58a828b01611ce8565b9750506020611df68a828b01611d1e565b9650506040611e078a828b01611d55565b9550506060611e188a828b01611d55565b9450506080611e298a828b01611d55565b93505060a0611e3a8a828b01611d7f565b92505060c0611e4b8a828b01611da9565b91505092959891949750929550565b5f8160011c9050919050565b5f5f8291508390505b6001851115611eaf57808604811115611e8b57611e8a611bd7565b5b6001851615611e9a5780820291505b8081029050611ea885611e5a565b9450611e6f565b94509492505050565b5f82611ec75760019050611f82565b81611ed4575f9050611f82565b8160018114611eea5760028114611ef457611f23565b6001915050611f82565b60ff841115611f0657611f05611bd7565b5b8360020a915084821115611f1d57611f1c611bd7565b5b50611f82565b5060208310610133831016604e8410600b8410161715611f585782820a905083811115611f5357611f52611bd7565b5b611f82565b611f658484846001611e66565b92509050818404811115611f7c57611f7b611bd7565b5b81810290505b9392505050565b5f611f9382611861565b9150611f9e836119d0565b9250611fcb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611eb8565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61200a82611861565b915061201583611861565b92508261202557612024611fd3565b5b828204905092915050565b5f6060820190506120435f830186611958565b6120506020830185611930565b61205d6040830184611930565b94935050505056fea2646970667358221220c170f3f79e9404792cff6951ad0d0bb678cf7b13539ae1f43a16b0baa21e5cc064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2CC8 CODESIZE SUB DUP1 PUSH2 0x2CC8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x74A JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x22E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP2 MLOAD GT PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A9 JUMPI PUSH2 0x1A8 PUSH2 0xB36 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x188 JUMP JUMPDEST POP PUSH2 0x228 CALLER PUSH10 0x69E10DE76676D0800000 PUSH2 0x2F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xC20 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x361 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x372 PUSH0 DUP4 DUP4 PUSH2 0x376 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x494 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x44F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x446 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x525 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x5EA DUP3 PUSH2 0x5A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x61B PUSH2 0x58F JUMP JUMPDEST SWAP1 POP PUSH2 0x627 DUP3 DUP3 PUSH2 0x5E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x646 JUMPI PUSH2 0x645 PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x684 DUP3 PUSH2 0x65B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x694 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP2 EQ PUSH2 0x69E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6AF DUP2 PUSH2 0x68B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C7 PUSH2 0x6C2 DUP5 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6E9 PUSH2 0x657 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x713 JUMPI DUP1 PUSH2 0x6FF DUP9 DUP3 PUSH2 0x6A1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6EC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x5A0 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x741 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x6B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x75F JUMPI PUSH2 0x75E PUSH2 0x598 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77C JUMPI PUSH2 0x77B PUSH2 0x59C JUMP JUMPDEST JUMPDEST PUSH2 0x788 DUP5 DUP3 DUP6 ADD PUSH2 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F2 JUMPI PUSH2 0x7F1 PUSH2 0x79B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x854 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x85E DUP7 DUP4 PUSH2 0x819 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8A2 PUSH2 0x89D PUSH2 0x898 DUP5 PUSH2 0x876 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH2 0x876 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BB DUP4 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x8CF PUSH2 0x8C7 DUP3 PUSH2 0x8A9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x825 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E6 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x8F1 DUP2 DUP5 DUP5 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x914 JUMPI PUSH2 0x909 PUSH0 DUP3 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x92A DUP2 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x933 DUP5 PUSH2 0x80A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x942 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x956 PUSH2 0x94E DUP6 PUSH2 0x80A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8F6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x979 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x95E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x991 DUP4 DUP4 PUSH2 0x96A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9AA DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C3 JUMPI PUSH2 0x9C2 PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST PUSH2 0x9CD DUP3 SLOAD PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x9D8 DUP3 DUP3 DUP6 PUSH2 0x918 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA09 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9F7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA01 DUP6 DUP3 PUSH2 0x986 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA68 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA17 DUP7 PUSH2 0x7F8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA3E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA19 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA5B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA57 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x96A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA79 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA92 PUSH0 DUP4 ADD DUP5 PUSH2 0xA70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652077686974656C69737465642061646472657373 PUSH0 DUP3 ADD MSTORE PUSH32 0x2072657175697265640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB02 PUSH1 0x29 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xB0D DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB9A DUP3 PUSH2 0x876 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA5 DUP4 PUSH2 0x876 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBD JUMPI PUSH2 0xBBC PUSH2 0xB63 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBCC DUP2 PUSH2 0x876 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBE5 PUSH0 DUP4 ADD DUP7 PUSH2 0xA70 JUMP JUMPDEST PUSH2 0xBF2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0xBFF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBC3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC1A PUSH0 DUP4 ADD DUP5 PUSH2 0xBC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x209B DUP1 PUSH2 0xC2D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xD0516650 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE43252D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x62A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xD0516650 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x5A4 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x50A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x46E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6290865D GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x3F8 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x382 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x158B1A57 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x30C JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1FA PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36C PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH2 0x9C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55E PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x614 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x655 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x681 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6E0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x6ED DUP2 DUP6 DUP6 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x702 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80C DUP5 DUP5 DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x82A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x9 SLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST GT ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x917 DUP3 DUP3 PUSH2 0x10A4 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CB PUSH2 0x101D JUMP JUMPDEST PUSH2 0x9D4 PUSH0 PUSH2 0x1123 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA7A SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9A SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC01 DUP4 DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD59 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF5A PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD3 DUP2 PUSH2 0x1123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFEA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFF9 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1006 DUP6 DUP3 DUP6 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1011 DUP6 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1025 PUSH2 0xFD6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1043 PUSH2 0xA35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A2 JUMPI PUSH2 0x1066 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1114 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F PUSH0 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x11F0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD DUP2 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1278 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1464 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1455 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1463 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1555 DUP4 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x159E SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1678 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1633 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16BF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1709 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1766 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B5 DUP3 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x17BF DUP2 DUP6 PUSH2 0x177D JUMP JUMPDEST SWAP4 POP PUSH2 0x17CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x179B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17FB DUP2 DUP5 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1830 DUP3 PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1840 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP2 EQ PUSH2 0x184A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185B DUP2 PUSH2 0x1837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1873 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP2 EQ PUSH2 0x187D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188E DUP2 PUSH2 0x186A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH0 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191A JUMPI PUSH2 0x1919 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1927 DUP5 DUP3 DUP6 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1939 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1952 PUSH0 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1961 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197A PUSH0 DUP4 ADD DUP5 PUSH2 0x1958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A4 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FE PUSH0 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD3 PUSH1 0x10 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADE DUP3 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3B PUSH1 0x19 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B46 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B68 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA3 PUSH1 0xF DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BD0 DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0E DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6B PUSH1 0x15 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C76 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA9 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCB PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDB DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF6 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D11 DUP2 PUSH2 0x1CFC JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2C DUP2 PUSH2 0x1D08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D63 DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D72 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D8D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9C DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DB7 DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1CE8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DF6 DUP11 DUP3 DUP12 ADD PUSH2 0x1D1E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1E07 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1E18 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1E29 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1E3A DUP11 DUP3 DUP12 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1E4B DUP11 DUP3 DUP12 ADD PUSH2 0x1DA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1EAF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E8B JUMPI PUSH2 0x1E8A PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E9A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1EA8 DUP6 PUSH2 0x1E5A JUMP JUMPDEST SWAP5 POP PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1EC7 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH2 0x1ED4 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EF4 JUMPI PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F82 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F58 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1F65 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F7C JUMPI PUSH2 0x1F7B PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F93 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9E DUP4 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FCB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x200A DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x2015 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2025 JUMPI PUSH2 0x2024 PUSH2 0x1FD3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2043 PUSH0 DUP4 ADD DUP7 PUSH2 0x1958 JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x205D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH17 0xF3F79E9404792CFF6951AD0D0BB678CF7B SGT MSTORE8 SWAP11 RJUMPI 0xF43A AND 0xB0 0xBA LOG2 0x1E TLOAD 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "378:4399:13:-:0;;;843:407;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;912:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;963:1:13::2;943:10;:17;:21;935:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1076:9;1088:1;1076:13;;1071:106;1095:10;:17;1091:1;:21;1071:106;;;1161:4;1134:9;:24;1144:10;1155:1;1144:13;;;;;;;;:::i;:::-;;;;;;;;1134:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1114:3;;;;;;;1071:106;;;;1189:31;1195:10;561:16;1189:5;;;:31;;:::i;:::-;843:407:::0;378:4399;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:554::-;3382:6;3431:2;3419:9;3410:7;3406:23;3402:32;3399:119;;;3437:79;;:::i;:::-;3399:119;3578:1;3567:9;3563:17;3557:24;3608:18;3600:6;3597:30;3594:117;;;3630:79;;:::i;:::-;3594:117;3735:89;3816:7;3807:6;3796:9;3792:22;3735:89;:::i;:::-;3725:99;;3528:306;3287:554;;;;:::o;3847:99::-;3899:6;3933:5;3927:12;3917:22;;3847:99;;;:::o;3952:180::-;4000:77;3997:1;3990:88;4097:4;4094:1;4087:15;4121:4;4118:1;4111:15;4138:320;4182:6;4219:1;4213:4;4209:12;4199:22;;4266:1;4260:4;4256:12;4287:18;4277:81;;4343:4;4335:6;4331:17;4321:27;;4277:81;4405:2;4397:6;4394:14;4374:18;4371:38;4368:84;;4424:18;;:::i;:::-;4368:84;4189:269;4138:320;;;:::o;4464:141::-;4513:4;4536:3;4528:11;;4559:3;4556:1;4549:14;4593:4;4590:1;4580:18;4572:26;;4464:141;;;:::o;4611:93::-;4648:6;4695:2;4690;4683:5;4679:14;4675:23;4665:33;;4611:93;;;:::o;4710:107::-;4754:8;4804:5;4798:4;4794:16;4773:37;;4710:107;;;;:::o;4823:393::-;4892:6;4942:1;4930:10;4926:18;4965:97;4995:66;4984:9;4965:97;:::i;:::-;5083:39;5113:8;5102:9;5083:39;:::i;:::-;5071:51;;5155:4;5151:9;5144:5;5140:21;5131:30;;5204:4;5194:8;5190:19;5183:5;5180:30;5170:40;;4899:317;;4823:393;;;;;:::o;5222:77::-;5259:7;5288:5;5277:16;;5222:77;;;:::o;5305:60::-;5333:3;5354:5;5347:12;;5305:60;;;:::o;5371:142::-;5421:9;5454:53;5472:34;5481:24;5499:5;5481:24;:::i;:::-;5472:34;:::i;:::-;5454:53;:::i;:::-;5441:66;;5371:142;;;:::o;5519:75::-;5562:3;5583:5;5576:12;;5519:75;;;:::o;5600:269::-;5710:39;5741:7;5710:39;:::i;:::-;5771:91;5820:41;5844:16;5820:41;:::i;:::-;5812:6;5805:4;5799:11;5771:91;:::i;:::-;5765:4;5758:105;5676:193;5600:269;;;:::o;5875:73::-;5920:3;5941:1;5934:8;;5875:73;:::o;5954:189::-;6031:32;;:::i;:::-;6072:65;6130:6;6122;6116:4;6072:65;:::i;:::-;6007:136;5954:189;;:::o;6149:186::-;6209:120;6226:3;6219:5;6216:14;6209:120;;;6280:39;6317:1;6310:5;6280:39;:::i;:::-;6253:1;6246:5;6242:13;6233:22;;6209:120;;;6149:186;;:::o;6341:543::-;6442:2;6437:3;6434:11;6431:446;;;6476:38;6508:5;6476:38;:::i;:::-;6560:29;6578:10;6560:29;:::i;:::-;6550:8;6546:44;6743:2;6731:10;6728:18;6725:49;;;6764:8;6749:23;;6725:49;6787:80;6843:22;6861:3;6843:22;:::i;:::-;6833:8;6829:37;6816:11;6787:80;:::i;:::-;6446:431;;6431:446;6341:543;;;:::o;6890:117::-;6944:8;6994:5;6988:4;6984:16;6963:37;;6890:117;;;;:::o;7013:169::-;7057:6;7090:51;7138:1;7134:6;7126:5;7123:1;7119:13;7090:51;:::i;:::-;7086:56;7171:4;7165;7161:15;7151:25;;7064:118;7013:169;;;;:::o;7187:295::-;7263:4;7409:29;7434:3;7428:4;7409:29;:::i;:::-;7401:37;;7471:3;7468:1;7464:11;7458:4;7455:21;7447:29;;7187:295;;;;:::o;7487:1395::-;7604:37;7637:3;7604:37;:::i;:::-;7706:18;7698:6;7695:30;7692:56;;;7728:18;;:::i;:::-;7692:56;7772:38;7804:4;7798:11;7772:38;:::i;:::-;7857:67;7917:6;7909;7903:4;7857:67;:::i;:::-;7951:1;7975:4;7962:17;;8007:2;7999:6;7996:14;8024:1;8019:618;;;;8681:1;8698:6;8695:77;;;8747:9;8742:3;8738:19;8732:26;8723:35;;8695:77;8798:67;8858:6;8851:5;8798:67;:::i;:::-;8792:4;8785:81;8654:222;7989:887;;8019:618;8071:4;8067:9;8059:6;8055:22;8105:37;8137:4;8105:37;:::i;:::-;8164:1;8178:208;8192:7;8189:1;8186:14;8178:208;;;8271:9;8266:3;8262:19;8256:26;8248:6;8241:42;8322:1;8314:6;8310:14;8300:24;;8369:2;8358:9;8354:18;8341:31;;8215:4;8212:1;8208:12;8203:17;;8178:208;;;8414:6;8405:7;8402:19;8399:179;;;8472:9;8467:3;8463:19;8457:26;8515:48;8557:4;8549:6;8545:17;8534:9;8515:48;:::i;:::-;8507:6;8500:64;8422:156;8399:179;8624:1;8620;8612:6;8608:14;8604:22;8598:4;8591:36;8026:611;;;7989:887;;7579:1303;;;7487:1395;;:::o;8888:118::-;8975:24;8993:5;8975:24;:::i;:::-;8970:3;8963:37;8888:118;;:::o;9012:222::-;9105:4;9143:2;9132:9;9128:18;9120:26;;9156:71;9224:1;9213:9;9209:17;9200:6;9156:71;:::i;:::-;9012:222;;;;:::o;9240:169::-;9324:11;9358:6;9353:3;9346:19;9398:4;9393:3;9389:14;9374:29;;9240:169;;;;:::o;9415:228::-;9555:34;9551:1;9543:6;9539:14;9532:58;9624:11;9619:2;9611:6;9607:15;9600:36;9415:228;:::o;9649:366::-;9791:3;9812:67;9876:2;9871:3;9812:67;:::i;:::-;9805:74;;9888:93;9977:3;9888:93;:::i;:::-;10006:2;10001:3;9997:12;9990:19;;9649:366;;;:::o;10021:419::-;10187:4;10225:2;10214:9;10210:18;10202:26;;10274:9;10268:4;10264:20;10260:1;10249:9;10245:17;10238:47;10302:131;10428:4;10302:131;:::i;:::-;10294:139;;10021:419;;;:::o;10446:180::-;10494:77;10491:1;10484:88;10591:4;10588:1;10581:15;10615:4;10612:1;10605:15;10632:180;10680:77;10677:1;10670:88;10777:4;10774:1;10767:15;10801:4;10798:1;10791:15;10818:191;10858:3;10877:20;10895:1;10877:20;:::i;:::-;10872:25;;10911:20;10929:1;10911:20;:::i;:::-;10906:25;;10954:1;10951;10947:9;10940:16;;10975:3;10972:1;10969:10;10966:36;;;10982:18;;:::i;:::-;10966:36;10818:191;;;;:::o;11015:118::-;11102:24;11120:5;11102:24;:::i;:::-;11097:3;11090:37;11015:118;;:::o;11139:442::-;11288:4;11326:2;11315:9;11311:18;11303:26;;11339:71;11407:1;11396:9;11392:17;11383:6;11339:71;:::i;:::-;11420:72;11488:2;11477:9;11473:18;11464:6;11420:72;:::i;:::-;11502;11570:2;11559:9;11555:18;11546:6;11502:72;:::i;:::-;11139:442;;;;;;:::o;11587:222::-;11680:4;11718:2;11707:9;11703:18;11695:26;;11731:71;11799:1;11788:9;11784:17;11775:6;11731:71;:::i;:::-;11587:222;;;;:::o;378:4399:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1394": {
									"entryPoint": 2653,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 4061,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4616,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4125,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4260,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4054,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5079,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4387,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 5226,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5466,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToWhitelist_1470": {
									"entryPoint": 3505,
									"id": 1470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3279,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1750,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfUser_1736": {
									"entryPoint": 1784,
									"id": 1736,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2430,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@compliance_1567": {
									"entryPoint": 2423,
									"id": 1567,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1724": {
									"entryPoint": 2075,
									"id": 1724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezeUser_1498": {
									"entryPoint": 3409,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@frozen_1402": {
									"entryPoint": 3220,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentPrice_1772": {
									"entryPoint": 3683,
									"id": 1772,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFrozenTokens_1600": {
									"entryPoint": 1808,
									"id": 1600,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@identityRegistry_1555": {
									"entryPoint": 1801,
									"id": 1555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFrozen_1589": {
									"entryPoint": 3601,
									"id": 1589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1715": {
									"entryPoint": 2082,
									"id": 1715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintedAmount_1406": {
									"entryPoint": 2069,
									"id": 1406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1606,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onchainID_1534": {
									"entryPoint": 3081,
									"id": 1534,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2613,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1576": {
									"entryPoint": 2416,
									"id": 1576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingSupply_1522": {
									"entryPoint": 3249,
									"id": 1522,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_1484": {
									"entryPoint": 2518,
									"id": 1484,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2499,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2667,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1817,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1680": {
									"entryPoint": 1826,
									"id": 1680,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 4079,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3922,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1639": {
									"entryPoint": 2840,
									"id": 1639,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 4582,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreezeUser_1512": {
									"entryPoint": 3125,
									"id": 1512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapPool_1404": {
									"entryPoint": 3088,
									"id": 1404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@version_1543": {
									"entryPoint": 2355,
									"id": 1543,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whitelist_1398": {
									"entryPoint": 2811,
									"id": 1398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 7400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 7474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0": {
									"entryPoint": 7023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 7378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16868:15",
										"nodeType": "YulBlock",
										"src": "0:16868:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "208:73:15",
													"nodeType": "YulBlock",
													"src": "208:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:15"
																},
																"nativeSrc": "218:19:15",
																"nodeType": "YulFunctionCall",
																"src": "218:19:15"
															},
															"nativeSrc": "218:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:15"
														},
														{
															"nativeSrc": "246:29:15",
															"nodeType": "YulAssignment",
															"src": "246:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:15",
																		"nodeType": "YulLiteral",
																		"src": "270:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:15"
																},
																"nativeSrc": "261:14:15",
																"nodeType": "YulFunctionCall",
																"src": "261:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:15",
														"nodeType": "YulTypedName",
														"src": "180:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:15",
														"nodeType": "YulTypedName",
														"src": "185:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:15",
														"nodeType": "YulTypedName",
														"src": "196:11:15",
														"type": ""
													}
												],
												"src": "112:169:15"
											},
											{
												"body": {
													"nativeSrc": "349:77:15",
													"nodeType": "YulBlock",
													"src": "349:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:15"
																},
																"nativeSrc": "360:23:15",
																"nodeType": "YulFunctionCall",
																"src": "360:23:15"
															},
															"nativeSrc": "360:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:15"
																		},
																		"nativeSrc": "399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:15",
																		"nodeType": "YulLiteral",
																		"src": "417:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:15"
																},
																"nativeSrc": "392:27:15",
																"nodeType": "YulFunctionCall",
																"src": "392:27:15"
															},
															"nativeSrc": "392:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:15",
														"nodeType": "YulTypedName",
														"src": "331:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:15",
														"nodeType": "YulTypedName",
														"src": "336:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:15",
														"nodeType": "YulTypedName",
														"src": "341:6:15",
														"type": ""
													}
												],
												"src": "287:139:15"
											},
											{
												"body": {
													"nativeSrc": "480:54:15",
													"nodeType": "YulBlock",
													"src": "480:54:15",
													"statements": [
														{
															"nativeSrc": "490:38:15",
															"nodeType": "YulAssignment",
															"src": "490:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "515:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:15"
																		},
																		"nativeSrc": "504:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:15",
																				"nodeType": "YulLiteral",
																				"src": "524:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:15"
																		},
																		"nativeSrc": "520:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:15"
																},
																"nativeSrc": "500:28:15",
																"nodeType": "YulFunctionCall",
																"src": "500:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:15",
														"nodeType": "YulTypedName",
														"src": "463:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:15",
														"nodeType": "YulTypedName",
														"src": "473:6:15",
														"type": ""
													}
												],
												"src": "432:102:15"
											},
											{
												"body": {
													"nativeSrc": "632:285:15",
													"nodeType": "YulBlock",
													"src": "632:285:15",
													"statements": [
														{
															"nativeSrc": "642:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:15"
																},
																"nativeSrc": "656:39:15",
																"nodeType": "YulFunctionCall",
																"src": "656:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:15",
																	"nodeType": "YulTypedName",
																	"src": "646:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:15",
															"nodeType": "YulAssignment",
															"src": "704:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:15"
																},
																"nativeSrc": "711:71:15",
																"nodeType": "YulFunctionCall",
																"src": "711:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:15",
																				"nodeType": "YulLiteral",
																				"src": "837:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:15"
																		},
																		"nativeSrc": "826:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:15"
																},
																"nativeSrc": "791:65:15",
																"nodeType": "YulFunctionCall",
																"src": "791:65:15"
															},
															"nativeSrc": "791:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:15"
														},
														{
															"nativeSrc": "865:46:15",
															"nodeType": "YulAssignment",
															"src": "865:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:15"
																		},
																		"nativeSrc": "881:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:15"
																},
																"nativeSrc": "872:39:15",
																"nodeType": "YulFunctionCall",
																"src": "872:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:15",
														"nodeType": "YulTypedName",
														"src": "613:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:15",
														"nodeType": "YulTypedName",
														"src": "620:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:15",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"src": "540:377:15"
											},
											{
												"body": {
													"nativeSrc": "1041:195:15",
													"nodeType": "YulBlock",
													"src": "1041:195:15",
													"statements": [
														{
															"nativeSrc": "1051:26:15",
															"nodeType": "YulAssignment",
															"src": "1051:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:15"
																},
																"nativeSrc": "1059:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:15"
																		},
																		"nativeSrc": "1094:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:15"
																		},
																		"nativeSrc": "1113:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:15"
																},
																"nativeSrc": "1087:47:15",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:15"
															},
															"nativeSrc": "1087:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:15"
														},
														{
															"nativeSrc": "1143:86:15",
															"nodeType": "YulAssignment",
															"src": "1143:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:15"
																},
																"nativeSrc": "1151:78:15",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:15",
														"nodeType": "YulTypedName",
														"src": "1013:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:15",
														"nodeType": "YulTypedName",
														"src": "1025:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:15",
														"nodeType": "YulTypedName",
														"src": "1036:4:15",
														"type": ""
													}
												],
												"src": "923:313:15"
											},
											{
												"body": {
													"nativeSrc": "1282:35:15",
													"nodeType": "YulBlock",
													"src": "1282:35:15",
													"statements": [
														{
															"nativeSrc": "1292:19:15",
															"nodeType": "YulAssignment",
															"src": "1292:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:15"
																},
																"nativeSrc": "1302:9:15",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:15",
														"nodeType": "YulTypedName",
														"src": "1275:6:15",
														"type": ""
													}
												],
												"src": "1242:75:15"
											},
											{
												"body": {
													"nativeSrc": "1412:28:15",
													"nodeType": "YulBlock",
													"src": "1412:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:15"
																},
																"nativeSrc": "1422:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:15"
															},
															"nativeSrc": "1422:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:15"
											},
											{
												"body": {
													"nativeSrc": "1535:28:15",
													"nodeType": "YulBlock",
													"src": "1535:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:15"
																},
																"nativeSrc": "1545:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:15"
															},
															"nativeSrc": "1545:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:15"
											},
											{
												"body": {
													"nativeSrc": "1614:81:15",
													"nodeType": "YulBlock",
													"src": "1614:81:15",
													"statements": [
														{
															"nativeSrc": "1624:65:15",
															"nodeType": "YulAssignment",
															"src": "1624:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:15"
																},
																"nativeSrc": "1635:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:15",
														"nodeType": "YulTypedName",
														"src": "1596:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:15",
														"nodeType": "YulTypedName",
														"src": "1606:7:15",
														"type": ""
													}
												],
												"src": "1569:126:15"
											},
											{
												"body": {
													"nativeSrc": "1746:51:15",
													"nodeType": "YulBlock",
													"src": "1746:51:15",
													"statements": [
														{
															"nativeSrc": "1756:35:15",
															"nodeType": "YulAssignment",
															"src": "1756:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:15"
																},
																"nativeSrc": "1767:24:15",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:15",
														"nodeType": "YulTypedName",
														"src": "1728:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:15",
														"nodeType": "YulTypedName",
														"src": "1738:7:15",
														"type": ""
													}
												],
												"src": "1701:96:15"
											},
											{
												"body": {
													"nativeSrc": "1846:79:15",
													"nodeType": "YulBlock",
													"src": "1846:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:15",
																"nodeType": "YulBlock",
																"src": "1903:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:15"
																			},
																			"nativeSrc": "1905:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:15"
																		},
																		"nativeSrc": "1905:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:15"
																				},
																				"nativeSrc": "1876:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:15"
																		},
																		"nativeSrc": "1866:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:15"
																},
																"nativeSrc": "1859:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:15"
															},
															"nativeSrc": "1856:63:15",
															"nodeType": "YulIf",
															"src": "1856:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:15",
														"nodeType": "YulTypedName",
														"src": "1839:5:15",
														"type": ""
													}
												],
												"src": "1803:122:15"
											},
											{
												"body": {
													"nativeSrc": "1983:87:15",
													"nodeType": "YulBlock",
													"src": "1983:87:15",
													"statements": [
														{
															"nativeSrc": "1993:29:15",
															"nodeType": "YulAssignment",
															"src": "1993:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:15"
																},
																"nativeSrc": "2002:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:15"
																},
																"nativeSrc": "2031:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:15"
															},
															"nativeSrc": "2031:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:15",
														"nodeType": "YulTypedName",
														"src": "1961:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:15",
														"nodeType": "YulTypedName",
														"src": "1969:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:15",
														"nodeType": "YulTypedName",
														"src": "1977:5:15",
														"type": ""
													}
												],
												"src": "1931:139:15"
											},
											{
												"body": {
													"nativeSrc": "2121:32:15",
													"nodeType": "YulBlock",
													"src": "2121:32:15",
													"statements": [
														{
															"nativeSrc": "2131:16:15",
															"nodeType": "YulAssignment",
															"src": "2131:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:15",
																"nodeType": "YulIdentifier",
																"src": "2142:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:15",
														"nodeType": "YulTypedName",
														"src": "2103:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:15",
														"nodeType": "YulTypedName",
														"src": "2113:7:15",
														"type": ""
													}
												],
												"src": "2076:77:15"
											},
											{
												"body": {
													"nativeSrc": "2202:79:15",
													"nodeType": "YulBlock",
													"src": "2202:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:15",
																"nodeType": "YulBlock",
																"src": "2259:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:15"
																			},
																			"nativeSrc": "2261:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:15"
																		},
																		"nativeSrc": "2261:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:15"
																				},
																				"nativeSrc": "2232:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:15"
																		},
																		"nativeSrc": "2222:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:15"
																},
																"nativeSrc": "2215:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:15"
															},
															"nativeSrc": "2212:63:15",
															"nodeType": "YulIf",
															"src": "2212:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:15",
														"nodeType": "YulTypedName",
														"src": "2195:5:15",
														"type": ""
													}
												],
												"src": "2159:122:15"
											},
											{
												"body": {
													"nativeSrc": "2339:87:15",
													"nodeType": "YulBlock",
													"src": "2339:87:15",
													"statements": [
														{
															"nativeSrc": "2349:29:15",
															"nodeType": "YulAssignment",
															"src": "2349:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:15"
																},
																"nativeSrc": "2358:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:15"
																},
																"nativeSrc": "2387:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:15"
															},
															"nativeSrc": "2387:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:15",
														"nodeType": "YulTypedName",
														"src": "2317:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:15",
														"nodeType": "YulTypedName",
														"src": "2325:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:15",
														"nodeType": "YulTypedName",
														"src": "2333:5:15",
														"type": ""
													}
												],
												"src": "2287:139:15"
											},
											{
												"body": {
													"nativeSrc": "2515:391:15",
													"nodeType": "YulBlock",
													"src": "2515:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:15",
																"nodeType": "YulBlock",
																"src": "2561:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:15"
																			},
																			"nativeSrc": "2563:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:15"
																		},
																		"nativeSrc": "2563:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:15"
																		},
																		"nativeSrc": "2532:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:15"
																},
																"nativeSrc": "2528:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:15"
															},
															"nativeSrc": "2525:119:15",
															"nodeType": "YulIf",
															"src": "2525:119:15"
														},
														{
															"nativeSrc": "2654:117:15",
															"nodeType": "YulBlock",
															"src": "2654:117:15",
															"statements": [
																{
																	"nativeSrc": "2669:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:15"
																				},
																				"nativeSrc": "2729:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:15"
																		},
																		"nativeSrc": "2708:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:15",
															"nodeType": "YulBlock",
															"src": "2781:118:15",
															"statements": [
																{
																	"nativeSrc": "2796:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:15"
																				},
																				"nativeSrc": "2857:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:15"
																		},
																		"nativeSrc": "2836:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:15",
														"nodeType": "YulTypedName",
														"src": "2477:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:15",
														"nodeType": "YulTypedName",
														"src": "2488:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:15",
														"nodeType": "YulTypedName",
														"src": "2500:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:15",
														"nodeType": "YulTypedName",
														"src": "2508:6:15",
														"type": ""
													}
												],
												"src": "2432:474:15"
											},
											{
												"body": {
													"nativeSrc": "2954:48:15",
													"nodeType": "YulBlock",
													"src": "2954:48:15",
													"statements": [
														{
															"nativeSrc": "2964:32:15",
															"nodeType": "YulAssignment",
															"src": "2964:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:15"
																		},
																		"nativeSrc": "2982:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:15"
																},
																"nativeSrc": "2975:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:15",
														"nodeType": "YulTypedName",
														"src": "2936:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:15",
														"nodeType": "YulTypedName",
														"src": "2946:7:15",
														"type": ""
													}
												],
												"src": "2912:90:15"
											},
											{
												"body": {
													"nativeSrc": "3067:50:15",
													"nodeType": "YulBlock",
													"src": "3067:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:15"
																		},
																		"nativeSrc": "3089:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:15"
																},
																"nativeSrc": "3077:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:15"
															},
															"nativeSrc": "3077:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:15",
														"nodeType": "YulTypedName",
														"src": "3055:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:15",
														"nodeType": "YulTypedName",
														"src": "3062:3:15",
														"type": ""
													}
												],
												"src": "3008:109:15"
											},
											{
												"body": {
													"nativeSrc": "3215:118:15",
													"nodeType": "YulBlock",
													"src": "3215:118:15",
													"statements": [
														{
															"nativeSrc": "3225:26:15",
															"nodeType": "YulAssignment",
															"src": "3225:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:15"
																},
																"nativeSrc": "3233:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:15"
																		},
																		"nativeSrc": "3308:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:15"
																},
																"nativeSrc": "3261:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:15"
															},
															"nativeSrc": "3261:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:15",
														"nodeType": "YulTypedName",
														"src": "3187:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:15",
														"nodeType": "YulTypedName",
														"src": "3199:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:15",
														"nodeType": "YulTypedName",
														"src": "3210:4:15",
														"type": ""
													}
												],
												"src": "3123:210:15"
											},
											{
												"body": {
													"nativeSrc": "3405:263:15",
													"nodeType": "YulBlock",
													"src": "3405:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:15",
																"nodeType": "YulBlock",
																"src": "3451:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:15"
																			},
																			"nativeSrc": "3453:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:15"
																		},
																		"nativeSrc": "3453:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:15"
																		},
																		"nativeSrc": "3422:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:15"
																},
																"nativeSrc": "3418:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:15"
															},
															"nativeSrc": "3415:119:15",
															"nodeType": "YulIf",
															"src": "3415:119:15"
														},
														{
															"nativeSrc": "3544:117:15",
															"nodeType": "YulBlock",
															"src": "3544:117:15",
															"statements": [
																{
																	"nativeSrc": "3559:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:15"
																				},
																				"nativeSrc": "3619:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:15"
																		},
																		"nativeSrc": "3598:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:15",
														"nodeType": "YulTypedName",
														"src": "3375:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:15",
														"nodeType": "YulTypedName",
														"src": "3386:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:15",
														"nodeType": "YulTypedName",
														"src": "3398:6:15",
														"type": ""
													}
												],
												"src": "3339:329:15"
											},
											{
												"body": {
													"nativeSrc": "3739:53:15",
													"nodeType": "YulBlock",
													"src": "3739:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:15"
																		},
																		"nativeSrc": "3761:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:15"
																},
																"nativeSrc": "3749:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:15"
															},
															"nativeSrc": "3749:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:15",
														"nodeType": "YulTypedName",
														"src": "3727:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:15",
														"nodeType": "YulTypedName",
														"src": "3734:3:15",
														"type": ""
													}
												],
												"src": "3674:118:15"
											},
											{
												"body": {
													"nativeSrc": "3896:124:15",
													"nodeType": "YulBlock",
													"src": "3896:124:15",
													"statements": [
														{
															"nativeSrc": "3906:26:15",
															"nodeType": "YulAssignment",
															"src": "3906:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:15"
																},
																"nativeSrc": "3914:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:15"
																		},
																		"nativeSrc": "3995:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:15"
																},
																"nativeSrc": "3942:71:15",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:15"
															},
															"nativeSrc": "3942:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:15",
														"nodeType": "YulTypedName",
														"src": "3868:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:15",
														"nodeType": "YulTypedName",
														"src": "3880:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:15",
														"nodeType": "YulTypedName",
														"src": "3891:4:15",
														"type": ""
													}
												],
												"src": "3798:222:15"
											},
											{
												"body": {
													"nativeSrc": "4091:53:15",
													"nodeType": "YulBlock",
													"src": "4091:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4108:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4131:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4131:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4113:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "4113:17:15"
																		},
																		"nativeSrc": "4113:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:15"
																},
																"nativeSrc": "4101:37:15",
																"nodeType": "YulFunctionCall",
																"src": "4101:37:15"
															},
															"nativeSrc": "4101:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "4101:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4026:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4079:5:15",
														"nodeType": "YulTypedName",
														"src": "4079:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4086:3:15",
														"nodeType": "YulTypedName",
														"src": "4086:3:15",
														"type": ""
													}
												],
												"src": "4026:118:15"
											},
											{
												"body": {
													"nativeSrc": "4248:124:15",
													"nodeType": "YulBlock",
													"src": "4248:124:15",
													"statements": [
														{
															"nativeSrc": "4258:26:15",
															"nodeType": "YulAssignment",
															"src": "4258:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4281:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:15"
																},
																"nativeSrc": "4266:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4266:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4258:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4258:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4338:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4351:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4362:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:15"
																		},
																		"nativeSrc": "4347:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4294:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "4294:43:15"
																},
																"nativeSrc": "4294:71:15",
																"nodeType": "YulFunctionCall",
																"src": "4294:71:15"
															},
															"nativeSrc": "4294:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "4294:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4150:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:15",
														"nodeType": "YulTypedName",
														"src": "4220:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4232:6:15",
														"nodeType": "YulTypedName",
														"src": "4232:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4243:4:15",
														"nodeType": "YulTypedName",
														"src": "4243:4:15",
														"type": ""
													}
												],
												"src": "4150:222:15"
											},
											{
												"body": {
													"nativeSrc": "4478:519:15",
													"nodeType": "YulBlock",
													"src": "4478:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4524:83:15",
																"nodeType": "YulBlock",
																"src": "4524:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4526:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4526:77:15"
																			},
																			"nativeSrc": "4526:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:79:15"
																		},
																		"nativeSrc": "4526:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4499:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4499:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4495:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:15"
																		},
																		"nativeSrc": "4495:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4520:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4491:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:15"
																},
																"nativeSrc": "4491:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4491:32:15"
															},
															"nativeSrc": "4488:119:15",
															"nodeType": "YulIf",
															"src": "4488:119:15"
														},
														{
															"nativeSrc": "4617:117:15",
															"nodeType": "YulBlock",
															"src": "4617:117:15",
															"statements": [
																{
																	"nativeSrc": "4632:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4632:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4646:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4646:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4636:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4636:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4661:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4661:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4696:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4696:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4707:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4692:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4692:3:15"
																				},
																				"nativeSrc": "4692:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4692:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4716:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4671:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4671:20:15"
																		},
																		"nativeSrc": "4671:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4661:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4661:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4744:118:15",
															"nodeType": "YulBlock",
															"src": "4744:118:15",
															"statements": [
																{
																	"nativeSrc": "4759:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4759:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4773:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4773:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4763:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4763:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4789:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4789:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4824:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4824:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4835:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4835:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4820:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:15"
																				},
																				"nativeSrc": "4820:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4820:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4844:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4799:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4799:20:15"
																		},
																		"nativeSrc": "4799:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4789:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4789:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4872:118:15",
															"nodeType": "YulBlock",
															"src": "4872:118:15",
															"statements": [
																{
																	"nativeSrc": "4887:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4887:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4901:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4891:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4891:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:15"
																				},
																				"nativeSrc": "4948:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:15"
																		},
																		"nativeSrc": "4927:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4917:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4378:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4432:9:15",
														"nodeType": "YulTypedName",
														"src": "4432:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4443:7:15",
														"nodeType": "YulTypedName",
														"src": "4443:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4455:6:15",
														"nodeType": "YulTypedName",
														"src": "4455:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4463:6:15",
														"nodeType": "YulTypedName",
														"src": "4463:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4471:6:15",
														"nodeType": "YulTypedName",
														"src": "4471:6:15",
														"type": ""
													}
												],
												"src": "4378:619:15"
											},
											{
												"body": {
													"nativeSrc": "5046:43:15",
													"nodeType": "YulBlock",
													"src": "5046:43:15",
													"statements": [
														{
															"nativeSrc": "5056:27:15",
															"nodeType": "YulAssignment",
															"src": "5056:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5071:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5071:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5067:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:15"
																},
																"nativeSrc": "5067:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5067:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5056:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5056:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5003:86:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5028:5:15",
														"nodeType": "YulTypedName",
														"src": "5028:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5038:7:15",
														"nodeType": "YulTypedName",
														"src": "5038:7:15",
														"type": ""
													}
												],
												"src": "5003:86:15"
											},
											{
												"body": {
													"nativeSrc": "5156:51:15",
													"nodeType": "YulBlock",
													"src": "5156:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5194:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5178:15:15",
																			"nodeType": "YulIdentifier",
																			"src": "5178:15:15"
																		},
																		"nativeSrc": "5178:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5178:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:15"
																},
																"nativeSrc": "5166:35:15",
																"nodeType": "YulFunctionCall",
																"src": "5166:35:15"
															},
															"nativeSrc": "5166:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "5166:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5095:112:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5144:5:15",
														"nodeType": "YulTypedName",
														"src": "5144:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5151:3:15",
														"nodeType": "YulTypedName",
														"src": "5151:3:15",
														"type": ""
													}
												],
												"src": "5095:112:15"
											},
											{
												"body": {
													"nativeSrc": "5307:120:15",
													"nodeType": "YulBlock",
													"src": "5307:120:15",
													"statements": [
														{
															"nativeSrc": "5317:26:15",
															"nodeType": "YulAssignment",
															"src": "5317:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5329:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5329:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5325:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:15"
																},
																"nativeSrc": "5325:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5325:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5317:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5317:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:15"
																		},
																		"nativeSrc": "5402:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5353:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "5353:39:15"
																},
																"nativeSrc": "5353:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5353:67:15"
															},
															"nativeSrc": "5353:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "5353:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5213:214:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:15",
														"nodeType": "YulTypedName",
														"src": "5279:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5291:6:15",
														"nodeType": "YulTypedName",
														"src": "5291:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5302:4:15",
														"nodeType": "YulTypedName",
														"src": "5302:4:15",
														"type": ""
													}
												],
												"src": "5213:214:15"
											},
											{
												"body": {
													"nativeSrc": "5516:391:15",
													"nodeType": "YulBlock",
													"src": "5516:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:15",
																"nodeType": "YulBlock",
																"src": "5562:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:15"
																			},
																			"nativeSrc": "5564:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:15"
																		},
																		"nativeSrc": "5564:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:15"
																		},
																		"nativeSrc": "5533:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:15"
																},
																"nativeSrc": "5529:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:15"
															},
															"nativeSrc": "5526:119:15",
															"nodeType": "YulIf",
															"src": "5526:119:15"
														},
														{
															"nativeSrc": "5655:117:15",
															"nodeType": "YulBlock",
															"src": "5655:117:15",
															"statements": [
																{
																	"nativeSrc": "5670:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:15"
																				},
																				"nativeSrc": "5730:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:15"
																		},
																		"nativeSrc": "5709:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:15",
															"nodeType": "YulBlock",
															"src": "5782:118:15",
															"statements": [
																{
																	"nativeSrc": "5797:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:15"
																				},
																				"nativeSrc": "5858:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:15"
																		},
																		"nativeSrc": "5837:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:15",
														"nodeType": "YulTypedName",
														"src": "5478:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:15",
														"nodeType": "YulTypedName",
														"src": "5489:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:15",
														"nodeType": "YulTypedName",
														"src": "5501:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:15",
														"nodeType": "YulTypedName",
														"src": "5509:6:15",
														"type": ""
													}
												],
												"src": "5433:474:15"
											},
											{
												"body": {
													"nativeSrc": "5941:152:15",
													"nodeType": "YulBlock",
													"src": "5941:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:15",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:15"
																},
																"nativeSrc": "5951:88:15",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:15"
															},
															"nativeSrc": "5951:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:15"
																},
																"nativeSrc": "6048:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:15"
															},
															"nativeSrc": "6048:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:15"
																},
																"nativeSrc": "6072:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:15"
															},
															"nativeSrc": "6072:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:15"
											},
											{
												"body": {
													"nativeSrc": "6150:269:15",
													"nodeType": "YulBlock",
													"src": "6150:269:15",
													"statements": [
														{
															"nativeSrc": "6160:22:15",
															"nodeType": "YulAssignment",
															"src": "6160:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:15"
																},
																"nativeSrc": "6170:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:15"
																}
															]
														},
														{
															"nativeSrc": "6191:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:15"
																},
																"nativeSrc": "6217:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:15",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:15",
																"nodeType": "YulBlock",
																"src": "6268:51:15",
																"statements": [
																	{
																		"nativeSrc": "6282:27:15",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:15"
																			},
																			"nativeSrc": "6292:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:15"
																},
																"nativeSrc": "6241:26:15",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:15"
															},
															"nativeSrc": "6238:81:15",
															"nodeType": "YulIf",
															"src": "6238:81:15"
														},
														{
															"body": {
																"nativeSrc": "6371:42:15",
																"nodeType": "YulBlock",
																"src": "6371:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:15"
																			},
																			"nativeSrc": "6385:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:15"
																		},
																		"nativeSrc": "6385:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:15"
																		},
																		"nativeSrc": "6355:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:15"
																},
																"nativeSrc": "6332:38:15",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:15"
															},
															"nativeSrc": "6329:84:15",
															"nodeType": "YulIf",
															"src": "6329:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:15",
														"nodeType": "YulTypedName",
														"src": "6134:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:15",
														"nodeType": "YulTypedName",
														"src": "6143:6:15",
														"type": ""
													}
												],
												"src": "6099:320:15"
											},
											{
												"body": {
													"nativeSrc": "6531:60:15",
													"nodeType": "YulBlock",
													"src": "6531:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:15"
																		},
																		"nativeSrc": "6549:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:15"
																	},
																	{
																		"hexValue": "53656e6465722069732066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "6565:18:15",
																		"nodeType": "YulLiteral",
																		"src": "6565:18:15",
																		"type": "",
																		"value": "Sender is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:15"
																},
																"nativeSrc": "6542:42:15",
																"nodeType": "YulFunctionCall",
																"src": "6542:42:15"
															},
															"nativeSrc": "6542:42:15",
															"nodeType": "YulExpressionStatement",
															"src": "6542:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
												"nativeSrc": "6425:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:15",
														"nodeType": "YulTypedName",
														"src": "6523:6:15",
														"type": ""
													}
												],
												"src": "6425:166:15"
											},
											{
												"body": {
													"nativeSrc": "6743:220:15",
													"nodeType": "YulBlock",
													"src": "6743:220:15",
													"statements": [
														{
															"nativeSrc": "6753:74:15",
															"nodeType": "YulAssignment",
															"src": "6753:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6819:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6819:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6824:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6824:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6760:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "6760:58:15"
																},
																"nativeSrc": "6760:67:15",
																"nodeType": "YulFunctionCall",
																"src": "6760:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6753:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6753:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6925:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6925:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																	"nativeSrc": "6836:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "6836:88:15"
																},
																"nativeSrc": "6836:93:15",
																"nodeType": "YulFunctionCall",
																"src": "6836:93:15"
															},
															"nativeSrc": "6836:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "6836:93:15"
														},
														{
															"nativeSrc": "6938:19:15",
															"nodeType": "YulAssignment",
															"src": "6938:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6949:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6949:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6954:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6945:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6945:3:15"
																},
																"nativeSrc": "6945:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6945:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6938:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6938:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6597:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6731:3:15",
														"nodeType": "YulTypedName",
														"src": "6731:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6739:3:15",
														"nodeType": "YulTypedName",
														"src": "6739:3:15",
														"type": ""
													}
												],
												"src": "6597:366:15"
											},
											{
												"body": {
													"nativeSrc": "7140:248:15",
													"nodeType": "YulBlock",
													"src": "7140:248:15",
													"statements": [
														{
															"nativeSrc": "7150:26:15",
															"nodeType": "YulAssignment",
															"src": "7150:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7162:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7162:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7173:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7173:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7158:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:15"
																},
																"nativeSrc": "7158:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7158:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7150:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7150:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7197:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7197:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7208:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7208:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7193:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7193:3:15"
																		},
																		"nativeSrc": "7193:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7193:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7216:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7216:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7222:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7222:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7212:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7212:3:15"
																		},
																		"nativeSrc": "7212:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7186:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:15"
																},
																"nativeSrc": "7186:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7186:47:15"
															},
															"nativeSrc": "7186:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7186:47:15"
														},
														{
															"nativeSrc": "7242:139:15",
															"nodeType": "YulAssignment",
															"src": "7242:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7376:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7376:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7250:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "7250:124:15"
																},
																"nativeSrc": "7250:131:15",
																"nodeType": "YulFunctionCall",
																"src": "7250:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7242:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7242:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6969:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7120:9:15",
														"nodeType": "YulTypedName",
														"src": "7120:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7135:4:15",
														"nodeType": "YulTypedName",
														"src": "7135:4:15",
														"type": ""
													}
												],
												"src": "6969:419:15"
											},
											{
												"body": {
													"nativeSrc": "7500:69:15",
													"nodeType": "YulBlock",
													"src": "7500:69:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7522:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7522:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7530:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7530:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7518:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:15"
																		},
																		"nativeSrc": "7518:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7518:14:15"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
																		"kind": "string",
																		"nativeSrc": "7534:27:15",
																		"nodeType": "YulLiteral",
																		"src": "7534:27:15",
																		"type": "",
																		"value": "Amount must be an integer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7511:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7511:6:15"
																},
																"nativeSrc": "7511:51:15",
																"nodeType": "YulFunctionCall",
																"src": "7511:51:15"
															},
															"nativeSrc": "7511:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "7511:51:15"
														}
													]
												},
												"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
												"nativeSrc": "7394:175:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7492:6:15",
														"nodeType": "YulTypedName",
														"src": "7492:6:15",
														"type": ""
													}
												],
												"src": "7394:175:15"
											},
											{
												"body": {
													"nativeSrc": "7721:220:15",
													"nodeType": "YulBlock",
													"src": "7721:220:15",
													"statements": [
														{
															"nativeSrc": "7731:74:15",
															"nodeType": "YulAssignment",
															"src": "7731:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7797:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7797:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7802:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7738:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "7738:58:15"
																},
																"nativeSrc": "7738:67:15",
																"nodeType": "YulFunctionCall",
																"src": "7738:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7731:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7903:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7903:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																	"nativeSrc": "7814:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "7814:88:15"
																},
																"nativeSrc": "7814:93:15",
																"nodeType": "YulFunctionCall",
																"src": "7814:93:15"
															},
															"nativeSrc": "7814:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "7814:93:15"
														},
														{
															"nativeSrc": "7916:19:15",
															"nodeType": "YulAssignment",
															"src": "7916:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7927:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7927:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7923:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7923:3:15"
																},
																"nativeSrc": "7923:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7923:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7916:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7575:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7709:3:15",
														"nodeType": "YulTypedName",
														"src": "7709:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7717:3:15",
														"nodeType": "YulTypedName",
														"src": "7717:3:15",
														"type": ""
													}
												],
												"src": "7575:366:15"
											},
											{
												"body": {
													"nativeSrc": "8118:248:15",
													"nodeType": "YulBlock",
													"src": "8118:248:15",
													"statements": [
														{
															"nativeSrc": "8128:26:15",
															"nodeType": "YulAssignment",
															"src": "8128:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8140:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8140:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8151:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8151:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8136:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8136:3:15"
																},
																"nativeSrc": "8136:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8136:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8128:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8128:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8175:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8175:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8186:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8186:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8171:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8171:3:15"
																		},
																		"nativeSrc": "8171:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8171:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8194:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8194:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8200:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8200:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8190:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:15"
																		},
																		"nativeSrc": "8190:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8164:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8164:6:15"
																},
																"nativeSrc": "8164:47:15",
																"nodeType": "YulFunctionCall",
																"src": "8164:47:15"
															},
															"nativeSrc": "8164:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "8164:47:15"
														},
														{
															"nativeSrc": "8220:139:15",
															"nodeType": "YulAssignment",
															"src": "8220:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8354:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8354:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8228:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "8228:124:15"
																},
																"nativeSrc": "8228:131:15",
																"nodeType": "YulFunctionCall",
																"src": "8228:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8220:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8220:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7947:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8098:9:15",
														"nodeType": "YulTypedName",
														"src": "8098:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8113:4:15",
														"nodeType": "YulTypedName",
														"src": "8113:4:15",
														"type": ""
													}
												],
												"src": "7947:419:15"
											},
											{
												"body": {
													"nativeSrc": "8478:59:15",
													"nodeType": "YulBlock",
													"src": "8478:59:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8500:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8500:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8508:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8508:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:15"
																		},
																		"nativeSrc": "8496:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:14:15"
																	},
																	{
																		"hexValue": "4e6f742077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "8512:17:15",
																		"nodeType": "YulLiteral",
																		"src": "8512:17:15",
																		"type": "",
																		"value": "Not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8489:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8489:6:15"
																},
																"nativeSrc": "8489:41:15",
																"nodeType": "YulFunctionCall",
																"src": "8489:41:15"
															},
															"nativeSrc": "8489:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "8489:41:15"
														}
													]
												},
												"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
												"nativeSrc": "8372:165:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8470:6:15",
														"nodeType": "YulTypedName",
														"src": "8470:6:15",
														"type": ""
													}
												],
												"src": "8372:165:15"
											},
											{
												"body": {
													"nativeSrc": "8689:220:15",
													"nodeType": "YulBlock",
													"src": "8689:220:15",
													"statements": [
														{
															"nativeSrc": "8699:74:15",
															"nodeType": "YulAssignment",
															"src": "8699:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8765:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8765:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8770:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8770:2:15",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8706:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "8706:58:15"
																},
																"nativeSrc": "8706:67:15",
																"nodeType": "YulFunctionCall",
																"src": "8706:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8699:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8699:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8871:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8871:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																	"nativeSrc": "8782:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "8782:88:15"
																},
																"nativeSrc": "8782:93:15",
																"nodeType": "YulFunctionCall",
																"src": "8782:93:15"
															},
															"nativeSrc": "8782:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "8782:93:15"
														},
														{
															"nativeSrc": "8884:19:15",
															"nodeType": "YulAssignment",
															"src": "8884:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8895:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8895:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8900:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8900:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8891:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8891:3:15"
																},
																"nativeSrc": "8891:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8891:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8884:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8884:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8543:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8677:3:15",
														"nodeType": "YulTypedName",
														"src": "8677:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8685:3:15",
														"nodeType": "YulTypedName",
														"src": "8685:3:15",
														"type": ""
													}
												],
												"src": "8543:366:15"
											},
											{
												"body": {
													"nativeSrc": "9086:248:15",
													"nodeType": "YulBlock",
													"src": "9086:248:15",
													"statements": [
														{
															"nativeSrc": "9096:26:15",
															"nodeType": "YulAssignment",
															"src": "9096:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9108:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9108:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9119:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9119:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9104:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9104:3:15"
																},
																"nativeSrc": "9104:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9104:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9096:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9096:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9143:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9154:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9154:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9139:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:15"
																		},
																		"nativeSrc": "9139:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9139:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9162:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9168:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9168:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9158:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:15"
																		},
																		"nativeSrc": "9158:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9132:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:15"
																},
																"nativeSrc": "9132:47:15",
																"nodeType": "YulFunctionCall",
																"src": "9132:47:15"
															},
															"nativeSrc": "9132:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "9132:47:15"
														},
														{
															"nativeSrc": "9188:139:15",
															"nodeType": "YulAssignment",
															"src": "9188:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9322:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9322:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9196:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "9196:124:15"
																},
																"nativeSrc": "9196:131:15",
																"nodeType": "YulFunctionCall",
																"src": "9196:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9188:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8915:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9066:9:15",
														"nodeType": "YulTypedName",
														"src": "9066:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9081:4:15",
														"nodeType": "YulTypedName",
														"src": "9081:4:15",
														"type": ""
													}
												],
												"src": "8915:419:15"
											},
											{
												"body": {
													"nativeSrc": "9368:152:15",
													"nodeType": "YulBlock",
													"src": "9368:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9385:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9385:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9388:77:15",
																		"nodeType": "YulLiteral",
																		"src": "9388:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9378:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9378:6:15"
																},
																"nativeSrc": "9378:88:15",
																"nodeType": "YulFunctionCall",
																"src": "9378:88:15"
															},
															"nativeSrc": "9378:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "9378:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9482:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9482:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9485:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9485:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9475:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9475:6:15"
																},
																"nativeSrc": "9475:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9475:15:15"
															},
															"nativeSrc": "9475:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9475:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9506:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9506:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9509:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9509:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9499:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:15"
																},
																"nativeSrc": "9499:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9499:15:15"
															},
															"nativeSrc": "9499:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9499:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9340:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "9340:180:15"
											},
											{
												"body": {
													"nativeSrc": "9570:147:15",
													"nodeType": "YulBlock",
													"src": "9570:147:15",
													"statements": [
														{
															"nativeSrc": "9580:25:15",
															"nodeType": "YulAssignment",
															"src": "9580:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9603:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9603:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9585:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9585:17:15"
																},
																"nativeSrc": "9585:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9585:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9580:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9580:1:15"
																}
															]
														},
														{
															"nativeSrc": "9614:25:15",
															"nodeType": "YulAssignment",
															"src": "9614:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9637:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9637:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9619:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9619:17:15"
																},
																"nativeSrc": "9619:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9619:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9614:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9614:1:15"
																}
															]
														},
														{
															"nativeSrc": "9648:16:15",
															"nodeType": "YulAssignment",
															"src": "9648:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9659:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9659:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9662:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9662:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9655:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9655:3:15"
																},
																"nativeSrc": "9655:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9655:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9648:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9648:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9688:22:15",
																"nodeType": "YulBlock",
																"src": "9688:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9690:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9690:16:15"
																			},
																			"nativeSrc": "9690:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9690:18:15"
																		},
																		"nativeSrc": "9690:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9690:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9680:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9680:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9683:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9683:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9677:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9677:2:15"
																},
																"nativeSrc": "9677:10:15",
																"nodeType": "YulFunctionCall",
																"src": "9677:10:15"
															},
															"nativeSrc": "9674:36:15",
															"nodeType": "YulIf",
															"src": "9674:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9526:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9557:1:15",
														"nodeType": "YulTypedName",
														"src": "9557:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9560:1:15",
														"nodeType": "YulTypedName",
														"src": "9560:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9566:3:15",
														"nodeType": "YulTypedName",
														"src": "9566:3:15",
														"type": ""
													}
												],
												"src": "9526:191:15"
											},
											{
												"body": {
													"nativeSrc": "9829:65:15",
													"nodeType": "YulBlock",
													"src": "9829:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9851:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9851:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9859:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9859:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9847:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9847:3:15"
																		},
																		"nativeSrc": "9847:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9847:14:15"
																	},
																	{
																		"hexValue": "546f74616c20737570706c79206578636565646564",
																		"kind": "string",
																		"nativeSrc": "9863:23:15",
																		"nodeType": "YulLiteral",
																		"src": "9863:23:15",
																		"type": "",
																		"value": "Total supply exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9840:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9840:6:15"
																},
																"nativeSrc": "9840:47:15",
																"nodeType": "YulFunctionCall",
																"src": "9840:47:15"
															},
															"nativeSrc": "9840:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "9840:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
												"nativeSrc": "9723:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9821:6:15",
														"nodeType": "YulTypedName",
														"src": "9821:6:15",
														"type": ""
													}
												],
												"src": "9723:171:15"
											},
											{
												"body": {
													"nativeSrc": "10046:220:15",
													"nodeType": "YulBlock",
													"src": "10046:220:15",
													"statements": [
														{
															"nativeSrc": "10056:74:15",
															"nodeType": "YulAssignment",
															"src": "10056:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10122:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10122:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10127:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10127:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10063:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "10063:58:15"
																},
																"nativeSrc": "10063:67:15",
																"nodeType": "YulFunctionCall",
																"src": "10063:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10056:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10056:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10228:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10228:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																	"nativeSrc": "10139:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "10139:88:15"
																},
																"nativeSrc": "10139:93:15",
																"nodeType": "YulFunctionCall",
																"src": "10139:93:15"
															},
															"nativeSrc": "10139:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "10139:93:15"
														},
														{
															"nativeSrc": "10241:19:15",
															"nodeType": "YulAssignment",
															"src": "10241:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10252:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10252:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10248:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10248:3:15"
																},
																"nativeSrc": "10248:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10248:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10241:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10241:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9900:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10034:3:15",
														"nodeType": "YulTypedName",
														"src": "10034:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10042:3:15",
														"nodeType": "YulTypedName",
														"src": "10042:3:15",
														"type": ""
													}
												],
												"src": "9900:366:15"
											},
											{
												"body": {
													"nativeSrc": "10443:248:15",
													"nodeType": "YulBlock",
													"src": "10443:248:15",
													"statements": [
														{
															"nativeSrc": "10453:26:15",
															"nodeType": "YulAssignment",
															"src": "10453:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10465:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10465:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10476:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10476:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10461:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10461:3:15"
																},
																"nativeSrc": "10461:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10461:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10453:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10453:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10500:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10500:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10511:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10511:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10496:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10496:3:15"
																		},
																		"nativeSrc": "10496:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10496:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10519:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10519:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10525:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10525:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10515:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10515:3:15"
																		},
																		"nativeSrc": "10515:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10515:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10489:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10489:6:15"
																},
																"nativeSrc": "10489:47:15",
																"nodeType": "YulFunctionCall",
																"src": "10489:47:15"
															},
															"nativeSrc": "10489:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "10489:47:15"
														},
														{
															"nativeSrc": "10545:139:15",
															"nodeType": "YulAssignment",
															"src": "10545:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10679:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10679:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10553:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "10553:124:15"
																},
																"nativeSrc": "10553:131:15",
																"nodeType": "YulFunctionCall",
																"src": "10553:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10545:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10545:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10272:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10423:9:15",
														"nodeType": "YulTypedName",
														"src": "10423:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10438:4:15",
														"nodeType": "YulTypedName",
														"src": "10438:4:15",
														"type": ""
													}
												],
												"src": "10272:419:15"
											},
											{
												"body": {
													"nativeSrc": "10742:149:15",
													"nodeType": "YulBlock",
													"src": "10742:149:15",
													"statements": [
														{
															"nativeSrc": "10752:25:15",
															"nodeType": "YulAssignment",
															"src": "10752:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10775:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10775:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10757:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10757:17:15"
																},
																"nativeSrc": "10757:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10757:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10752:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10752:1:15"
																}
															]
														},
														{
															"nativeSrc": "10786:25:15",
															"nodeType": "YulAssignment",
															"src": "10786:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10809:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10809:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10791:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10791:17:15"
																},
																"nativeSrc": "10791:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10791:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10786:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10786:1:15"
																}
															]
														},
														{
															"nativeSrc": "10820:17:15",
															"nodeType": "YulAssignment",
															"src": "10820:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10832:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10832:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10835:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10835:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10828:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:15"
																},
																"nativeSrc": "10828:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10828:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10820:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10820:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10862:22:15",
																"nodeType": "YulBlock",
																"src": "10862:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10864:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10864:16:15"
																			},
																			"nativeSrc": "10864:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10864:18:15"
																		},
																		"nativeSrc": "10864:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10864:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10853:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10853:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10859:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10859:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10850:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10850:2:15"
																},
																"nativeSrc": "10850:11:15",
																"nodeType": "YulFunctionCall",
																"src": "10850:11:15"
															},
															"nativeSrc": "10847:37:15",
															"nodeType": "YulIf",
															"src": "10847:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10697:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10728:1:15",
														"nodeType": "YulTypedName",
														"src": "10728:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10731:1:15",
														"nodeType": "YulTypedName",
														"src": "10731:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10737:4:15",
														"nodeType": "YulTypedName",
														"src": "10737:4:15",
														"type": ""
													}
												],
												"src": "10697:194:15"
											},
											{
												"body": {
													"nativeSrc": "10940:79:15",
													"nodeType": "YulBlock",
													"src": "10940:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10997:16:15",
																"nodeType": "YulBlock",
																"src": "10997:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11006:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11006:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11009:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11009:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10999:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10999:6:15"
																			},
																			"nativeSrc": "10999:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10999:12:15"
																		},
																		"nativeSrc": "10999:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10999:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10963:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10963:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10988:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "10988:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "10970:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "10970:17:15"
																				},
																				"nativeSrc": "10970:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10970:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10960:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10960:2:15"
																		},
																		"nativeSrc": "10960:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10953:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:15"
																},
																"nativeSrc": "10953:43:15",
																"nodeType": "YulFunctionCall",
																"src": "10953:43:15"
															},
															"nativeSrc": "10950:63:15",
															"nodeType": "YulIf",
															"src": "10950:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "10897:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10933:5:15",
														"nodeType": "YulTypedName",
														"src": "10933:5:15",
														"type": ""
													}
												],
												"src": "10897:122:15"
											},
											{
												"body": {
													"nativeSrc": "11088:80:15",
													"nodeType": "YulBlock",
													"src": "11088:80:15",
													"statements": [
														{
															"nativeSrc": "11098:22:15",
															"nodeType": "YulAssignment",
															"src": "11098:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11113:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11113:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11107:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11107:5:15"
																},
																"nativeSrc": "11107:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11107:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11098:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11098:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11156:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11156:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "11129:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "11129:26:15"
																},
																"nativeSrc": "11129:33:15",
																"nodeType": "YulFunctionCall",
																"src": "11129:33:15"
															},
															"nativeSrc": "11129:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "11129:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "11025:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11066:6:15",
														"nodeType": "YulTypedName",
														"src": "11066:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11074:3:15",
														"nodeType": "YulTypedName",
														"src": "11074:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11082:5:15",
														"nodeType": "YulTypedName",
														"src": "11082:5:15",
														"type": ""
													}
												],
												"src": "11025:143:15"
											},
											{
												"body": {
													"nativeSrc": "11217:47:15",
													"nodeType": "YulBlock",
													"src": "11217:47:15",
													"statements": [
														{
															"nativeSrc": "11227:31:15",
															"nodeType": "YulAssignment",
															"src": "11227:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11249:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11249:1:15",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11252:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11252:5:15"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "11238:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "11238:10:15"
																},
																"nativeSrc": "11238:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11238:20:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11227:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "11227:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "11174:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11199:5:15",
														"nodeType": "YulTypedName",
														"src": "11199:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11209:7:15",
														"nodeType": "YulTypedName",
														"src": "11209:7:15",
														"type": ""
													}
												],
												"src": "11174:90:15"
											},
											{
												"body": {
													"nativeSrc": "11311:77:15",
													"nodeType": "YulBlock",
													"src": "11311:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11366:16:15",
																"nodeType": "YulBlock",
																"src": "11366:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11375:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11375:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11378:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11378:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11368:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11368:6:15"
																			},
																			"nativeSrc": "11368:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11368:12:15"
																		},
																		"nativeSrc": "11368:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11368:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11334:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11334:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11357:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11357:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "11341:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "11341:15:15"
																				},
																				"nativeSrc": "11341:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11341:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11331:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11331:2:15"
																		},
																		"nativeSrc": "11331:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11331:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11324:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11324:6:15"
																},
																"nativeSrc": "11324:41:15",
																"nodeType": "YulFunctionCall",
																"src": "11324:41:15"
															},
															"nativeSrc": "11321:61:15",
															"nodeType": "YulIf",
															"src": "11321:61:15"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "11270:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11304:5:15",
														"nodeType": "YulTypedName",
														"src": "11304:5:15",
														"type": ""
													}
												],
												"src": "11270:118:15"
											},
											{
												"body": {
													"nativeSrc": "11455:78:15",
													"nodeType": "YulBlock",
													"src": "11455:78:15",
													"statements": [
														{
															"nativeSrc": "11465:22:15",
															"nodeType": "YulAssignment",
															"src": "11465:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11480:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11480:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11474:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11474:5:15"
																},
																"nativeSrc": "11474:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11474:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11465:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11465:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11521:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11521:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "11496:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "11496:24:15"
																},
																"nativeSrc": "11496:31:15",
																"nodeType": "YulFunctionCall",
																"src": "11496:31:15"
															},
															"nativeSrc": "11496:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "11496:31:15"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "11394:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11433:6:15",
														"nodeType": "YulTypedName",
														"src": "11433:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11441:3:15",
														"nodeType": "YulTypedName",
														"src": "11441:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11449:5:15",
														"nodeType": "YulTypedName",
														"src": "11449:5:15",
														"type": ""
													}
												],
												"src": "11394:139:15"
											},
											{
												"body": {
													"nativeSrc": "11583:45:15",
													"nodeType": "YulBlock",
													"src": "11583:45:15",
													"statements": [
														{
															"nativeSrc": "11593:29:15",
															"nodeType": "YulAssignment",
															"src": "11593:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11608:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11608:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11615:6:15",
																		"nodeType": "YulLiteral",
																		"src": "11615:6:15",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11604:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:15"
																},
																"nativeSrc": "11604:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11604:18:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11593:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "11593:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "11539:89:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11565:5:15",
														"nodeType": "YulTypedName",
														"src": "11565:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11575:7:15",
														"nodeType": "YulTypedName",
														"src": "11575:7:15",
														"type": ""
													}
												],
												"src": "11539:89:15"
											},
											{
												"body": {
													"nativeSrc": "11676:78:15",
													"nodeType": "YulBlock",
													"src": "11676:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11732:16:15",
																"nodeType": "YulBlock",
																"src": "11732:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11741:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11741:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11744:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11744:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11734:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11734:6:15"
																			},
																			"nativeSrc": "11734:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11734:12:15"
																		},
																		"nativeSrc": "11734:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11734:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11699:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11699:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11723:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11723:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "11706:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "11706:16:15"
																				},
																				"nativeSrc": "11706:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11706:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11696:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11696:2:15"
																		},
																		"nativeSrc": "11696:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11696:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11689:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11689:6:15"
																},
																"nativeSrc": "11689:42:15",
																"nodeType": "YulFunctionCall",
																"src": "11689:42:15"
															},
															"nativeSrc": "11686:62:15",
															"nodeType": "YulIf",
															"src": "11686:62:15"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "11634:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11669:5:15",
														"nodeType": "YulTypedName",
														"src": "11669:5:15",
														"type": ""
													}
												],
												"src": "11634:120:15"
											},
											{
												"body": {
													"nativeSrc": "11822:79:15",
													"nodeType": "YulBlock",
													"src": "11822:79:15",
													"statements": [
														{
															"nativeSrc": "11832:22:15",
															"nodeType": "YulAssignment",
															"src": "11832:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11847:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11841:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11841:5:15"
																},
																"nativeSrc": "11841:13:15",
																"nodeType": "YulFunctionCall",
																"src": "11841:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11832:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11832:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11889:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11889:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "11863:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "11863:25:15"
																},
																"nativeSrc": "11863:32:15",
																"nodeType": "YulFunctionCall",
																"src": "11863:32:15"
															},
															"nativeSrc": "11863:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "11863:32:15"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "11760:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11800:6:15",
														"nodeType": "YulTypedName",
														"src": "11800:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11808:3:15",
														"nodeType": "YulTypedName",
														"src": "11808:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11816:5:15",
														"nodeType": "YulTypedName",
														"src": "11816:5:15",
														"type": ""
													}
												],
												"src": "11760:141:15"
											},
											{
												"body": {
													"nativeSrc": "11948:77:15",
													"nodeType": "YulBlock",
													"src": "11948:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12003:16:15",
																"nodeType": "YulBlock",
																"src": "12003:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12012:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12012:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12015:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12015:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12005:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12005:6:15"
																			},
																			"nativeSrc": "12005:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12005:12:15"
																		},
																		"nativeSrc": "12005:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12005:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11971:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11971:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11994:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11994:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "11978:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "11978:15:15"
																				},
																				"nativeSrc": "11978:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11978:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11968:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11968:2:15"
																		},
																		"nativeSrc": "11968:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11968:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11961:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:15"
																},
																"nativeSrc": "11961:41:15",
																"nodeType": "YulFunctionCall",
																"src": "11961:41:15"
															},
															"nativeSrc": "11958:61:15",
															"nodeType": "YulIf",
															"src": "11958:61:15"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "11907:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11941:5:15",
														"nodeType": "YulTypedName",
														"src": "11941:5:15",
														"type": ""
													}
												],
												"src": "11907:118:15"
											},
											{
												"body": {
													"nativeSrc": "12092:78:15",
													"nodeType": "YulBlock",
													"src": "12092:78:15",
													"statements": [
														{
															"nativeSrc": "12102:22:15",
															"nodeType": "YulAssignment",
															"src": "12102:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12117:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12117:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12111:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12111:5:15"
																},
																"nativeSrc": "12111:13:15",
																"nodeType": "YulFunctionCall",
																"src": "12111:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12102:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12102:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12158:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12158:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "12133:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "12133:24:15"
																},
																"nativeSrc": "12133:31:15",
																"nodeType": "YulFunctionCall",
																"src": "12133:31:15"
															},
															"nativeSrc": "12133:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "12133:31:15"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "12031:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12070:6:15",
														"nodeType": "YulTypedName",
														"src": "12070:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12078:3:15",
														"nodeType": "YulTypedName",
														"src": "12078:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12086:5:15",
														"nodeType": "YulTypedName",
														"src": "12086:5:15",
														"type": ""
													}
												],
												"src": "12031:139:15"
											},
											{
												"body": {
													"nativeSrc": "12216:76:15",
													"nodeType": "YulBlock",
													"src": "12216:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12270:16:15",
																"nodeType": "YulBlock",
																"src": "12270:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12279:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12279:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12282:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12282:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12272:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12272:6:15"
																			},
																			"nativeSrc": "12272:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12272:12:15"
																		},
																		"nativeSrc": "12272:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12272:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12239:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "12239:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12261:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "12261:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12246:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "12246:14:15"
																				},
																				"nativeSrc": "12246:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12246:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12236:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12236:2:15"
																		},
																		"nativeSrc": "12236:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12236:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12229:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12229:6:15"
																},
																"nativeSrc": "12229:40:15",
																"nodeType": "YulFunctionCall",
																"src": "12229:40:15"
															},
															"nativeSrc": "12226:60:15",
															"nodeType": "YulIf",
															"src": "12226:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12176:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12209:5:15",
														"nodeType": "YulTypedName",
														"src": "12209:5:15",
														"type": ""
													}
												],
												"src": "12176:116:15"
											},
											{
												"body": {
													"nativeSrc": "12358:77:15",
													"nodeType": "YulBlock",
													"src": "12358:77:15",
													"statements": [
														{
															"nativeSrc": "12368:22:15",
															"nodeType": "YulAssignment",
															"src": "12368:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12383:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12383:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12377:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12377:5:15"
																},
																"nativeSrc": "12377:13:15",
																"nodeType": "YulFunctionCall",
																"src": "12377:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12368:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12368:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12423:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12423:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12399:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "12399:23:15"
																},
																"nativeSrc": "12399:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12399:30:15"
															},
															"nativeSrc": "12399:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12399:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12298:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12336:6:15",
														"nodeType": "YulTypedName",
														"src": "12336:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12344:3:15",
														"nodeType": "YulTypedName",
														"src": "12344:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12352:5:15",
														"nodeType": "YulTypedName",
														"src": "12352:5:15",
														"type": ""
													}
												],
												"src": "12298:137:15"
											},
											{
												"body": {
													"nativeSrc": "12610:1102:15",
													"nodeType": "YulBlock",
													"src": "12610:1102:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12657:83:15",
																"nodeType": "YulBlock",
																"src": "12657:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12659:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12659:77:15"
																			},
																			"nativeSrc": "12659:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12659:79:15"
																		},
																		"nativeSrc": "12659:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12659:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12631:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12631:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12640:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12640:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12627:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12627:3:15"
																		},
																		"nativeSrc": "12627:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12627:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12652:3:15",
																		"nodeType": "YulLiteral",
																		"src": "12652:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12623:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12623:3:15"
																},
																"nativeSrc": "12623:33:15",
																"nodeType": "YulFunctionCall",
																"src": "12623:33:15"
															},
															"nativeSrc": "12620:120:15",
															"nodeType": "YulIf",
															"src": "12620:120:15"
														},
														{
															"nativeSrc": "12750:128:15",
															"nodeType": "YulBlock",
															"src": "12750:128:15",
															"statements": [
																{
																	"nativeSrc": "12765:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12765:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12779:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12779:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12769:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12769:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12794:74:15",
																	"nodeType": "YulAssignment",
																	"src": "12794:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12840:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12840:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12851:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12851:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12836:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12836:3:15"
																				},
																				"nativeSrc": "12836:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12836:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12860:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12860:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "12804:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "12804:31:15"
																		},
																		"nativeSrc": "12804:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12804:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12794:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12794:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12888:127:15",
															"nodeType": "YulBlock",
															"src": "12888:127:15",
															"statements": [
																{
																	"nativeSrc": "12903:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12903:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12917:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12917:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12907:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12907:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12933:72:15",
																	"nodeType": "YulAssignment",
																	"src": "12933:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12977:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12977:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12988:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12988:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12973:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12973:3:15"
																				},
																				"nativeSrc": "12973:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12973:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12997:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12997:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "12943:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "12943:29:15"
																		},
																		"nativeSrc": "12943:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12943:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12933:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12933:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13025:128:15",
															"nodeType": "YulBlock",
															"src": "13025:128:15",
															"statements": [
																{
																	"nativeSrc": "13040:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13040:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13054:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13054:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13044:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13044:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13070:73:15",
																	"nodeType": "YulAssignment",
																	"src": "13070:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13115:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13115:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13126:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13126:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13111:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13111:3:15"
																				},
																				"nativeSrc": "13111:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13111:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13135:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13135:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "13080:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "13080:30:15"
																		},
																		"nativeSrc": "13080:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13080:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13070:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13070:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13163:128:15",
															"nodeType": "YulBlock",
															"src": "13163:128:15",
															"statements": [
																{
																	"nativeSrc": "13178:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13178:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13192:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13192:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13182:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13182:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13208:73:15",
																	"nodeType": "YulAssignment",
																	"src": "13208:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13253:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13253:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13264:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13264:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13249:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13249:3:15"
																				},
																				"nativeSrc": "13249:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13249:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13273:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13273:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "13218:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "13218:30:15"
																		},
																		"nativeSrc": "13218:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13218:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13208:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13208:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13301:129:15",
															"nodeType": "YulBlock",
															"src": "13301:129:15",
															"statements": [
																{
																	"nativeSrc": "13316:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13316:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13330:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13330:3:15",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13320:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13320:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13347:73:15",
																	"nodeType": "YulAssignment",
																	"src": "13347:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13392:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13392:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13403:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13403:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13388:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13388:3:15"
																				},
																				"nativeSrc": "13388:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13388:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13412:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13412:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "13357:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "13357:30:15"
																		},
																		"nativeSrc": "13357:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13357:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13347:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13347:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13440:128:15",
															"nodeType": "YulBlock",
															"src": "13440:128:15",
															"statements": [
																{
																	"nativeSrc": "13455:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13455:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13469:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13469:3:15",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13459:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13459:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13486:72:15",
																	"nodeType": "YulAssignment",
																	"src": "13486:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13530:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13530:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13541:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13541:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13526:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13526:3:15"
																				},
																				"nativeSrc": "13526:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13526:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13550:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13550:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "13496:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "13496:29:15"
																		},
																		"nativeSrc": "13496:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13496:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "13486:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13486:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13578:127:15",
															"nodeType": "YulBlock",
															"src": "13578:127:15",
															"statements": [
																{
																	"nativeSrc": "13593:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13593:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13607:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13607:3:15",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13597:6:15",
																			"nodeType": "YulTypedName",
																			"src": "13597:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13624:71:15",
																	"nodeType": "YulAssignment",
																	"src": "13624:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13667:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "13667:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13678:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "13678:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13663:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13663:3:15"
																				},
																				"nativeSrc": "13663:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13663:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13687:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "13687:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13634:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "13634:28:15"
																		},
																		"nativeSrc": "13634:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13634:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "13624:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "13624:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "12441:1271:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12532:9:15",
														"nodeType": "YulTypedName",
														"src": "12532:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12543:7:15",
														"nodeType": "YulTypedName",
														"src": "12543:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12555:6:15",
														"nodeType": "YulTypedName",
														"src": "12555:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12563:6:15",
														"nodeType": "YulTypedName",
														"src": "12563:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12571:6:15",
														"nodeType": "YulTypedName",
														"src": "12571:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12579:6:15",
														"nodeType": "YulTypedName",
														"src": "12579:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12587:6:15",
														"nodeType": "YulTypedName",
														"src": "12587:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12595:6:15",
														"nodeType": "YulTypedName",
														"src": "12595:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "12603:6:15",
														"nodeType": "YulTypedName",
														"src": "12603:6:15",
														"type": ""
													}
												],
												"src": "12441:1271:15"
											},
											{
												"body": {
													"nativeSrc": "13769:51:15",
													"nodeType": "YulBlock",
													"src": "13769:51:15",
													"statements": [
														{
															"nativeSrc": "13779:34:15",
															"nodeType": "YulAssignment",
															"src": "13779:34:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13804:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13804:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13807:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "13807:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13800:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13800:3:15"
																},
																"nativeSrc": "13800:13:15",
																"nodeType": "YulFunctionCall",
																"src": "13800:13:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13779:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "13779:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "13718:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13750:5:15",
														"nodeType": "YulTypedName",
														"src": "13750:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13760:8:15",
														"nodeType": "YulTypedName",
														"src": "13760:8:15",
														"type": ""
													}
												],
												"src": "13718:102:15"
											},
											{
												"body": {
													"nativeSrc": "13899:775:15",
													"nodeType": "YulBlock",
													"src": "13899:775:15",
													"statements": [
														{
															"nativeSrc": "13909:15:15",
															"nodeType": "YulAssignment",
															"src": "13909:15:15",
															"value": {
																"name": "_power",
																"nativeSrc": "13918:6:15",
																"nodeType": "YulIdentifier",
																"src": "13918:6:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13909:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "13909:5:15"
																}
															]
														},
														{
															"nativeSrc": "13933:14:15",
															"nodeType": "YulAssignment",
															"src": "13933:14:15",
															"value": {
																"name": "_base",
																"nativeSrc": "13942:5:15",
																"nodeType": "YulIdentifier",
																"src": "13942:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13933:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13933:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13991:677:15",
																"nodeType": "YulBlock",
																"src": "13991:677:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "14079:22:15",
																			"nodeType": "YulBlock",
																			"src": "14079:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "14081:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "14081:16:15"
																						},
																						"nativeSrc": "14081:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "14081:18:15"
																					},
																					"nativeSrc": "14081:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "14081:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14057:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "14057:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "14067:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "14067:3:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "14072:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "14072:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "14063:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "14063:3:15"
																					},
																					"nativeSrc": "14063:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "14063:14:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14054:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "14054:2:15"
																			},
																			"nativeSrc": "14054:24:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14054:24:15"
																		},
																		"nativeSrc": "14051:50:15",
																		"nodeType": "YulIf",
																		"src": "14051:50:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "14146:419:15",
																			"nodeType": "YulBlock",
																			"src": "14146:419:15",
																			"statements": [
																				{
																					"nativeSrc": "14526:25:15",
																					"nodeType": "YulAssignment",
																					"src": "14526:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "14539:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "14539:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "14546:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "14546:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "14535:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "14535:3:15"
																						},
																						"nativeSrc": "14535:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "14535:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "14526:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "14526:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14121:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "14121:8:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14131:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14131:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14117:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14117:3:15"
																			},
																			"nativeSrc": "14117:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14117:16:15"
																		},
																		"nativeSrc": "14114:451:15",
																		"nodeType": "YulIf",
																		"src": "14114:451:15"
																	},
																	{
																		"nativeSrc": "14578:23:15",
																		"nodeType": "YulAssignment",
																		"src": "14578:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14590:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "14590:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14596:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "14596:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14586:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14586:3:15"
																			},
																			"nativeSrc": "14586:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14586:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "14578:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "14578:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14614:44:15",
																		"nodeType": "YulAssignment",
																		"src": "14614:44:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14649:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "14649:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "14626:22:15",
																				"nodeType": "YulIdentifier",
																				"src": "14626:22:15"
																			},
																			"nativeSrc": "14626:32:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14626:32:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14614:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "14614:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13967:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "13967:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13977:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13977:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13964:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "13964:2:15"
																},
																"nativeSrc": "13964:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13964:15:15"
															},
															"nativeSrc": "13956:712:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13980:2:15",
																"nodeType": "YulBlock",
																"src": "13980:2:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13960:3:15",
																"nodeType": "YulBlock",
																"src": "13960:3:15",
																"statements": []
															},
															"src": "13956:712:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13826:848:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "13854:6:15",
														"nodeType": "YulTypedName",
														"src": "13854:6:15",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "13862:5:15",
														"nodeType": "YulTypedName",
														"src": "13862:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13869:8:15",
														"nodeType": "YulTypedName",
														"src": "13869:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "13879:3:15",
														"nodeType": "YulTypedName",
														"src": "13879:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13887:5:15",
														"nodeType": "YulTypedName",
														"src": "13887:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13894:4:15",
														"nodeType": "YulTypedName",
														"src": "13894:4:15",
														"type": ""
													}
												],
												"src": "13826:848:15"
											},
											{
												"body": {
													"nativeSrc": "14740:1013:15",
													"nodeType": "YulBlock",
													"src": "14740:1013:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14935:20:15",
																"nodeType": "YulBlock",
																"src": "14935:20:15",
																"statements": [
																	{
																		"nativeSrc": "14937:10:15",
																		"nodeType": "YulAssignment",
																		"src": "14937:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14946:1:15",
																			"nodeType": "YulLiteral",
																			"src": "14946:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14937:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14937:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14948:5:15",
																		"nodeType": "YulLeave",
																		"src": "14948:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14925:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "14925:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14918:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14918:6:15"
																},
																"nativeSrc": "14918:16:15",
																"nodeType": "YulFunctionCall",
																"src": "14918:16:15"
															},
															"nativeSrc": "14915:40:15",
															"nodeType": "YulIf",
															"src": "14915:40:15"
														},
														{
															"body": {
																"nativeSrc": "14980:20:15",
																"nodeType": "YulBlock",
																"src": "14980:20:15",
																"statements": [
																	{
																		"nativeSrc": "14982:10:15",
																		"nodeType": "YulAssignment",
																		"src": "14982:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14991:1:15",
																			"nodeType": "YulLiteral",
																			"src": "14991:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14982:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14982:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14993:5:15",
																		"nodeType": "YulLeave",
																		"src": "14993:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14974:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14974:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14967:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:15"
																},
																"nativeSrc": "14967:12:15",
																"nodeType": "YulFunctionCall",
																"src": "14967:12:15"
															},
															"nativeSrc": "14964:36:15",
															"nodeType": "YulIf",
															"src": "14964:36:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15110:20:15",
																		"nodeType": "YulBlock",
																		"src": "15110:20:15",
																		"statements": [
																			{
																				"nativeSrc": "15112:10:15",
																				"nodeType": "YulAssignment",
																				"src": "15112:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15121:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15121:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15112:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15112:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "15123:5:15",
																				"nodeType": "YulLeave",
																				"src": "15123:5:15"
																			}
																		]
																	},
																	"nativeSrc": "15103:27:15",
																	"nodeType": "YulCase",
																	"src": "15103:27:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15108:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15108:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15154:176:15",
																		"nodeType": "YulBlock",
																		"src": "15154:176:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "15189:22:15",
																					"nodeType": "YulBlock",
																					"src": "15189:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15191:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "15191:16:15"
																								},
																								"nativeSrc": "15191:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "15191:18:15"
																							},
																							"nativeSrc": "15191:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "15191:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "15174:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "15174:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15184:3:15",
																							"nodeType": "YulLiteral",
																							"src": "15184:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15171:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "15171:2:15"
																					},
																					"nativeSrc": "15171:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "15171:17:15"
																				},
																				"nativeSrc": "15168:43:15",
																				"nodeType": "YulIf",
																				"src": "15168:43:15"
																			},
																			{
																				"nativeSrc": "15224:25:15",
																				"nodeType": "YulAssignment",
																				"src": "15224:25:15",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15237:1:15",
																							"nodeType": "YulLiteral",
																							"src": "15237:1:15",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "15240:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "15240:8:15"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "15233:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "15233:3:15"
																					},
																					"nativeSrc": "15233:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "15233:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15224:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15224:5:15"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15280:22:15",
																					"nodeType": "YulBlock",
																					"src": "15280:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15282:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "15282:16:15"
																								},
																								"nativeSrc": "15282:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "15282:18:15"
																							},
																							"nativeSrc": "15282:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "15282:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "15268:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "15268:5:15"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "15275:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "15275:3:15"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15265:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "15265:2:15"
																					},
																					"nativeSrc": "15265:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "15265:14:15"
																				},
																				"nativeSrc": "15262:40:15",
																				"nodeType": "YulIf",
																				"src": "15262:40:15"
																			},
																			{
																				"nativeSrc": "15315:5:15",
																				"nodeType": "YulLeave",
																				"src": "15315:5:15"
																			}
																		]
																	},
																	"nativeSrc": "15139:191:15",
																	"nodeType": "YulCase",
																	"src": "15139:191:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15144:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15144:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "15060:4:15",
																"nodeType": "YulIdentifier",
																"src": "15060:4:15"
															},
															"nativeSrc": "15053:277:15",
															"nodeType": "YulSwitch",
															"src": "15053:277:15"
														},
														{
															"body": {
																"nativeSrc": "15462:123:15",
																"nodeType": "YulBlock",
																"src": "15462:123:15",
																"statements": [
																	{
																		"nativeSrc": "15476:28:15",
																		"nodeType": "YulAssignment",
																		"src": "15476:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15489:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "15489:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "15495:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "15495:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "15485:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "15485:3:15"
																			},
																			"nativeSrc": "15485:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15485:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15476:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15476:5:15"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15535:22:15",
																			"nodeType": "YulBlock",
																			"src": "15535:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15537:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "15537:16:15"
																						},
																						"nativeSrc": "15537:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "15537:18:15"
																					},
																					"nativeSrc": "15537:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "15537:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "15523:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "15523:5:15"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "15530:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15530:3:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "15520:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "15520:2:15"
																			},
																			"nativeSrc": "15520:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15520:14:15"
																		},
																		"nativeSrc": "15517:40:15",
																		"nodeType": "YulIf",
																		"src": "15517:40:15"
																	},
																	{
																		"nativeSrc": "15570:5:15",
																		"nodeType": "YulLeave",
																		"src": "15570:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15365:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "15365:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15371:2:15",
																						"nodeType": "YulLiteral",
																						"src": "15371:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15362:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "15362:2:15"
																				},
																				"nativeSrc": "15362:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15362:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15379:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "15379:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15389:2:15",
																						"nodeType": "YulLiteral",
																						"src": "15389:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15376:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "15376:2:15"
																				},
																				"nativeSrc": "15376:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15376:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15358:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15358:3:15"
																		},
																		"nativeSrc": "15358:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15358:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15414:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "15414:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15420:3:15",
																						"nodeType": "YulLiteral",
																						"src": "15420:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15411:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "15411:2:15"
																				},
																				"nativeSrc": "15411:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15411:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15429:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "15429:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15439:2:15",
																						"nodeType": "YulLiteral",
																						"src": "15439:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15426:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "15426:2:15"
																				},
																				"nativeSrc": "15426:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15426:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15407:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15407:3:15"
																		},
																		"nativeSrc": "15407:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15407:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15342:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "15342:2:15"
																},
																"nativeSrc": "15342:111:15",
																"nodeType": "YulFunctionCall",
																"src": "15342:111:15"
															},
															"nativeSrc": "15339:246:15",
															"nodeType": "YulIf",
															"src": "15339:246:15"
														},
														{
															"nativeSrc": "15595:57:15",
															"nodeType": "YulAssignment",
															"src": "15595:57:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15629:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15629:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15632:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15632:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15638:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "15638:8:15"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "15648:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15648:3:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15610:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "15610:18:15"
																},
																"nativeSrc": "15610:42:15",
																"nodeType": "YulFunctionCall",
																"src": "15610:42:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15595:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15595:5:15"
																},
																{
																	"name": "base",
																	"nativeSrc": "15602:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15602:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15691:22:15",
																"nodeType": "YulBlock",
																"src": "15691:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15693:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "15693:16:15"
																			},
																			"nativeSrc": "15693:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15693:18:15"
																		},
																		"nativeSrc": "15693:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15693:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15668:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15668:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "15679:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "15679:3:15"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "15684:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15684:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15675:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15675:3:15"
																		},
																		"nativeSrc": "15675:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15675:14:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15665:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "15665:2:15"
																},
																"nativeSrc": "15665:25:15",
																"nodeType": "YulFunctionCall",
																"src": "15665:25:15"
															},
															"nativeSrc": "15662:51:15",
															"nodeType": "YulIf",
															"src": "15662:51:15"
														},
														{
															"nativeSrc": "15722:25:15",
															"nodeType": "YulAssignment",
															"src": "15722:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15735:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15735:5:15"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15742:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15742:4:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15731:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15731:3:15"
																},
																"nativeSrc": "15731:16:15",
																"nodeType": "YulFunctionCall",
																"src": "15731:16:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15722:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15722:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14680:1073:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14710:4:15",
														"nodeType": "YulTypedName",
														"src": "14710:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14716:8:15",
														"nodeType": "YulTypedName",
														"src": "14716:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "14726:3:15",
														"nodeType": "YulTypedName",
														"src": "14726:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14734:5:15",
														"nodeType": "YulTypedName",
														"src": "14734:5:15",
														"type": ""
													}
												],
												"src": "14680:1073:15"
											},
											{
												"body": {
													"nativeSrc": "15823:217:15",
													"nodeType": "YulBlock",
													"src": "15823:217:15",
													"statements": [
														{
															"nativeSrc": "15833:31:15",
															"nodeType": "YulAssignment",
															"src": "15833:31:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15859:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15859:4:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15841:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "15841:17:15"
																},
																"nativeSrc": "15841:23:15",
																"nodeType": "YulFunctionCall",
																"src": "15841:23:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15833:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15833:4:15"
																}
															]
														},
														{
															"nativeSrc": "15873:37:15",
															"nodeType": "YulAssignment",
															"src": "15873:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15901:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "15901:8:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15885:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "15885:15:15"
																},
																"nativeSrc": "15885:25:15",
																"nodeType": "YulFunctionCall",
																"src": "15885:25:15"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "15873:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "15873:8:15"
																}
															]
														},
														{
															"nativeSrc": "15920:113:15",
															"nodeType": "YulAssignment",
															"src": "15920:113:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15950:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15950:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15956:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "15956:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15966:66:15",
																		"nodeType": "YulLiteral",
																		"src": "15966:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15929:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "15929:20:15"
																},
																"nativeSrc": "15929:104:15",
																"nodeType": "YulFunctionCall",
																"src": "15929:104:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15920:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15920:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "15759:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15798:4:15",
														"nodeType": "YulTypedName",
														"src": "15798:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15804:8:15",
														"nodeType": "YulTypedName",
														"src": "15804:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15817:5:15",
														"nodeType": "YulTypedName",
														"src": "15817:5:15",
														"type": ""
													}
												],
												"src": "15759:281:15"
											},
											{
												"body": {
													"nativeSrc": "16074:152:15",
													"nodeType": "YulBlock",
													"src": "16074:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16091:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16091:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16094:77:15",
																		"nodeType": "YulLiteral",
																		"src": "16094:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16084:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16084:6:15"
																},
																"nativeSrc": "16084:88:15",
																"nodeType": "YulFunctionCall",
																"src": "16084:88:15"
															},
															"nativeSrc": "16084:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "16084:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16188:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16188:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16191:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16191:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16181:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:15"
																},
																"nativeSrc": "16181:15:15",
																"nodeType": "YulFunctionCall",
																"src": "16181:15:15"
															},
															"nativeSrc": "16181:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "16181:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16212:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16212:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16215:4:15",
																		"nodeType": "YulLiteral",
																		"src": "16215:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16205:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16205:6:15"
																},
																"nativeSrc": "16205:15:15",
																"nodeType": "YulFunctionCall",
																"src": "16205:15:15"
															},
															"nativeSrc": "16205:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "16205:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16046:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "16046:180:15"
											},
											{
												"body": {
													"nativeSrc": "16274:143:15",
													"nodeType": "YulBlock",
													"src": "16274:143:15",
													"statements": [
														{
															"nativeSrc": "16284:25:15",
															"nodeType": "YulAssignment",
															"src": "16284:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16307:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16307:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16289:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "16289:17:15"
																},
																"nativeSrc": "16289:20:15",
																"nodeType": "YulFunctionCall",
																"src": "16289:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16284:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "16284:1:15"
																}
															]
														},
														{
															"nativeSrc": "16318:25:15",
															"nodeType": "YulAssignment",
															"src": "16318:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16341:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16341:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16323:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "16323:17:15"
																},
																"nativeSrc": "16323:20:15",
																"nodeType": "YulFunctionCall",
																"src": "16323:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16318:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "16318:1:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16365:22:15",
																"nodeType": "YulBlock",
																"src": "16365:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16367:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "16367:16:15"
																			},
																			"nativeSrc": "16367:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16367:18:15"
																		},
																		"nativeSrc": "16367:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16367:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16362:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16362:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16355:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16355:6:15"
																},
																"nativeSrc": "16355:9:15",
																"nodeType": "YulFunctionCall",
																"src": "16355:9:15"
															},
															"nativeSrc": "16352:35:15",
															"nodeType": "YulIf",
															"src": "16352:35:15"
														},
														{
															"nativeSrc": "16397:14:15",
															"nodeType": "YulAssignment",
															"src": "16397:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16406:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16406:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16409:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16409:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16402:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16402:3:15"
																},
																"nativeSrc": "16402:9:15",
																"nodeType": "YulFunctionCall",
																"src": "16402:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16397:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "16397:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16232:185:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16263:1:15",
														"nodeType": "YulTypedName",
														"src": "16263:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16266:1:15",
														"nodeType": "YulTypedName",
														"src": "16266:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16272:1:15",
														"nodeType": "YulTypedName",
														"src": "16272:1:15",
														"type": ""
													}
												],
												"src": "16232:185:15"
											},
											{
												"body": {
													"nativeSrc": "16577:288:15",
													"nodeType": "YulBlock",
													"src": "16577:288:15",
													"statements": [
														{
															"nativeSrc": "16587:26:15",
															"nodeType": "YulAssignment",
															"src": "16587:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16599:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16599:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16610:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16610:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16595:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16595:3:15"
																},
																"nativeSrc": "16595:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16595:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16587:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16587:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16667:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16667:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16680:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16680:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16691:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16691:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16676:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16676:3:15"
																		},
																		"nativeSrc": "16676:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16676:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16623:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16623:43:15"
																},
																"nativeSrc": "16623:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16623:71:15"
															},
															"nativeSrc": "16623:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16623:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16748:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16748:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16761:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16761:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16772:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16772:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16757:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16757:3:15"
																		},
																		"nativeSrc": "16757:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16757:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16704:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16704:43:15"
																},
																"nativeSrc": "16704:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16704:72:15"
															},
															"nativeSrc": "16704:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16704:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16830:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16830:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16843:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16843:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16854:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16854:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16839:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16839:3:15"
																		},
																		"nativeSrc": "16839:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16839:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16786:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16786:43:15"
																},
																"nativeSrc": "16786:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16786:72:15"
															},
															"nativeSrc": "16786:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16786:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16423:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16533:9:15",
														"nodeType": "YulTypedName",
														"src": "16533:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16545:6:15",
														"nodeType": "YulTypedName",
														"src": "16545:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16553:6:15",
														"nodeType": "YulTypedName",
														"src": "16553:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16561:6:15",
														"nodeType": "YulTypedName",
														"src": "16561:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16572:4:15",
														"nodeType": "YulTypedName",
														"src": "16572:4:15",
														"type": ""
													}
												],
												"src": "16423:442:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be an integer\")\n\n    }\n\n    function abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total supply exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101ee575f3560e01c80638da5cb5b1161010d578063d0516650116100a0578063e43252d71161006f578063e43252d7146105c0578063e5839836146105dc578063eb91d37e1461060c578063f2fde38b1461062a576101ee565b8063d051665014610526578063da0239a614610556578063dd62ed3e14610574578063e08ba51a146105a4576101ee565b8063a9059cbb116100dc578063a9059cbb1461049e578063aba63705146104ce578063bdd3d825146104ec578063cb4b73ab1461050a576101ee565b80638da5cb5b14610414578063902d55a51461043257806395d89b41146104505780639b19251a1461046e576101ee565b8063313ce567116101855780636290865d116101545780636290865d146103a057806370a08231146103be578063715018a6146103ee5780638ab1d681146103f8576101ee565b8063313ce5671461032a57806340c10f191461034857806354fd4d50146103645780635c975abb14610382576101ee565b8063158b1a57116101c1578063158b1a571461028e57806318160ddd146102be57806323b872dd146102dc5780632d3802421461030c576101ee565b806306fdde03146101f2578063095ea7b31461021057806312cae7af14610240578063134e18f414610270575b5f5ffd5b6101fa610646565b60405161020791906117e3565b60405180910390f35b61022a60048036038101906102259190611894565b6106d6565b60405161023791906118ec565b60405180910390f35b61025a60048036038101906102559190611905565b6106f8565b604051610267919061193f565b60405180910390f35b610278610709565b6040516102859190611967565b60405180910390f35b6102a860048036038101906102a39190611905565b610710565b6040516102b5919061193f565b60405180910390f35b6102c6610719565b6040516102d3919061193f565b60405180910390f35b6102f660048036038101906102f19190611980565b610722565b60405161030391906118ec565b60405180910390f35b610314610815565b604051610321919061193f565b60405180910390f35b61033261081b565b60405161033f91906119eb565b60405180910390f35b610362600480360381019061035d9190611894565b610822565b005b61036c610933565b60405161037991906117e3565b60405180910390f35b61038a610970565b60405161039791906118ec565b60405180910390f35b6103a8610977565b6040516103b59190611967565b60405180910390f35b6103d860048036038101906103d39190611905565b61097e565b6040516103e5919061193f565b60405180910390f35b6103f66109c3565b005b610412600480360381019061040d9190611905565b6109d6565b005b61041c610a35565b6040516104299190611967565b60405180910390f35b61043a610a5d565b604051610447919061193f565b60405180910390f35b610458610a6b565b60405161046591906117e3565b60405180910390f35b61048860048036038101906104839190611905565b610afb565b60405161049591906118ec565b60405180910390f35b6104b860048036038101906104b39190611894565b610b18565b6040516104c591906118ec565b60405180910390f35b6104d6610c09565b6040516104e39190611967565b60405180910390f35b6104f4610c10565b6040516105019190611967565b60405180910390f35b610524600480360381019061051f9190611905565b610c35565b005b610540600480360381019061053b9190611905565b610c94565b60405161054d91906118ec565b60405180910390f35b61055e610cb1565b60405161056b919061193f565b60405180910390f35b61058e60048036038101906105899190611a04565b610ccf565b60405161059b919061193f565b60405180910390f35b6105be60048036038101906105b99190611905565b610d51565b005b6105da60048036038101906105d59190611905565b610db1565b005b6105f660048036038101906105f19190611905565b610e11565b60405161060391906118ec565b60405180910390f35b610614610e63565b604051610621919061193f565b60405180910390f35b610644600480360381019061063f9190611905565b610f52565b005b60606003805461065590611a6f565b80601f016020809104026020016040519081016040528092919081815260200182805461068190611a6f565b80156106cc5780601f106106a3576101008083540402835291602001916106cc565b820191905f5260205f20905b8154815290600101906020018083116106af57829003601f168201915b5050505050905090565b5f5f6106e0610fd6565b90506106ed818585610fdd565b600191505092915050565b5f6107028261097e565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a490611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611b51565b60405180910390fd5b61080c848484610fef565b90509392505050565b60095481565b5f5f905090565b61082a61101d565b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa90611bb9565b60405180910390fd5b6969e10de76676d0800000816009546108cc9190611c04565b111561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490611c81565b60405180910390fd5b61091782826110a4565b8060095f8282546109289190611c04565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109cb61101d565b6109d45f611123565b565b6109de61101d565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a7a90611a6f565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa690611a6f565b8015610af15780601f10610ac857610100808354040283529160200191610af1565b820191905f5260205f20905b815481529060010190602001808311610ad457829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9a90611ae9565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610bf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bee90611b51565b60405180910390fd5b610c0183836111e6565b905092915050565b5f30905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c3d61101d565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f6009546969e10de76676d0800000610cca9190611c9f565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5961101d565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610db961101d565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610ed3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ef79190611dbd565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610f3d9190611f89565b610f479190612000565b905080935050505090565b610f5a61101d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fca575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fc19190611967565b60405180910390fd5b610fd381611123565b50565b5f33905090565b610fea8383836001611208565b505050565b5f5f610ff9610fd6565b90506110068582856113d7565b61101185858561146a565b60019150509392505050565b611025610fd6565b73ffffffffffffffffffffffffffffffffffffffff16611043610a35565b73ffffffffffffffffffffffffffffffffffffffff16146110a257611066610fd6565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110999190611967565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611114575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161110b9190611967565b60405180910390fd5b61111f5f838361155a565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6111f0610fd6565b90506111fd81858561146a565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611278575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161126f9190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112e8575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112df9190611967565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113d1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113c8919061193f565b60405180910390a35b50505050565b5f6113e28484610ccf565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114645781811015611455578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144c93929190612030565b60405180910390fd5b61146384848484035f611208565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114da575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114d19190611967565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361154a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016115419190611967565b60405180910390fd5b61155583838361155a565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115aa578060025f82825461159e9190611c04565b92505081905550611678565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611633578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161162a93929190612030565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116bf578060025f8282540392505081905550611709565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611766919061193f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117b582611773565b6117bf818561177d565b93506117cf81856020860161178d565b6117d88161179b565b840191505092915050565b5f6020820190508181035f8301526117fb81846117ab565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61183082611807565b9050919050565b61184081611826565b811461184a575f5ffd5b50565b5f8135905061185b81611837565b92915050565b5f819050919050565b61187381611861565b811461187d575f5ffd5b50565b5f8135905061188e8161186a565b92915050565b5f5f604083850312156118aa576118a9611803565b5b5f6118b78582860161184d565b92505060206118c885828601611880565b9150509250929050565b5f8115159050919050565b6118e6816118d2565b82525050565b5f6020820190506118ff5f8301846118dd565b92915050565b5f6020828403121561191a57611919611803565b5b5f6119278482850161184d565b91505092915050565b61193981611861565b82525050565b5f6020820190506119525f830184611930565b92915050565b61196181611826565b82525050565b5f60208201905061197a5f830184611958565b92915050565b5f5f5f6060848603121561199757611996611803565b5b5f6119a48682870161184d565b93505060206119b58682870161184d565b92505060406119c686828701611880565b9150509250925092565b5f60ff82169050919050565b6119e5816119d0565b82525050565b5f6020820190506119fe5f8301846119dc565b92915050565b5f5f60408385031215611a1a57611a19611803565b5b5f611a278582860161184d565b9250506020611a388582860161184d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a8657607f821691505b602082108103611a9957611a98611a42565b5b50919050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f611ad360108361177d565b9150611ade82611a9f565b602082019050919050565b5f6020820190508181035f830152611b0081611ac7565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611b3b60198361177d565b9150611b4682611b07565b602082019050919050565b5f6020820190508181035f830152611b6881611b2f565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611ba3600f8361177d565b9150611bae82611b6f565b602082019050919050565b5f6020820190508181035f830152611bd081611b97565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c0e82611861565b9150611c1983611861565b9250828201905080821115611c3157611c30611bd7565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611c6b60158361177d565b9150611c7682611c37565b602082019050919050565b5f6020820190508181035f830152611c9881611c5f565b9050919050565b5f611ca982611861565b9150611cb483611861565b9250828203905081811115611ccc57611ccb611bd7565b5b92915050565b611cdb81611807565b8114611ce5575f5ffd5b50565b5f81519050611cf681611cd2565b92915050565b5f8160020b9050919050565b611d1181611cfc565b8114611d1b575f5ffd5b50565b5f81519050611d2c81611d08565b92915050565b5f61ffff82169050919050565b611d4881611d32565b8114611d52575f5ffd5b50565b5f81519050611d6381611d3f565b92915050565b611d72816119d0565b8114611d7c575f5ffd5b50565b5f81519050611d8d81611d69565b92915050565b611d9c816118d2565b8114611da6575f5ffd5b50565b5f81519050611db781611d93565b92915050565b5f5f5f5f5f5f5f60e0888a031215611dd857611dd7611803565b5b5f611de58a828b01611ce8565b9750506020611df68a828b01611d1e565b9650506040611e078a828b01611d55565b9550506060611e188a828b01611d55565b9450506080611e298a828b01611d55565b93505060a0611e3a8a828b01611d7f565b92505060c0611e4b8a828b01611da9565b91505092959891949750929550565b5f8160011c9050919050565b5f5f8291508390505b6001851115611eaf57808604811115611e8b57611e8a611bd7565b5b6001851615611e9a5780820291505b8081029050611ea885611e5a565b9450611e6f565b94509492505050565b5f82611ec75760019050611f82565b81611ed4575f9050611f82565b8160018114611eea5760028114611ef457611f23565b6001915050611f82565b60ff841115611f0657611f05611bd7565b5b8360020a915084821115611f1d57611f1c611bd7565b5b50611f82565b5060208310610133831016604e8410600b8410161715611f585782820a905083811115611f5357611f52611bd7565b5b611f82565b611f658484846001611e66565b92509050818404811115611f7c57611f7b611bd7565b5b81810290505b9392505050565b5f611f9382611861565b9150611f9e836119d0565b9250611fcb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611eb8565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61200a82611861565b915061201583611861565b92508261202557612024611fd3565b5b828204905092915050565b5f6060820190506120435f830186611958565b6120506020830185611930565b61205d6040830184611930565b94935050505056fea2646970667358221220c170f3f79e9404792cff6951ad0d0bb678cf7b13539ae1f43a16b0baa21e5cc064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xD0516650 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE43252D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x62A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xD0516650 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x5A4 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x50A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x46E JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6290865D GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x3F8 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x382 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x158B1A57 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x30C JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x270 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1FA PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1980 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36C PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH2 0x9C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0x9D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x458 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x488 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F4 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55E PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x614 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1905 JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x655 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x681 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6E0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x6ED DUP2 DUP6 DUP6 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x702 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80C DUP5 DUP5 DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x82A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AA SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x9 SLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST GT ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x917 DUP3 DUP3 PUSH2 0x10A4 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CB PUSH2 0x101D JUMP JUMPDEST PUSH2 0x9D4 PUSH0 PUSH2 0x1123 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9DE PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA7A SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA6 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9A SWAP1 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xBF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC01 DUP4 DUP4 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC3D PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD59 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDB9 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xED3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF5A PUSH2 0x101D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFD3 DUP2 PUSH2 0x1123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFEA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1208 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFF9 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1006 DUP6 DUP3 DUP6 PUSH2 0x13D7 JUMP JUMPDEST PUSH2 0x1011 DUP6 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1025 PUSH2 0xFD6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1043 PUSH2 0xA35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A2 JUMPI PUSH2 0x1066 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1114 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x111F PUSH0 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x11F0 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD DUP2 DUP6 DUP6 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1278 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E2 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1464 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1455 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1463 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1208 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D1 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x154A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x1967 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1555 DUP4 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x159E SWAP2 SWAP1 PUSH2 0x1C04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1678 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1633 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16BF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1709 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1766 SWAP2 SWAP1 PUSH2 0x193F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17B5 DUP3 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x17BF DUP2 DUP6 PUSH2 0x177D JUMP JUMPDEST SWAP4 POP PUSH2 0x17CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x179B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17FB DUP2 DUP5 PUSH2 0x17AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1830 DUP3 PUSH2 0x1807 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1840 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP2 EQ PUSH2 0x184A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185B DUP2 PUSH2 0x1837 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1873 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP2 EQ PUSH2 0x187D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188E DUP2 PUSH2 0x186A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E6 DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FF PUSH0 DUP4 ADD DUP5 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191A JUMPI PUSH2 0x1919 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1927 DUP5 DUP3 DUP6 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1939 DUP2 PUSH2 0x1861 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1952 PUSH0 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1961 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197A PUSH0 DUP4 ADD DUP5 PUSH2 0x1958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A4 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19B5 DUP7 DUP3 DUP8 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1880 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E5 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FE PUSH0 DUP4 ADD DUP5 PUSH2 0x19DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A19 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x184D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A99 JUMPI PUSH2 0x1A98 PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD3 PUSH1 0x10 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADE DUP3 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B00 DUP2 PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3B PUSH1 0x19 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B46 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B68 DUP2 PUSH2 0x1B2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BA3 PUSH1 0xF DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE DUP3 PUSH2 0x1B6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BD0 DUP2 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C0E DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C19 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6B PUSH1 0x15 DUP4 PUSH2 0x177D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C76 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C98 DUP2 PUSH2 0x1C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA9 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB4 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCB PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CDB DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF6 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D11 DUP2 PUSH2 0x1CFC JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D2C DUP2 PUSH2 0x1D08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D32 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D63 DUP2 PUSH2 0x1D3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D72 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D8D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D9C DUP2 PUSH2 0x18D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DB7 DUP2 PUSH2 0x1D93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1DD8 JUMPI PUSH2 0x1DD7 PUSH2 0x1803 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DE5 DUP11 DUP3 DUP12 ADD PUSH2 0x1CE8 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1DF6 DUP11 DUP3 DUP12 ADD PUSH2 0x1D1E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1E07 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1E18 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1E29 DUP11 DUP3 DUP12 ADD PUSH2 0x1D55 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1E3A DUP11 DUP3 DUP12 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1E4B DUP11 DUP3 DUP12 ADD PUSH2 0x1DA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1EAF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E8B JUMPI PUSH2 0x1E8A PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E9A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1EA8 DUP6 PUSH2 0x1E5A JUMP JUMPDEST SWAP5 POP PUSH2 0x1E6F JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1EC7 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH2 0x1ED4 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F82 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EF4 JUMPI PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F05 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F82 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F58 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1F53 JUMPI PUSH2 0x1F52 PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1F65 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F7C JUMPI PUSH2 0x1F7B PUSH2 0x1BD7 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F93 DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9E DUP4 PUSH2 0x19D0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FCB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x200A DUP3 PUSH2 0x1861 JUMP JUMPDEST SWAP2 POP PUSH2 0x2015 DUP4 PUSH2 0x1861 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2025 JUMPI PUSH2 0x2024 PUSH2 0x1FD3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2043 PUSH0 DUP4 ADD DUP7 PUSH2 0x1958 JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1930 JUMP JUMPDEST PUSH2 0x205D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1930 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH17 0xF3F79E9404792CFF6951AD0D0BB678CF7B SGT MSTORE8 SWAP11 RJUMPI 0xF43A AND 0xB0 0xBA LOG2 0x1E TLOAD 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "378:4399:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4214:143:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2237:139;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2776:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3333:313:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;779:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3696:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2130:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2522:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2384:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1428:108:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:55:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;600:41:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3007:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2021:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1685:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;661:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1832:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1565:91:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1288:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2618:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4396:378;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;4214:143:13:-;4274:7;4301:15;4311:4;4301:9;:15::i;:::-;4294:22;;4214:143;;;:::o;2237:139::-;2297:7;2332:1;2317:17;;2237:139;:::o;2776:151::-;2854:7;2881:1;2874:8;;2776:151;;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;3333:313:13:-;3431:4;3457:6;:14;3464:6;3457:14;;;;;;;;;;;;;;;;;;;;;;;;;3456:15;3448:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3537:6;3521:24;;3511:6;:34;3503:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3593:45;3612:6;3620:9;3631:6;3593:18;:45::i;:::-;3586:52;;3333:313;;;;;:::o;779:27::-;;;;:::o;4049:111::-;4107:5;4132:1;4125:8;;4049:111;:::o;3696:264::-;1531:13:0;:11;:13::i;:::-;3776:9:13::1;:13;3786:2;3776:13;;;;;;;;;;;;;;;;;;;;;;;;;3768:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;561:16;3843:6;3828:12;;:21;;;;:::i;:::-;:37;;3820:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3902:17;3908:2;3912:6;3902:5;:17::i;:::-;3946:6;3930:12;;:22;;;;;;;:::i;:::-;;;;;;;;3696:264:::0;;:::o;2130:99::-;2181:13;2207:14;;;;;;;;;;;;;;;;;;;2130:99;:::o;2522:88::-;2572:4;2596:5;2589:12;;2522:88;:::o;2384:130::-;2438:7;2473:1;2458:17;;2384:130;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1428:108:13:-;1531:13:0;:11;:13::i;:::-;1523:5:13::1;1503:9;:17;1513:6;1503:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1428:108:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;522:55:13:-;561:16;522:55;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;600:41:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;3007:285::-;3085:4;3111:6;:18;3118:10;3111:18;;;;;;;;;;;;;;;;;;;;;;;;;3110:19;3102:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3195:6;3179:24;;3169:6;:34;3161:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3251:33;3266:9;3277:6;3251:14;:33::i;:::-;3244:40;;3007:285;;;;:::o;2021:101::-;2074:7;2109:4;2094:20;;2021:101;:::o;722:26::-;;;;;;;;;;;;;:::o;1685:94::-;1531:13:0;:11;:13::i;:::-;1766:5:13::1;1751:6;:12;1758:4;1751:12;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;1685:94:::0;:::o;661:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;1832:146::-;1882:7;1924:12;;561:16;1909:27;;;;:::i;:::-;1902:34;;1832:146;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;1565:91:13:-;1531:13:0;:11;:13::i;:::-;1644:4:13::1;1629:6;:12;1636:4;1629:12;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;1565:91:::0;:::o;1288:102::-;1531:13:0;:11;:13::i;:::-;1378:4:13::1;1358:9;:17;1368:6;1358:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1288:102:::0;:::o;2618:150::-;2689:4;2713:6;:19;2720:11;2713:19;;;;;;;;;;;;;;;;;;;;;;;;;2706:26;;2618:150;;;:::o;4396:378::-;4446:7;4466:19;4503:11;;;;;;;;;;;4466:49;;4527:20;4563:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4526:49;;;;;;;;4642:13;4688:10;4683:1;4666:12;4658:21;;:26;;;;:::i;:::-;:41;;;;:::i;:::-;4642:57;;4739:5;4732:12;;;;;4396:378;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:118::-;4113:24;4131:5;4113:24;:::i;:::-;4108:3;4101:37;4026:118;;:::o;4150:222::-;4243:4;4281:2;4270:9;4266:18;4258:26;;4294:71;4362:1;4351:9;4347:17;4338:6;4294:71;:::i;:::-;4150:222;;;;:::o;4378:619::-;4455:6;4463;4471;4520:2;4508:9;4499:7;4495:23;4491:32;4488:119;;;4526:79;;:::i;:::-;4488:119;4646:1;4671:53;4716:7;4707:6;4696:9;4692:22;4671:53;:::i;:::-;4661:63;;4617:117;4773:2;4799:53;4844:7;4835:6;4824:9;4820:22;4799:53;:::i;:::-;4789:63;;4744:118;4901:2;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4872:118;4378:619;;;;;:::o;5003:86::-;5038:7;5078:4;5071:5;5067:16;5056:27;;5003:86;;;:::o;5095:112::-;5178:22;5194:5;5178:22;:::i;:::-;5173:3;5166:35;5095:112;;:::o;5213:214::-;5302:4;5340:2;5329:9;5325:18;5317:26;;5353:67;5417:1;5406:9;5402:17;5393:6;5353:67;:::i;:::-;5213:214;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:166::-;6565:18;6561:1;6553:6;6549:14;6542:42;6425:166;:::o;6597:366::-;6739:3;6760:67;6824:2;6819:3;6760:67;:::i;:::-;6753:74;;6836:93;6925:3;6836:93;:::i;:::-;6954:2;6949:3;6945:12;6938:19;;6597:366;;;:::o;6969:419::-;7135:4;7173:2;7162:9;7158:18;7150:26;;7222:9;7216:4;7212:20;7208:1;7197:9;7193:17;7186:47;7250:131;7376:4;7250:131;:::i;:::-;7242:139;;6969:419;;;:::o;7394:175::-;7534:27;7530:1;7522:6;7518:14;7511:51;7394:175;:::o;7575:366::-;7717:3;7738:67;7802:2;7797:3;7738:67;:::i;:::-;7731:74;;7814:93;7903:3;7814:93;:::i;:::-;7932:2;7927:3;7923:12;7916:19;;7575:366;;;:::o;7947:419::-;8113:4;8151:2;8140:9;8136:18;8128:26;;8200:9;8194:4;8190:20;8186:1;8175:9;8171:17;8164:47;8228:131;8354:4;8228:131;:::i;:::-;8220:139;;7947:419;;;:::o;8372:165::-;8512:17;8508:1;8500:6;8496:14;8489:41;8372:165;:::o;8543:366::-;8685:3;8706:67;8770:2;8765:3;8706:67;:::i;:::-;8699:74;;8782:93;8871:3;8782:93;:::i;:::-;8900:2;8895:3;8891:12;8884:19;;8543:366;;;:::o;8915:419::-;9081:4;9119:2;9108:9;9104:18;9096:26;;9168:9;9162:4;9158:20;9154:1;9143:9;9139:17;9132:47;9196:131;9322:4;9196:131;:::i;:::-;9188:139;;8915:419;;;:::o;9340:180::-;9388:77;9385:1;9378:88;9485:4;9482:1;9475:15;9509:4;9506:1;9499:15;9526:191;9566:3;9585:20;9603:1;9585:20;:::i;:::-;9580:25;;9619:20;9637:1;9619:20;:::i;:::-;9614:25;;9662:1;9659;9655:9;9648:16;;9683:3;9680:1;9677:10;9674:36;;;9690:18;;:::i;:::-;9674:36;9526:191;;;;:::o;9723:171::-;9863:23;9859:1;9851:6;9847:14;9840:47;9723:171;:::o;9900:366::-;10042:3;10063:67;10127:2;10122:3;10063:67;:::i;:::-;10056:74;;10139:93;10228:3;10139:93;:::i;:::-;10257:2;10252:3;10248:12;10241:19;;9900:366;;;:::o;10272:419::-;10438:4;10476:2;10465:9;10461:18;10453:26;;10525:9;10519:4;10515:20;10511:1;10500:9;10496:17;10489:47;10553:131;10679:4;10553:131;:::i;:::-;10545:139;;10272:419;;;:::o;10697:194::-;10737:4;10757:20;10775:1;10757:20;:::i;:::-;10752:25;;10791:20;10809:1;10791:20;:::i;:::-;10786:25;;10835:1;10832;10828:9;10820:17;;10859:1;10853:4;10850:11;10847:37;;;10864:18;;:::i;:::-;10847:37;10697:194;;;;:::o;10897:122::-;10970:24;10988:5;10970:24;:::i;:::-;10963:5;10960:35;10950:63;;11009:1;11006;10999:12;10950:63;10897:122;:::o;11025:143::-;11082:5;11113:6;11107:13;11098:22;;11129:33;11156:5;11129:33;:::i;:::-;11025:143;;;;:::o;11174:90::-;11209:7;11252:5;11249:1;11238:20;11227:31;;11174:90;;;:::o;11270:118::-;11341:22;11357:5;11341:22;:::i;:::-;11334:5;11331:33;11321:61;;11378:1;11375;11368:12;11321:61;11270:118;:::o;11394:139::-;11449:5;11480:6;11474:13;11465:22;;11496:31;11521:5;11496:31;:::i;:::-;11394:139;;;;:::o;11539:89::-;11575:7;11615:6;11608:5;11604:18;11593:29;;11539:89;;;:::o;11634:120::-;11706:23;11723:5;11706:23;:::i;:::-;11699:5;11696:34;11686:62;;11744:1;11741;11734:12;11686:62;11634:120;:::o;11760:141::-;11816:5;11847:6;11841:13;11832:22;;11863:32;11889:5;11863:32;:::i;:::-;11760:141;;;;:::o;11907:118::-;11978:22;11994:5;11978:22;:::i;:::-;11971:5;11968:33;11958:61;;12015:1;12012;12005:12;11958:61;11907:118;:::o;12031:139::-;12086:5;12117:6;12111:13;12102:22;;12133:31;12158:5;12133:31;:::i;:::-;12031:139;;;;:::o;12176:116::-;12246:21;12261:5;12246:21;:::i;:::-;12239:5;12236:32;12226:60;;12282:1;12279;12272:12;12226:60;12176:116;:::o;12298:137::-;12352:5;12383:6;12377:13;12368:22;;12399:30;12423:5;12399:30;:::i;:::-;12298:137;;;;:::o;12441:1271::-;12555:6;12563;12571;12579;12587;12595;12603;12652:3;12640:9;12631:7;12627:23;12623:33;12620:120;;;12659:79;;:::i;:::-;12620:120;12779:1;12804:64;12860:7;12851:6;12840:9;12836:22;12804:64;:::i;:::-;12794:74;;12750:128;12917:2;12943:62;12997:7;12988:6;12977:9;12973:22;12943:62;:::i;:::-;12933:72;;12888:127;13054:2;13080:63;13135:7;13126:6;13115:9;13111:22;13080:63;:::i;:::-;13070:73;;13025:128;13192:2;13218:63;13273:7;13264:6;13253:9;13249:22;13218:63;:::i;:::-;13208:73;;13163:128;13330:3;13357:63;13412:7;13403:6;13392:9;13388:22;13357:63;:::i;:::-;13347:73;;13301:129;13469:3;13496:62;13550:7;13541:6;13530:9;13526:22;13496:62;:::i;:::-;13486:72;;13440:128;13607:3;13634:61;13687:7;13678:6;13667:9;13663:22;13634:61;:::i;:::-;13624:71;;13578:127;12441:1271;;;;;;;;;;:::o;13718:102::-;13760:8;13807:5;13804:1;13800:13;13779:34;;13718:102;;;:::o;13826:848::-;13887:5;13894:4;13918:6;13909:15;;13942:5;13933:14;;13956:712;13977:1;13967:8;13964:15;13956:712;;;14072:4;14067:3;14063:14;14057:4;14054:24;14051:50;;;14081:18;;:::i;:::-;14051:50;14131:1;14121:8;14117:16;14114:451;;;14546:4;14539:5;14535:16;14526:25;;14114:451;14596:4;14590;14586:15;14578:23;;14626:32;14649:8;14626:32;:::i;:::-;14614:44;;13956:712;;;13826:848;;;;;;;:::o;14680:1073::-;14734:5;14925:8;14915:40;;14946:1;14937:10;;14948:5;;14915:40;14974:4;14964:36;;14991:1;14982:10;;14993:5;;14964:36;15060:4;15108:1;15103:27;;;;15144:1;15139:191;;;;15053:277;;15103:27;15121:1;15112:10;;15123:5;;;15139:191;15184:3;15174:8;15171:17;15168:43;;;15191:18;;:::i;:::-;15168:43;15240:8;15237:1;15233:16;15224:25;;15275:3;15268:5;15265:14;15262:40;;;15282:18;;:::i;:::-;15262:40;15315:5;;;15053:277;;15439:2;15429:8;15426:16;15420:3;15414:4;15411:13;15407:36;15389:2;15379:8;15376:16;15371:2;15365:4;15362:12;15358:35;15342:111;15339:246;;;15495:8;15489:4;15485:19;15476:28;;15530:3;15523:5;15520:14;15517:40;;;15537:18;;:::i;:::-;15517:40;15570:5;;15339:246;15610:42;15648:3;15638:8;15632:4;15629:1;15610:42;:::i;:::-;15595:57;;;;15684:4;15679:3;15675:14;15668:5;15665:25;15662:51;;;15693:18;;:::i;:::-;15662:51;15742:4;15735:5;15731:16;15722:25;;14680:1073;;;;;;:::o;15759:281::-;15817:5;15841:23;15859:4;15841:23;:::i;:::-;15833:31;;15885:25;15901:8;15885:25;:::i;:::-;15873:37;;15929:104;15966:66;15956:8;15950:4;15929:104;:::i;:::-;15920:113;;15759:281;;;;:::o;16046:180::-;16094:77;16091:1;16084:88;16191:4;16188:1;16181:15;16215:4;16212:1;16205:15;16232:185;16272:1;16289:20;16307:1;16289:20;:::i;:::-;16284:25;;16323:20;16341:1;16323:20;:::i;:::-;16318:25;;16362:1;16352:35;;16367:18;;:::i;:::-;16352:35;16409:1;16406;16402:9;16397:14;;16232:185;;;;:::o;16423:442::-;16572:4;16610:2;16599:9;16595:18;16587:26;;16623:71;16691:1;16680:9;16676:17;16667:6;16623:71;:::i;:::-;16704:72;16772:2;16761:9;16757:18;16748:6;16704:72;:::i;:::-;16786;16854:2;16843:9;16839:18;16830:6;16786:72;:::i;:::-;16423:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1669400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_SUPPLY()": "393",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"balanceOfUser(address)": "2961",
								"compliance()": "424",
								"decimals()": "383",
								"freezeUser(address)": "infinite",
								"frozen(address)": "2878",
								"getCurrentPrice()": "infinite",
								"getFrozenTokens(address)": "686",
								"identityRegistry()": "492",
								"isFrozen(address)": "2936",
								"mint(address,uint256)": "infinite",
								"mintedAmount()": "2537",
								"name()": "infinite",
								"onchainID()": "446",
								"owner()": "2561",
								"paused()": "449",
								"remainingSupply()": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unfreezeUser(address)": "infinite",
								"uniswapPool()": "2597",
								"version()": "infinite",
								"whitelist(address)": "2945"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 843,
									"end": 1250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 912,
									"end": 922,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 963,
									"end": 964,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 943,
									"end": 953,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 943,
									"end": 960,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 943,
									"end": 964,
									"modifierDepth": 2,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 935,
									"end": 1010,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 935,
									"end": 1010,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1076,
									"end": 1085,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1088,
									"end": 1089,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1089,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1076,
									"end": 1089,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1095,
									"end": 1105,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1095,
									"end": 1112,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1092,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1091,
									"end": 1112,
									"modifierDepth": 2,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1134,
									"end": 1143,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1154,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1156,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1144,
									"end": 1157,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1157,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1165,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1114,
									"end": 1117,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1071,
									"end": 1177,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1189,
									"end": 1220,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1195,
									"end": 1205,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 561,
									"end": 577,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 1189,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1189,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1189,
									"end": 1194,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1189,
									"end": 1220,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1189,
									"end": 1220,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1189,
									"end": 1220,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1189,
									"end": 1220,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1189,
									"end": 1220,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 843,
									"end": 1250,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3382,
									"end": 3388,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3431,
									"end": 3433,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3419,
									"end": 3428,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3410,
									"end": 3417,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3406,
									"end": 3429,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 3402,
									"end": 3434,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 3437,
									"end": 3516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 3437,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "tag",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 3399,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3578,
									"end": 3579,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 3576,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3563,
									"end": 3580,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3557,
									"end": 3581,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3608,
									"end": 3626,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3600,
									"end": 3606,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3597,
									"end": 3627,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "131"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 3630,
									"end": 3709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "tag",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 3630,
									"end": 3709,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "tag",
									"source": 15,
									"value": "131"
								},
								{
									"begin": 3594,
									"end": 3711,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "133"
								},
								{
									"begin": 3816,
									"end": 3823,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3807,
									"end": 3813,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3796,
									"end": 3805,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3792,
									"end": 3814,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 3735,
									"end": 3824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "tag",
									"source": 15,
									"value": "133"
								},
								{
									"begin": 3735,
									"end": 3824,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3725,
									"end": 3824,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3528,
									"end": 3834,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 3841,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3899,
									"end": 3905,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3933,
									"end": 3938,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3917,
									"end": 3939,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 3946,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 3952,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4000,
									"end": 4077,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3997,
									"end": 3998,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3990,
									"end": 4078,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 4094,
									"end": 4095,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 4087,
									"end": 4102,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4121,
									"end": 4125,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 4118,
									"end": 4119,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4111,
									"end": 4126,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4182,
									"end": 4188,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4219,
									"end": 4220,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4209,
									"end": 4221,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4199,
									"end": 4221,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4266,
									"end": 4267,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4260,
									"end": 4264,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4256,
									"end": 4268,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "137"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4343,
									"end": 4347,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 4335,
									"end": 4341,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4331,
									"end": 4348,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4321,
									"end": 4348,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "tag",
									"source": 15,
									"value": "137"
								},
								{
									"begin": 4277,
									"end": 4358,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4407,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4397,
									"end": 4403,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4394,
									"end": 4408,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4374,
									"end": 4392,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4371,
									"end": 4409,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "138"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 4424,
									"end": 4442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "tag",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 4424,
									"end": 4442,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "tag",
									"source": 15,
									"value": "138"
								},
								{
									"begin": 4368,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4189,
									"end": 4458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4138,
									"end": 4458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4513,
									"end": 4517,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4536,
									"end": 4539,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4528,
									"end": 4539,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4559,
									"end": 4562,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4556,
									"end": 4557,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4563,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4593,
									"end": 4597,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4590,
									"end": 4591,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4572,
									"end": 4598,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4464,
									"end": 4605,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4464,
									"end": 4605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4648,
									"end": 4654,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4695,
									"end": 4697,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4690,
									"end": 4692,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4683,
									"end": 4688,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4679,
									"end": 4693,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4675,
									"end": 4698,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4665,
									"end": 4698,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4611,
									"end": 4704,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4611,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4754,
									"end": 4762,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4809,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4794,
									"end": 4810,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4773,
									"end": 4810,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4710,
									"end": 4817,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4710,
									"end": 4817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4892,
									"end": 4898,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4943,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 4930,
									"end": 4940,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4926,
									"end": 4944,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "144"
								},
								{
									"begin": 4995,
									"end": 5061,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4984,
									"end": 4993,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 4965,
									"end": 5062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "tag",
									"source": 15,
									"value": "144"
								},
								{
									"begin": 4965,
									"end": 5062,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 5113,
									"end": 5121,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5102,
									"end": 5111,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 5083,
									"end": 5122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "tag",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 5083,
									"end": 5122,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 5071,
									"end": 5122,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5151,
									"end": 5160,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5149,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5140,
									"end": 5161,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 5131,
									"end": 5161,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5194,
									"end": 5202,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5190,
									"end": 5209,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5183,
									"end": 5188,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5180,
									"end": 5210,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5170,
									"end": 5210,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4899,
									"end": 5216,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4823,
									"end": 5216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5259,
									"end": 5266,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5288,
									"end": 5293,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5277,
									"end": 5293,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5222,
									"end": 5299,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5222,
									"end": 5299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5333,
									"end": 5336,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5354,
									"end": 5359,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5347,
									"end": 5359,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5305,
									"end": 5365,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5305,
									"end": 5365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5421,
									"end": 5430,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "151"
								},
								{
									"begin": 5499,
									"end": 5504,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 5481,
									"end": 5505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "tag",
									"source": 15,
									"value": "151"
								},
								{
									"begin": 5481,
									"end": 5505,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 5472,
									"end": 5506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "tag",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 5472,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 5454,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "tag",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 5454,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5441,
									"end": 5507,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5371,
									"end": 5513,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5371,
									"end": 5513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5583,
									"end": 5588,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5576,
									"end": 5588,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5519,
									"end": 5594,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5519,
									"end": 5594,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "154"
								},
								{
									"begin": 5741,
									"end": 5748,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 5710,
									"end": 5749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "tag",
									"source": 15,
									"value": "154"
								},
								{
									"begin": 5710,
									"end": 5749,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "156"
								},
								{
									"begin": 5844,
									"end": 5860,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 5820,
									"end": 5861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "tag",
									"source": 15,
									"value": "156"
								},
								{
									"begin": 5820,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5812,
									"end": 5818,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5799,
									"end": 5810,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 5771,
									"end": 5862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "tag",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 5771,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5765,
									"end": 5769,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5758,
									"end": 5863,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5676,
									"end": 5869,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5600,
									"end": 5869,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5600,
									"end": 5869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5920,
									"end": 5923,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5941,
									"end": 5942,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5934,
									"end": 5942,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5934,
									"end": 5942,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5875,
									"end": 5948,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5875,
									"end": 5948,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "159"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 6031,
									"end": 6063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "tag",
									"source": 15,
									"value": "159"
								},
								{
									"begin": 6031,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 6130,
									"end": 6136,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6122,
									"end": 6128,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6116,
									"end": 6120,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 6072,
									"end": 6137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "tag",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 6072,
									"end": 6137,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6007,
									"end": 6143,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5954,
									"end": 6143,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5954,
									"end": 6143,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 15,
									"value": "162"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6226,
									"end": 6229,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6219,
									"end": 6224,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6216,
									"end": 6230,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "164"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "165"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 6280,
									"end": 6319,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "tag",
									"source": 15,
									"value": "165"
								},
								{
									"begin": 6280,
									"end": 6319,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6253,
									"end": 6254,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6246,
									"end": 6251,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6242,
									"end": 6255,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6233,
									"end": 6255,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "162"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "tag",
									"source": 15,
									"value": "164"
								},
								{
									"begin": 6209,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6335,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6442,
									"end": 6444,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6437,
									"end": 6440,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6434,
									"end": 6445,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "167"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 6508,
									"end": 6513,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 6476,
									"end": 6514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "tag",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 6476,
									"end": 6514,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "169"
								},
								{
									"begin": 6578,
									"end": 6588,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 6560,
									"end": 6589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "tag",
									"source": 15,
									"value": "169"
								},
								{
									"begin": 6560,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6550,
									"end": 6558,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6546,
									"end": 6590,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6743,
									"end": 6745,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6741,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6728,
									"end": 6746,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "170"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6764,
									"end": 6772,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6749,
									"end": 6772,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "tag",
									"source": 15,
									"value": "170"
								},
								{
									"begin": 6725,
									"end": 6774,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "171"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "172"
								},
								{
									"begin": 6861,
									"end": 6864,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 6843,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "tag",
									"source": 15,
									"value": "172"
								},
								{
									"begin": 6843,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6833,
									"end": 6841,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6829,
									"end": 6866,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6816,
									"end": 6827,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 6787,
									"end": 6867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "tag",
									"source": 15,
									"value": "171"
								},
								{
									"begin": 6787,
									"end": 6867,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6446,
									"end": 6877,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "tag",
									"source": 15,
									"value": "167"
								},
								{
									"begin": 6431,
									"end": 6877,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6341,
									"end": 6884,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6341,
									"end": 6884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6944,
									"end": 6952,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6994,
									"end": 6999,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6988,
									"end": 6992,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6984,
									"end": 7000,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6963,
									"end": 7000,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6890,
									"end": 7007,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6890,
									"end": 7007,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7057,
									"end": 7063,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7134,
									"end": 7140,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 7126,
									"end": 7131,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7123,
									"end": 7124,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 7119,
									"end": 7132,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 7090,
									"end": 7141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "tag",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 7090,
									"end": 7141,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7086,
									"end": 7142,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 7171,
									"end": 7175,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 7165,
									"end": 7169,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7161,
									"end": 7176,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7151,
									"end": 7176,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7064,
									"end": 7182,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7013,
									"end": 7182,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7013,
									"end": 7182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 7434,
									"end": 7437,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7428,
									"end": 7432,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 7409,
									"end": 7438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "tag",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 7409,
									"end": 7438,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7401,
									"end": 7438,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7471,
									"end": 7474,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7468,
									"end": 7469,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 7464,
									"end": 7475,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 7458,
									"end": 7462,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7455,
									"end": 7476,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7447,
									"end": 7476,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7187,
									"end": 7482,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7187,
									"end": 7482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "179"
								},
								{
									"begin": 7637,
									"end": 7640,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 7604,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "tag",
									"source": 15,
									"value": "179"
								},
								{
									"begin": 7604,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7706,
									"end": 7724,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7698,
									"end": 7704,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7695,
									"end": 7725,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "180"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "181"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 7728,
									"end": 7746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "tag",
									"source": 15,
									"value": "181"
								},
								{
									"begin": 7728,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "tag",
									"source": 15,
									"value": "180"
								},
								{
									"begin": 7692,
									"end": 7748,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "182"
								},
								{
									"begin": 7804,
									"end": 7808,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7798,
									"end": 7809,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 7772,
									"end": 7810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "tag",
									"source": 15,
									"value": "182"
								},
								{
									"begin": 7772,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 7917,
									"end": 7923,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7903,
									"end": 7907,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 7857,
									"end": 7924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "tag",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 7857,
									"end": 7924,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7951,
									"end": 7952,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7975,
									"end": 7979,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7962,
									"end": 7979,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8007,
									"end": 8009,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 7999,
									"end": 8005,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7996,
									"end": 8010,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 8024,
									"end": 8025,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "185"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8681,
									"end": 8682,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8698,
									"end": 8704,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8747,
									"end": 8756,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8742,
									"end": 8745,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 8738,
									"end": 8757,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8732,
									"end": 8758,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8723,
									"end": 8758,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "tag",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 8695,
									"end": 8772,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "187"
								},
								{
									"begin": 8858,
									"end": 8864,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 8851,
									"end": 8856,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 8798,
									"end": 8865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "tag",
									"source": 15,
									"value": "187"
								},
								{
									"begin": 8798,
									"end": 8865,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8792,
									"end": 8796,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8785,
									"end": 8866,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8654,
									"end": 8876,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "184"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "tag",
									"source": 15,
									"value": "185"
								},
								{
									"begin": 8019,
									"end": 8637,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8071,
									"end": 8075,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8067,
									"end": 8076,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 8059,
									"end": 8065,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8055,
									"end": 8077,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "188"
								},
								{
									"begin": 8137,
									"end": 8141,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 8105,
									"end": 8142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "tag",
									"source": 15,
									"value": "188"
								},
								{
									"begin": 8105,
									"end": 8142,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8164,
									"end": 8165,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 15,
									"value": "189"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8192,
									"end": 8199,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8189,
									"end": 8190,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8186,
									"end": 8200,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "191"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8271,
									"end": 8280,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8266,
									"end": 8269,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8262,
									"end": 8281,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8256,
									"end": 8282,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8241,
									"end": 8283,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8322,
									"end": 8323,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8314,
									"end": 8320,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8310,
									"end": 8324,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 8300,
									"end": 8324,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8369,
									"end": 8371,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 8358,
									"end": 8367,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 8354,
									"end": 8372,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 8341,
									"end": 8372,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8215,
									"end": 8219,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 8212,
									"end": 8213,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8208,
									"end": 8220,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8203,
									"end": 8220,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "189"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "tag",
									"source": 15,
									"value": "191"
								},
								{
									"begin": 8178,
									"end": 8386,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8414,
									"end": 8420,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8405,
									"end": 8412,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8402,
									"end": 8421,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "192"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8472,
									"end": 8481,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8467,
									"end": 8470,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8463,
									"end": 8482,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8457,
									"end": 8483,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "193"
								},
								{
									"begin": 8557,
									"end": 8561,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8549,
									"end": 8555,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8545,
									"end": 8562,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8534,
									"end": 8543,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 8515,
									"end": 8563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "tag",
									"source": 15,
									"value": "193"
								},
								{
									"begin": 8515,
									"end": 8563,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8507,
									"end": 8513,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8500,
									"end": 8564,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8422,
									"end": 8578,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "tag",
									"source": 15,
									"value": "192"
								},
								{
									"begin": 8399,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8624,
									"end": 8625,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8620,
									"end": 8621,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 8612,
									"end": 8618,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8608,
									"end": 8622,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 8604,
									"end": 8626,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8598,
									"end": 8602,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8591,
									"end": 8627,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8026,
									"end": 8637,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "tag",
									"source": 15,
									"value": "184"
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7989,
									"end": 8876,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7579,
									"end": 8882,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7487,
									"end": 8882,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7487,
									"end": 8882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "195"
								},
								{
									"begin": 8993,
									"end": 8998,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 8975,
									"end": 8999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "tag",
									"source": 15,
									"value": "195"
								},
								{
									"begin": 8975,
									"end": 8999,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8970,
									"end": 8973,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8963,
									"end": 9000,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8888,
									"end": 9006,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8888,
									"end": 9006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9143,
									"end": 9145,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9132,
									"end": 9141,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9128,
									"end": 9146,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9120,
									"end": 9146,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "197"
								},
								{
									"begin": 9224,
									"end": 9225,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9213,
									"end": 9222,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9209,
									"end": 9226,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9200,
									"end": 9206,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 9156,
									"end": 9227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "tag",
									"source": 15,
									"value": "197"
								},
								{
									"begin": 9156,
									"end": 9227,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9012,
									"end": 9234,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9012,
									"end": 9234,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9335,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9358,
									"end": 9364,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9353,
									"end": 9356,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9346,
									"end": 9365,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9398,
									"end": 9402,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9393,
									"end": 9396,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9389,
									"end": 9403,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9374,
									"end": 9403,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9240,
									"end": 9409,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9240,
									"end": 9409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9555,
									"end": 9589,
									"name": "PUSH",
									"source": 15,
									"value": "4174206C65617374206F6E652077686974656C69737465642061646472657373"
								},
								{
									"begin": 9551,
									"end": 9552,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9543,
									"end": 9549,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9539,
									"end": 9553,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9532,
									"end": 9590,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9624,
									"end": 9635,
									"name": "PUSH",
									"source": 15,
									"value": "2072657175697265640000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9619,
									"end": 9621,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9611,
									"end": 9617,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9607,
									"end": 9622,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9600,
									"end": 9636,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9415,
									"end": 9643,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9415,
									"end": 9643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9791,
									"end": 9794,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "201"
								},
								{
									"begin": 9876,
									"end": 9878,
									"name": "PUSH",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 9871,
									"end": 9874,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 9812,
									"end": 9879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "tag",
									"source": 15,
									"value": "201"
								},
								{
									"begin": 9812,
									"end": 9879,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9805,
									"end": 9879,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9805,
									"end": 9879,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "202"
								},
								{
									"begin": 9977,
									"end": 9980,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 9888,
									"end": 9981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "tag",
									"source": 15,
									"value": "202"
								},
								{
									"begin": 9888,
									"end": 9981,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10006,
									"end": 10008,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 10001,
									"end": 10004,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9997,
									"end": 10009,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9990,
									"end": 10009,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9990,
									"end": 10009,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9649,
									"end": 10015,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9649,
									"end": 10015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10187,
									"end": 10191,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10225,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10214,
									"end": 10223,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10210,
									"end": 10228,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10202,
									"end": 10228,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10202,
									"end": 10228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10274,
									"end": 10283,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10268,
									"end": 10272,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10264,
									"end": 10284,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 10260,
									"end": 10261,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10249,
									"end": 10258,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 10245,
									"end": 10262,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10238,
									"end": 10285,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "204"
								},
								{
									"begin": 10428,
									"end": 10432,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 10302,
									"end": 10433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "tag",
									"source": 15,
									"value": "204"
								},
								{
									"begin": 10302,
									"end": 10433,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10294,
									"end": 10433,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10294,
									"end": 10433,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10021,
									"end": 10440,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10021,
									"end": 10440,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10446,
									"end": 10626,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 10446,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10494,
									"end": 10571,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10491,
									"end": 10492,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10484,
									"end": 10572,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10591,
									"end": 10595,
									"name": "PUSH",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 10588,
									"end": 10589,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 10581,
									"end": 10596,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10615,
									"end": 10619,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 10612,
									"end": 10613,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10605,
									"end": 10620,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 10632,
									"end": 10812,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 10632,
									"end": 10812,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10680,
									"end": 10757,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10677,
									"end": 10678,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10670,
									"end": 10758,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10777,
									"end": 10781,
									"name": "PUSH",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 10774,
									"end": 10775,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 10767,
									"end": 10782,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10801,
									"end": 10805,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 10798,
									"end": 10799,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10791,
									"end": 10806,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10858,
									"end": 10861,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "208"
								},
								{
									"begin": 10895,
									"end": 10896,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 10877,
									"end": 10897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "tag",
									"source": 15,
									"value": "208"
								},
								{
									"begin": 10877,
									"end": 10897,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10872,
									"end": 10897,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10872,
									"end": 10897,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "209"
								},
								{
									"begin": 10929,
									"end": 10930,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 10911,
									"end": 10931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "tag",
									"source": 15,
									"value": "209"
								},
								{
									"begin": 10911,
									"end": 10931,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10906,
									"end": 10931,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 10906,
									"end": 10931,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10954,
									"end": 10955,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10951,
									"end": 10952,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10947,
									"end": 10956,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10940,
									"end": 10956,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10940,
									"end": 10956,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10975,
									"end": 10978,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 10972,
									"end": 10973,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10969,
									"end": 10979,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "210"
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "211"
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 10982,
									"end": 11000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "tag",
									"source": 15,
									"value": "211"
								},
								{
									"begin": 10982,
									"end": 11000,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "tag",
									"source": 15,
									"value": "210"
								},
								{
									"begin": 10966,
									"end": 11002,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10818,
									"end": 11009,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10818,
									"end": 11009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "213"
								},
								{
									"begin": 11120,
									"end": 11125,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 11102,
									"end": 11126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "tag",
									"source": 15,
									"value": "213"
								},
								{
									"begin": 11102,
									"end": 11126,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11097,
									"end": 11100,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11090,
									"end": 11127,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11015,
									"end": 11133,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11015,
									"end": 11133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11288,
									"end": 11292,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11326,
									"end": 11328,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 11315,
									"end": 11324,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11311,
									"end": 11329,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11303,
									"end": 11329,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11303,
									"end": 11329,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "215"
								},
								{
									"begin": 11407,
									"end": 11408,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11396,
									"end": 11405,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11392,
									"end": 11409,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11383,
									"end": 11389,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 11339,
									"end": 11410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "tag",
									"source": 15,
									"value": "215"
								},
								{
									"begin": 11339,
									"end": 11410,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "216"
								},
								{
									"begin": 11488,
									"end": 11490,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 11477,
									"end": 11486,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11473,
									"end": 11491,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11464,
									"end": 11470,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 11420,
									"end": 11492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "tag",
									"source": 15,
									"value": "216"
								},
								{
									"begin": 11420,
									"end": 11492,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "217"
								},
								{
									"begin": 11570,
									"end": 11572,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 11559,
									"end": 11568,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11555,
									"end": 11573,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11546,
									"end": 11552,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 11502,
									"end": 11574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "tag",
									"source": 15,
									"value": "217"
								},
								{
									"begin": 11502,
									"end": 11574,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11139,
									"end": 11581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11680,
									"end": 11684,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11718,
									"end": 11720,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 11707,
									"end": 11716,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11703,
									"end": 11721,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11695,
									"end": 11721,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11695,
									"end": 11721,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "219"
								},
								{
									"begin": 11799,
									"end": 11800,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11788,
									"end": 11797,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11784,
									"end": 11801,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11775,
									"end": 11781,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 11731,
									"end": 11802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "tag",
									"source": 15,
									"value": "219"
								},
								{
									"begin": 11731,
									"end": 11802,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11587,
									"end": 11809,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11587,
									"end": 11809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 4777,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c170f3f79e9404792cff6951ad0d0bb678cf7b13539ae1f43a16b0baa21e5cc064736f6c634300081e0033",
									".code": [
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "D0516650"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "E43252D7"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "E43252D7"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "E5839836"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "EB91D37E"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "D0516650"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "DA0239A6"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "E08BA51A"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "ABA63705"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "BDD3D825"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "CB4B73AB"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "902D55A5"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "9B19251A"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "6290865D"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "6290865D"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "8AB1D681"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "54FD4D50"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "158B1A57"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "158B1A57"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "2D380242"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "12CAE7AF"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "134E18F4"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 4777,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 4214,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4214,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4214,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2237,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2237,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2776,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2776,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2776,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 3333,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3333,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3333,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 779,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 779,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 4049,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4049,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3696,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 3696,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2130,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2130,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2522,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2522,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2384,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2384,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1428,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1428,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 522,
											"end": 577,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 522,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 522,
											"end": 577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3007,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3007,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3007,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2021,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2021,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 722,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 722,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1685,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1685,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 661,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 661,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 661,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 1832,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1832,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1565,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 1565,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1288,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1288,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2618,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2618,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2618,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 4396,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4396,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4274,
											"end": 4281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4301,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4294,
											"end": 4316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4294,
											"end": 4316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2317,
											"end": 2334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2854,
											"end": 2861,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3457,
											"end": 3471,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3456,
											"end": 3471,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3448,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 3448,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3545,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3545,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 3503,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 3503,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 3593,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 3638,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 3593,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 779,
											"end": 806,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 779,
											"end": 806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3788,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3776,
											"end": 3789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3768,
											"end": 3809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3768,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3843,
											"end": 3849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3828,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 3828,
											"end": 3849,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3828,
											"end": 3849,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 3828,
											"end": 3849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3865,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3820,
											"end": 3891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3820,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3908,
											"end": 3910,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3918,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3902,
											"end": 3919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 3919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3902,
											"end": 3919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3930,
											"end": 3942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3930,
											"end": 3952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "PUSH",
											"source": 13,
											"value": "312E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2572,
											"end": 2576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2522,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2384,
											"end": 2514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 577,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 577,
											"name": "PUSH",
											"source": 13,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 522,
											"end": 577,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 522,
											"end": 577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 600,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 600,
											"end": 641,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 600,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3128,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3111,
											"end": 3129,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3110,
											"end": 3129,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3102,
											"end": 3150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3102,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3179,
											"end": 3203,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3179,
											"end": 3203,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3169,
											"end": 3175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3169,
											"end": 3203,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 3161,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3161,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 3266,
											"end": 3275,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3251,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 722,
											"end": 748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1751,
											"end": 1771,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 661,
											"end": 699,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 661,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1936,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1924,
											"end": 1936,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 561,
											"end": 577,
											"name": "PUSH",
											"source": 13,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1909,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 1909,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1629,
											"end": 1635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1640,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1629,
											"end": 1648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2731,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2706,
											"end": 2732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2706,
											"end": 2732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4503,
											"end": 4514,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4466,
											"end": 4515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4466,
											"end": 4515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4527,
											"end": 4547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "PUSH",
											"source": 13,
											"value": "3850C7BD"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 4563,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4526,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4698,
											"name": "PUSH",
											"source": 13,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4683,
											"end": 4684,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4679,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4679,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4658,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 4658,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4658,
											"end": 4699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 4658,
											"end": 4699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4699,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4658,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4744,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 4113,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 4294,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 4518,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4491,
											"end": 4523,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 4526,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4714,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4671,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4617,
											"end": 4734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4799,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4744,
											"end": 4862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4872,
											"end": 4990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5071,
											"end": 5076,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 5178,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5166,
											"end": 5201,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 5353,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6425,
											"end": 6591,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6425,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH",
											"source": 15,
											"value": "53656E6465722069732066726F7A656E00000000000000000000000000000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6542,
											"end": 6584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6425,
											"end": 6591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6425,
											"end": 6591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6739,
											"end": 6742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 6824,
											"end": 6826,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 6819,
											"end": 6822,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 6760,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 6760,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6753,
											"end": 6827,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6753,
											"end": 6827,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 6925,
											"end": 6928,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 6836,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 6836,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6945,
											"end": 6957,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6938,
											"end": 6957,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6938,
											"end": 6957,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6597,
											"end": 6963,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6597,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7135,
											"end": 7139,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7175,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7158,
											"end": 7176,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7222,
											"end": 7231,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7212,
											"end": 7232,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7193,
											"end": 7210,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7186,
											"end": 7233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 7250,
											"end": 7381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 7250,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7242,
											"end": 7381,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7242,
											"end": 7381,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6969,
											"end": 7388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6969,
											"end": 7388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7569,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 7394,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7534,
											"end": 7561,
											"name": "PUSH",
											"source": 15,
											"value": "416D6F756E74206D75737420626520616E20696E746567657200000000000000"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7518,
											"end": 7532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7511,
											"end": 7562,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7394,
											"end": 7569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7717,
											"end": 7720,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 7802,
											"end": 7804,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 7797,
											"end": 7800,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 7738,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 7738,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7731,
											"end": 7805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 7903,
											"end": 7906,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 7814,
											"end": 7907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 7814,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7927,
											"end": 7930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7923,
											"end": 7935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7916,
											"end": 7935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7941,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7575,
											"end": 7941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8153,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8140,
											"end": 8149,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8154,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8128,
											"end": 8154,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8200,
											"end": 8209,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8194,
											"end": 8198,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8186,
											"end": 8187,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8184,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8171,
											"end": 8188,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8164,
											"end": 8211,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 8228,
											"end": 8359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 8228,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8220,
											"end": 8359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8220,
											"end": 8359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7947,
											"end": 8366,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7947,
											"end": 8366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8372,
											"end": 8537,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 8372,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "PUSH",
											"source": 15,
											"value": "4E6F742077686974656C69737465640000000000000000000000000000000000"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8506,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8496,
											"end": 8510,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8489,
											"end": 8530,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8372,
											"end": 8537,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8372,
											"end": 8537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8685,
											"end": 8688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 8770,
											"end": 8772,
											"name": "PUSH",
											"source": 15,
											"value": "F"
										},
										{
											"begin": 8765,
											"end": 8768,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 8706,
											"end": 8773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 8706,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8699,
											"end": 8773,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8699,
											"end": 8773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 8871,
											"end": 8874,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 8782,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 8782,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8900,
											"end": 8902,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8895,
											"end": 8898,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8903,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8884,
											"end": 8903,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8884,
											"end": 8903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8909,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8543,
											"end": 8909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9085,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9121,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9162,
											"end": 9166,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9158,
											"end": 9178,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9143,
											"end": 9152,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9139,
											"end": 9156,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9132,
											"end": 9179,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 9196,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 9196,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9188,
											"end": 9327,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9188,
											"end": 9327,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 9334,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9340,
											"end": 9520,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 9340,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9388,
											"end": 9465,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9385,
											"end": 9386,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9466,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9485,
											"end": 9489,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9475,
											"end": 9490,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9509,
											"end": 9513,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9514,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9569,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 9585,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9580,
											"end": 9605,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9580,
											"end": 9605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 9637,
											"end": 9638,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 9619,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9614,
											"end": 9639,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9614,
											"end": 9639,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9662,
											"end": 9663,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9659,
											"end": 9660,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9655,
											"end": 9664,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9648,
											"end": 9664,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9648,
											"end": 9664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9680,
											"end": 9681,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9677,
											"end": 9687,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 9690,
											"end": 9708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 9674,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9717,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9526,
											"end": 9717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9723,
											"end": 9894,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 9723,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9863,
											"end": 9886,
											"name": "PUSH",
											"source": 15,
											"value": "546F74616C20737570706C792065786365656465640000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9860,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9847,
											"end": 9861,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9840,
											"end": 9887,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9723,
											"end": 9894,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9723,
											"end": 9894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 10063,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 10063,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10056,
											"end": 10130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10056,
											"end": 10130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10228,
											"end": 10231,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 10139,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10139,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10255,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10248,
											"end": 10260,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 10266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10438,
											"end": 10442,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10453,
											"end": 10479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10453,
											"end": 10479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10525,
											"end": 10534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10523,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10515,
											"end": 10535,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10509,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10496,
											"end": 10513,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10489,
											"end": 10536,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 10679,
											"end": 10683,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 10553,
											"end": 10684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 10553,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10545,
											"end": 10684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10272,
											"end": 10691,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10272,
											"end": 10691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10737,
											"end": 10741,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10775,
											"end": 10776,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 10757,
											"end": 10777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10752,
											"end": 10777,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10752,
											"end": 10777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 10809,
											"end": 10810,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 10791,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 10791,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10786,
											"end": 10811,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10786,
											"end": 10811,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10835,
											"end": 10836,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10828,
											"end": 10837,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10820,
											"end": 10837,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10820,
											"end": 10837,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10859,
											"end": 10860,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10853,
											"end": 10857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10850,
											"end": 10861,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 10864,
											"end": 10882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 10847,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10697,
											"end": 10891,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10697,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10897,
											"end": 11019,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 10897,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10988,
											"end": 10993,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 10970,
											"end": 10994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10970,
											"end": 10994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10963,
											"end": 10968,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10960,
											"end": 10995,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11009,
											"end": 11010,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10950,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10897,
											"end": 11019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10897,
											"end": 11019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11082,
											"end": 11087,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11119,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11107,
											"end": 11120,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11098,
											"end": 11120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11098,
											"end": 11120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 11156,
											"end": 11161,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 11129,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 11129,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11025,
											"end": 11168,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11025,
											"end": 11168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11216,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 11227,
											"end": 11258,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11227,
											"end": 11258,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11264,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11270,
											"end": 11388,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 11270,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 11357,
											"end": 11362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 11341,
											"end": 11363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 11341,
											"end": 11363,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11334,
											"end": 11339,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11331,
											"end": 11364,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11376,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11380,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 11321,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11270,
											"end": 11388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11270,
											"end": 11388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11474,
											"end": 11487,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11465,
											"end": 11487,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11465,
											"end": 11487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 11496,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 11496,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11575,
											"end": 11582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 11608,
											"end": 11613,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11593,
											"end": 11622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11539,
											"end": 11628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11634,
											"end": 11754,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 11634,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 11723,
											"end": 11728,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 11706,
											"end": 11729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 11706,
											"end": 11729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11699,
											"end": 11704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11696,
											"end": 11730,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11744,
											"end": 11745,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11734,
											"end": 11746,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 11686,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11634,
											"end": 11754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11634,
											"end": 11754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11816,
											"end": 11821,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11841,
											"end": 11854,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11832,
											"end": 11854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 11863,
											"end": 11895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 11863,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11901,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11760,
											"end": 11901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 12025,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 11907,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11994,
											"end": 11999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 11978,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11971,
											"end": 11976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11968,
											"end": 12001,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12015,
											"end": 12016,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12013,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12005,
											"end": 12017,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 11958,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 12025,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11907,
											"end": 12025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12086,
											"end": 12091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12123,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12124,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12102,
											"end": 12124,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12102,
											"end": 12124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 12158,
											"end": 12163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 12133,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 12133,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12031,
											"end": 12170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12031,
											"end": 12170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12176,
											"end": 12292,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12176,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 12261,
											"end": 12266,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 12246,
											"end": 12267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 12246,
											"end": 12267,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12239,
											"end": 12244,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12236,
											"end": 12268,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12272,
											"end": 12284,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 12226,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12176,
											"end": 12292,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12176,
											"end": 12292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12352,
											"end": 12357,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12377,
											"end": 12390,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12368,
											"end": 12390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 12423,
											"end": 12428,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12399,
											"end": 12429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 12399,
											"end": 12429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12298,
											"end": 12435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12569,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12585,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12587,
											"end": 12593,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12603,
											"end": 12609,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12655,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 12640,
											"end": 12649,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12631,
											"end": 12638,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 12627,
											"end": 12650,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12623,
											"end": 12656,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 12659,
											"end": 12738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 12659,
											"end": 12738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 12620,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12779,
											"end": 12780,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 12860,
											"end": 12867,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 12851,
											"end": 12857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12840,
											"end": 12849,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 12836,
											"end": 12858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 12804,
											"end": 12868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 12804,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12794,
											"end": 12868,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 12794,
											"end": 12868,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12750,
											"end": 12878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 12997,
											"end": 13004,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 12988,
											"end": 12994,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12977,
											"end": 12986,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 12973,
											"end": 12995,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 12943,
											"end": 13005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 12943,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12933,
											"end": 13005,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 12933,
											"end": 13005,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13015,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13054,
											"end": 13056,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 13135,
											"end": 13142,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13115,
											"end": 13124,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13111,
											"end": 13133,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 13080,
											"end": 13143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 13080,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13070,
											"end": 13143,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 13070,
											"end": 13143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13192,
											"end": 13194,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 13273,
											"end": 13280,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13264,
											"end": 13270,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13253,
											"end": 13262,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13249,
											"end": 13271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 13218,
											"end": 13281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 13218,
											"end": 13281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13208,
											"end": 13281,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13208,
											"end": 13281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13163,
											"end": 13291,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13330,
											"end": 13333,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 13412,
											"end": 13419,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13403,
											"end": 13409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13392,
											"end": 13401,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13388,
											"end": 13410,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 13357,
											"end": 13420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 13357,
											"end": 13420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13420,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13301,
											"end": 13430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13469,
											"end": 13472,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 13550,
											"end": 13557,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13541,
											"end": 13547,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13526,
											"end": 13548,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 13496,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 13496,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13486,
											"end": 13558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13440,
											"end": 13568,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 13687,
											"end": 13694,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 13678,
											"end": 13684,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13667,
											"end": 13676,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 13663,
											"end": 13685,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 13634,
											"end": 13695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 13634,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13624,
											"end": 13695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13624,
											"end": 13695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13578,
											"end": 13705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12441,
											"end": 13712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13760,
											"end": 13768,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13812,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13804,
											"end": 13805,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 13779,
											"end": 13813,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13779,
											"end": 13813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13718,
											"end": 13820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13718,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13887,
											"end": 13892,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13894,
											"end": 13898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13918,
											"end": 13924,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13909,
											"end": 13924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13909,
											"end": 13924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13942,
											"end": 13947,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13933,
											"end": 13947,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13933,
											"end": 13947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13977,
											"end": 13978,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13967,
											"end": 13975,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13964,
											"end": 13979,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14067,
											"end": 14070,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14063,
											"end": 14077,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 14057,
											"end": 14061,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14054,
											"end": 14078,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 14081,
											"end": 14099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 14051,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14121,
											"end": 14129,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14117,
											"end": 14133,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14546,
											"end": 14550,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14539,
											"end": 14544,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14551,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 14526,
											"end": 14551,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14526,
											"end": 14551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 14114,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14596,
											"end": 14600,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14586,
											"end": 14601,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 14649,
											"end": 14657,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 14626,
											"end": 14658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 14626,
											"end": 14658,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14614,
											"end": 14658,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 14614,
											"end": 14658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 13956,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13826,
											"end": 14674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14734,
											"end": 14739,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14933,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14946,
											"end": 14947,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14937,
											"end": 14947,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14937,
											"end": 14947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14948,
											"end": 14953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 14948,
											"end": 14953,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 14915,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14974,
											"end": 14978,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14991,
											"end": 14992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14982,
											"end": 14992,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14982,
											"end": 14992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14993,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 14993,
											"end": 14998,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 14964,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15060,
											"end": 15064,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15144,
											"end": 15145,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 15103,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15121,
											"end": 15122,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15112,
											"end": 15122,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15112,
											"end": 15122,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15123,
											"end": 15128,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15123,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 15123,
											"end": 15128,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 15139,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15184,
											"end": 15187,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 15174,
											"end": 15182,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15171,
											"end": 15188,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 15191,
											"end": 15209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 15168,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15248,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15237,
											"end": 15238,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 15233,
											"end": 15249,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15249,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15275,
											"end": 15278,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15268,
											"end": 15273,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15265,
											"end": 15279,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 15282,
											"end": 15300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 15262,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 15315,
											"end": 15320,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15053,
											"end": 15330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15439,
											"end": 15441,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15429,
											"end": 15437,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15426,
											"end": 15442,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 15420,
											"end": 15423,
											"name": "PUSH",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 15414,
											"end": 15418,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15411,
											"end": 15424,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 15407,
											"end": 15443,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15389,
											"end": 15391,
											"name": "PUSH",
											"source": 15,
											"value": "4E"
										},
										{
											"begin": 15379,
											"end": 15387,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15376,
											"end": 15392,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 15371,
											"end": 15373,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15362,
											"end": 15374,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 15358,
											"end": 15393,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15342,
											"end": 15453,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15495,
											"end": 15503,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15489,
											"end": 15493,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15485,
											"end": 15504,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 15476,
											"end": 15504,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15476,
											"end": 15504,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15530,
											"end": 15533,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15523,
											"end": 15528,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15520,
											"end": 15534,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 15537,
											"end": 15555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 15537,
											"end": 15555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 15517,
											"end": 15557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 15570,
											"end": 15575,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 15339,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 15648,
											"end": 15651,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15638,
											"end": 15646,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15632,
											"end": 15636,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15629,
											"end": 15630,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 15610,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 15610,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15595,
											"end": 15652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15679,
											"end": 15682,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15675,
											"end": 15689,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 15668,
											"end": 15673,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15665,
											"end": 15690,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 15693,
											"end": 15711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 15693,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 15662,
											"end": 15713,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15742,
											"end": 15746,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15735,
											"end": 15740,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15731,
											"end": 15747,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 15722,
											"end": 15747,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15722,
											"end": 15747,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14680,
											"end": 15753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15817,
											"end": 15822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 15841,
											"end": 15864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 15841,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15833,
											"end": 15864,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15833,
											"end": 15864,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 15901,
											"end": 15909,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 15885,
											"end": 15910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15873,
											"end": 15910,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15873,
											"end": 15910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 15966,
											"end": 16032,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15956,
											"end": 15964,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15950,
											"end": 15954,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 15929,
											"end": 16033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 15929,
											"end": 16033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15920,
											"end": 16033,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15920,
											"end": 16033,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 16040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 16040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16046,
											"end": 16226,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 16046,
											"end": 16226,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16094,
											"end": 16171,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16091,
											"end": 16092,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16084,
											"end": 16172,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16191,
											"end": 16195,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 16188,
											"end": 16189,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 16181,
											"end": 16196,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16215,
											"end": 16219,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 16212,
											"end": 16213,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16205,
											"end": 16220,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16272,
											"end": 16273,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 16307,
											"end": 16308,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 16289,
											"end": 16309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 16289,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16284,
											"end": 16309,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16284,
											"end": 16309,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 16341,
											"end": 16342,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 16323,
											"end": 16343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 16323,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16318,
											"end": 16343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16362,
											"end": 16363,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 16367,
											"end": 16385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 16367,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 16352,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16409,
											"end": 16410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16406,
											"end": 16407,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16402,
											"end": 16411,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 16397,
											"end": 16411,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16397,
											"end": 16411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16417,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16232,
											"end": 16417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16572,
											"end": 16576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16610,
											"end": 16612,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16599,
											"end": 16608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16587,
											"end": 16613,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16587,
											"end": 16613,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 16691,
											"end": 16692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16689,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16676,
											"end": 16693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16667,
											"end": 16673,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 16623,
											"end": 16694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 16623,
											"end": 16694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 16772,
											"end": 16774,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16770,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16748,
											"end": 16754,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 16704,
											"end": 16776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 16704,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 16854,
											"end": 16856,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16843,
											"end": 16852,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16839,
											"end": 16857,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16830,
											"end": 16836,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 16786,
											"end": 16858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 16786,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16423,
											"end": 16865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/CCK/CCKToken.sol",
								"contracts/CCK/ERC3643.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUser(address)": "12cae7af",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"freezeUser(address)": "e08ba51a",
							"frozen(address)": "d0516650",
							"getCurrentPrice()": "eb91d37e",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"mintedAmount()": "2d380242",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"remainingSupply()": "da0239a6",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unfreezeUser(address)": "cb4b73ab",
							"uniswapPool()": "bdd3d825",
							"version()": "54fd4d50",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitelist\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"freezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unfreezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CCKToken.sol\":\"CCKToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/CCK/CCKToken.sol\":{\"keccak256\":\"0x61bde69bf5c28cb3fa0671300fdbfa6c8cbb8cb08414a6c5e982ff730051f32c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba3f5f358f2d66297709afac8b92bbec01169a49a725ea79a93133052795e987\",\"dweb:/ipfs/QmUiS6NQKcR5n3nozWSybW9JaR4dXHAPf9vfhT8gsfpSYH\"]},\"contracts/CCK/ERC3643.sol\":{\"keccak256\":\"0xd208c81552c0162bc660d08f9a22876de20247e40b8a161e411e8f00df1dcd67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14523991ce6c5d1fc9a789108e878f9d74823a36700c9be83f4bdc7d35e5ea84\",\"dweb:/ipfs/QmPWt8jCPU7rafXDoL9biEvtMpm7cznbnNm6cttokSHeou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1398,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "whitelist",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1402,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "frozen",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1404,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "uniswapPool",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1406,
								"contract": "contracts/CCK/CCKToken.sol:CCKToken",
								"label": "mintedAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CCK/ERC3643.sol": {
				"IERC3643": {
					"abi": [
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for on-chain identity management and compliance.",
						"kind": "dev",
						"methods": {
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"title": "IERC3643",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compliance()": "6290865d",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"onchainID()": "aba63705",
							"paused()": "5c975abb",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for on-chain identity management and compliance.\",\"kind\":\"dev\",\"methods\":{\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"title\":\"IERC3643\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/ERC3643.sol\":\"IERC3643\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/ERC3643.sol\":{\"keccak256\":\"0xd208c81552c0162bc660d08f9a22876de20247e40b8a161e411e8f00df1dcd67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14523991ce6c5d1fc9a789108e878f9d74823a36700c9be83f4bdc7d35e5ea84\",\"dweb:/ipfs/QmPWt8jCPU7rafXDoL9biEvtMpm7cznbnNm6cttokSHeou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CCK/CCKToken.sol:84:30:\n   |\n84 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n   |                              ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2820,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2801
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:64:5:\n   |\n64 |     function version() external view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2229,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2130
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:68:5:\n   |\n68 |     function identityRegistry() external view override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2376,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2237
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:72:5:\n   |\n72 |     function compliance() external view override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2514,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2384
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:76:5:\n   |\n76 |     function paused() external view override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2610,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2522
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CCKToken.sol:84:5:\n   |\n84 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2927,
					"file": "contracts/CCK/CCKToken.sol",
					"start": 2776
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							955
						],
						"IUniswapV3PoolActions": [
							1051
						],
						"IUniswapV3PoolDerivedState": [
							1082
						],
						"IUniswapV3PoolEvents": [
							1201
						],
						"IUniswapV3PoolImmutables": [
							1241
						],
						"IUniswapV3PoolOwnerActions": [
							1267
						],
						"IUniswapV3PoolState": [
							1375
						]
					},
					"id": 956,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1242,
							"src": "71:45:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1376,
							"src": "117:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1083,
							"src": "158:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1052,
							"src": "206:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1268,
							"src": "249:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1202,
							"src": "297:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 943,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1241,
										"src": "637:24:6"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:6"
								},
								{
									"baseName": {
										"id": 945,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "667:19:6"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:6"
								},
								{
									"baseName": {
										"id": 947,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1082,
										"src": "692:26:6"
									},
									"id": 948,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:6"
								},
								{
									"baseName": {
										"id": 949,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "724:21:6"
									},
									"id": 950,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:6"
								},
								{
									"baseName": {
										"id": 951,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1267,
										"src": "751:26:6"
									},
									"id": 952,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:6"
								},
								{
									"baseName": {
										"id": 953,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1201,
										"src": "783:20:6"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:6"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 942,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:6",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 955,
							"linearizedBaseContracts": [
								955,
								1201,
								1267,
								1051,
								1082,
								1375,
								1241
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 956,
							"src": "605:203:6",
							"usedErrors": [],
							"usedEvents": [
								1092,
								1109,
								1124,
								1139,
								1156,
								1171,
								1178,
								1189,
								1200
							]
						}
					],
					"src": "45:764:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1051
						]
					},
					"id": 1052,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 957,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 958,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:7",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:7",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "442:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 960,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:7"
									},
									"scope": 1051,
									"src": "422:51:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:7",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1536:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1563:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 968,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1588:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 970,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1613:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 972,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1637:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:7"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1681:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1698:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:7"
									},
									"scope": 1051,
									"src": "1513:202:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:7",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2805:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2832:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 986,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2857:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 988,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2882:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 990,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2916:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 992,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:7"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2965:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 995,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2982:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 997,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:7"
									},
									"scope": 1051,
									"src": "2779:220:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:7",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3664:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1002,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3689:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1004,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3714:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1006,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3753:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3770:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:7"
									},
									"scope": 1051,
									"src": "3641:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:7",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4836:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4863:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4888:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4920:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1022,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4955:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:7"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4999:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1027,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5015:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:7"
									},
									"scope": 1051,
									"src": "4813:218:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:7",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5723:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5750:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5775:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5800:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:7"
									},
									"scope": 1051,
									"src": "5699:136:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:7",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6257:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1046,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:7"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:7"
									},
									"scope": 1051,
									"src": "6213:88:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1052,
							"src": "173:6130:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1082
						]
					},
					"id": 1083,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1054,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:8",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1082,
							"linearizedBaseContracts": [
								1082
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:8",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1403:29:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1056,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1057,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:8"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1481:30:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1060,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1061,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1513:51:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1063,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1064,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:8"
									},
									"scope": 1082,
									"src": "1386:180:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:8",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2383:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1069,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2400:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1071,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:8"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2477:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1074,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2517:37:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1076,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2568:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1078,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:8"
									},
									"scope": 1082,
									"src": "2348:251:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1083,
							"src": "293:2308:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1201
						]
					},
					"id": 1202,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1084,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1085,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:9",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:9",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 1092,
									"name": "Initialize",
									"nameLocation": "551:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "562:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1087,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "584:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1089,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:9"
									},
									"src": "545:51:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:9",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 1109,
									"name": "Mint",
									"nameLocation": "1164:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1178:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1202:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1233:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1098,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1266:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1100,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1299:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1102,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1323:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1348:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:9"
									},
									"src": "1158:212:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:9",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 1124,
									"name": "Collect",
									"nameLocation": "1880:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1897:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1928:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1955:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1115,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1988:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1117,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2021:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1119,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2046:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1121,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:9"
									},
									"src": "1874:194:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:9",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 1139,
									"name": "Burn",
									"nameLocation": "2608:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2622:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2653:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1128,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2686:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1130,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2719:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1132,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2743:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2768:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:9"
									},
									"src": "2602:188:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:9",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 1156,
									"name": "Swap",
									"nameLocation": "3407:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3421:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3453:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3512:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1147,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3536:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1149,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3566:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1151,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3593:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1153,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:9"
									},
									"src": "3401:209:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:9",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1171,
									"name": "Flash",
									"nameLocation": "4189:5:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4204:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4236:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4271:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4296:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4321:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4344:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:9"
									},
									"src": "4183:181:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:9",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1178,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4876:36:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1173,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4922:36:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1175,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:9"
									},
									"src": "4826:139:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:9",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1189,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5367:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5390:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1182,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5413:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1184,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5436:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:9"
									},
									"src": "5346:113:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:9",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1200,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5876:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5900:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5927:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1195,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1197,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:9"
									},
									"src": "5854:107:9"
								}
							],
							"scope": 1202,
							"src": "159:5804:9",
							"usedErrors": [],
							"usedEvents": [
								1092,
								1109,
								1124,
								1139,
								1156,
								1171,
								1178,
								1189,
								1200
							]
						}
					],
					"src": "45:5919:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1241
						]
					},
					"id": 1242,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1203,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1204,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:10",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1241,
							"linearizedBaseContracts": [
								1241
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:10",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:10"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "450:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:10"
									},
									"scope": 1241,
									"src": "408:51:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:10",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:10"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "624:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:10"
									},
									"scope": 1241,
									"src": "583:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:10",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:10"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "799:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:10"
									},
									"scope": 1241,
									"src": "758:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:10",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:10"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "941:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1225,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:10"
									},
									"scope": 1241,
									"src": "903:46:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:10",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:10"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1364:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1231,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:10"
									},
									"scope": 1241,
									"src": "1318:53:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:10",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:10"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1799:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1237,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:10"
									},
									"scope": 1241,
									"src": "1745:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1242,
							"src": "224:1586:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:10"
				},
				"id": 10
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1267
						]
					},
					"id": 1268,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1243,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1244,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:11",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1267,
							"linearizedBaseContracts": [
								1267
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:11",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "464:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "484:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1248,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:11"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:11"
									},
									"scope": 1267,
									"src": "440:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:11",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1041:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1068:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1256,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1102:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1258,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:11"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1151:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1261,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1168:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:11"
									},
									"scope": 1267,
									"src": "1007:178:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1268,
							"src": "187:1000:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:11"
				},
				"id": 11
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1375
						]
					},
					"id": 1376,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1269,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1270,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:12",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1375,
							"linearizedBaseContracts": [
								1375
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:12",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:12"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1498:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1273,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1532:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1275,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1556:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1277,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1593:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1279,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1636:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1281,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1683:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1283,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1714:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:12"
									},
									"scope": 1375,
									"src": "1421:317:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:12",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:12"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1972:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:12"
									},
									"scope": 1375,
									"src": "1917:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:12",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:12"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2215:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:12"
									},
									"scope": 1375,
									"src": "2160:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:12",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:12"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2429:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1303,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2445:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1305,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:12"
									},
									"scope": 1375,
									"src": "2382:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:12",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:12"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2666:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1311,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:12"
									},
									"scope": 1375,
									"src": "2622:53:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:12",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "3945:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1316,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:12"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4017:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1319,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4053:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1321,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4086:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4129:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4172:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1327,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4213:38:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1329,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4265:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1331,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4300:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:12"
									},
									"scope": 1375,
									"src": "3930:397:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:12",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "4457:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1338,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:12"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "4500:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:12"
									},
									"scope": 1375,
									"src": "4437:72:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:12",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5239:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:12"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5312:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5344:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5390:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5436:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1355,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5469:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1357,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:12"
									},
									"scope": 1375,
									"src": "5220:279:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:12",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6281:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:12"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6356:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1365,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6391:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1367,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6425:41:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1369,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6480:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:12"
									},
									"scope": 1375,
									"src": "6259:248:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1376,
							"src": "240:6269:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:12"
				},
				"id": 12
			},
			"contracts/CCK/CCKToken.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/CCKToken.sol",
					"exportedSymbols": {
						"CCKToken": [
							1773
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC3643": [
							1823
						],
						"IUniswapV3Pool": [
							955
						],
						"IUniswapV3PoolActions": [
							1051
						],
						"IUniswapV3PoolDerivedState": [
							1082
						],
						"IUniswapV3PoolEvents": [
							1201
						],
						"IUniswapV3PoolImmutables": [
							1241
						],
						"IUniswapV3PoolOwnerActions": [
							1267
						],
						"IUniswapV3PoolState": [
							1375
						],
						"Ownable": [
							147
						]
					},
					"id": 1774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 956,
							"src": "158:66:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 800,
							"src": "227:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 148,
							"src": "284:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/CCK/ERC3643.sol",
							"file": "contracts/CCK/ERC3643.sol",
							"id": 1381,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1774,
							"sourceUnit": 1824,
							"src": "338:35:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1382,
										"name": "ERC20",
										"nameLocations": [
											"399:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "399:5:13"
									},
									"id": 1383,
									"nodeType": "InheritanceSpecifier",
									"src": "399:5:13"
								},
								{
									"baseName": {
										"id": 1384,
										"name": "Ownable",
										"nameLocations": [
											"406:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "406:7:13"
									},
									"id": 1385,
									"nodeType": "InheritanceSpecifier",
									"src": "406:7:13"
								},
								{
									"baseName": {
										"id": 1386,
										"name": "IERC3643",
										"nameLocations": [
											"415:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1823,
										"src": "415:8:13"
									},
									"id": 1387,
									"nodeType": "InheritanceSpecifier",
									"src": "415:8:13"
								}
							],
							"canonicalName": "CCKToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1773,
							"linearizedBaseContracts": [
								1773,
								1823,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CCKToken",
							"nameLocation": "387:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1394,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "546:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1773,
									"src": "522:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 1393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530305f303030",
											"id": 1389,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "561:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1392,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1390,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "571:2:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1391,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "575:2:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "571:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "561:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 1398,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "632:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 1773,
									"src": "600:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1397,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1395,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "608:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "600:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1396,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "619:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0516650",
									"id": 1402,
									"mutability": "mutable",
									"name": "frozen",
									"nameLocation": "693:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 1773,
									"src": "661:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1401,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1399,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "669:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "661:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1400,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "680:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bdd3d825",
									"id": 1404,
									"mutability": "mutable",
									"name": "uniswapPool",
									"nameLocation": "737:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 1773,
									"src": "722:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1403,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d380242",
									"id": 1406,
									"mutability": "mutable",
									"name": "mintedAmount",
									"nameLocation": "794:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1773,
									"src": "779:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "779:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "924:326:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1421,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "943:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "954:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "943:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "963:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "943:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373207265717569726564",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "966:43:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															},
															"value": "At least one whitelisted address required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															}
														],
														"id": 1420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "935:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:75:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "935:75:13"
											},
											{
												"body": {
													"id": 1447,
													"nodeType": "Block",
													"src": "1119:58:13",
													"statements": [
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1439,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "1134:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1443,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1440,
																			"name": "_whitelist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "1144:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1442,
																		"indexExpression": {
																			"id": 1441,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "1155:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1144:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1134:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1161:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1134:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "1134:31:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1432,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "1091:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1433,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "1095:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1106:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1095:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1091:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"initializationExpression": {
													"assignments": [
														1429
													],
													"declarations": [
														{
															"constant": false,
															"id": 1429,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1084:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1448,
															"src": "1076:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1428,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1076:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1431,
													"initialValue": {
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1088:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1076:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1114:3:13",
														"subExpression": {
															"id": 1436,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "1114:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1438,
													"nodeType": "ExpressionStatement",
													"src": "1114:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1071:106:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1450,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1195:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1199:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1195:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "1207:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1449,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1189:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "1189:31:13"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43434b",
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "890:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												},
												{
													"hexValue": "43434b",
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "897:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												}
											],
											"id": 1414,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1411,
												"name": "ERC20",
												"nameLocations": [
													"884:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "884:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "884:19:13"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1416,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "912:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "916:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "912:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1418,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1415,
												"name": "Ownable",
												"nameLocations": [
													"904:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "904:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "904:19:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "872:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "855:27:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1407,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "855:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1408,
													"nodeType": "ArrayTypeName",
													"src": "855:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:29:13"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:0:13"
									},
									"scope": 1773,
									"src": "843:407:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "1347:43:13",
										"statements": [
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1463,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "1358:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1465,
														"indexExpression": {
															"id": 1464,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "1368:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1358:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1378:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1358:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "1358:24:13"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1460,
												"name": "onlyOwner",
												"nameLocations": [
													"1337:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1337:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1337:9:13"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "1297:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1320:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1312:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:16:13"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:0:13"
									},
									"scope": 1773,
									"src": "1288:102:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "1492:44:13",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "1503:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1479,
														"indexExpression": {
															"id": 1478,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "1513:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1503:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1523:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1503:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "1503:25:13"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1474,
												"name": "onlyOwner",
												"nameLocations": [
													"1482:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1482:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1482:9:13"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "1437:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1465:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1457:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:16:13"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1492:0:13"
									},
									"scope": 1773,
									"src": "1428:108:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "1618:38:13",
										"statements": [
											{
												"expression": {
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1491,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "1629:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1493,
														"indexExpression": {
															"id": 1492,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "1636:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1629:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1644:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1629:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "1629:19:13"
											}
										]
									},
									"functionSelector": "e08ba51a",
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1488,
												"name": "onlyOwner",
												"nameLocations": [
													"1608:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1608:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1608:9:13"
										}
									],
									"name": "freezeUser",
									"nameLocation": "1574:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1593:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1585:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:14:13"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:0:13"
									},
									"scope": 1773,
									"src": "1565:91:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "1740:39:13",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1505,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "1751:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1507,
														"indexExpression": {
															"id": 1506,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "1758:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1751:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1766:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1751:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "1751:20:13"
											}
										]
									},
									"functionSelector": "cb4b73ab",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1502,
												"name": "onlyOwner",
												"nameLocations": [
													"1730:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1730:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1730:9:13"
										}
									],
									"name": "unfreezeUser",
									"nameLocation": "1694:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1715:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1707:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:14:13"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:0:13"
									},
									"scope": 1773,
									"src": "1685:94:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "1891:87:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "1909:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1518,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "1924:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1909:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1520,
												"nodeType": "Return",
												"src": "1902:34:13"
											}
										]
									},
									"functionSelector": "da0239a6",
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingSupply",
									"nameLocation": "1841:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1856:2:13"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1882:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1881:9:13"
									},
									"scope": 1773,
									"src": "1832:146:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1782
									],
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "2083:39:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2109:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CCKToken_$1773",
																"typeString": "contract CCKToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_CCKToken_$1773",
																"typeString": "contract CCKToken"
															}
														],
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2101:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1528,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2101:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1532,
												"nodeType": "Return",
												"src": "2094:20:13"
											}
										]
									},
									"functionSelector": "aba63705",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "2030:9:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2056:8:13"
									},
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2039:2:13"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2074:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:9:13"
									},
									"scope": 1773,
									"src": "2021:101:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1788
									],
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "2196:33:13",
										"statements": [
											{
												"expression": {
													"hexValue": "312e302e30",
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2214:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
														"typeString": "literal_string \"1.0.0\""
													},
													"value": "1.0.0"
												},
												"functionReturnParameters": 1539,
												"id": 1541,
												"nodeType": "Return",
												"src": "2207:14:13"
											}
										]
									},
									"functionSelector": "54fd4d50",
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "2139:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1536,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2163:8:13"
									},
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:2:13"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "2181:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1537,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2181:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:15:13"
									},
									"scope": 1773,
									"src": "2130:99:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1794
									],
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2306:70:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2332:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2324:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1549,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2324:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1548,
												"id": 1553,
												"nodeType": "Return",
												"src": "2317:17:13"
											}
										]
									},
									"functionSelector": "134e18f4",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "2246:16:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1545,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2279:8:13"
									},
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:2:13"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2297:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:9:13"
									},
									"scope": 1773,
									"src": "2237:139:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "2447:67:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2473:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2465:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1561,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2465:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1565,
												"nodeType": "Return",
												"src": "2458:17:13"
											}
										]
									},
									"functionSelector": "6290865d",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "2393:10:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1557,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2420:8:13"
									},
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:13"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "2438:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:9:13"
									},
									"scope": 1773,
									"src": "2384:130:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1806
									],
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "2578:32:13",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2596:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1572,
												"id": 1574,
												"nodeType": "Return",
												"src": "2589:12:13"
											}
										]
									},
									"functionSelector": "5c975abb",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2531:6:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1569,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2554:8:13"
									},
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:2:13"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2572:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2572:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:6:13"
									},
									"scope": 1773,
									"src": "2522:88:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1814
									],
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "2695:73:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1584,
														"name": "frozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "2713:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1586,
													"indexExpression": {
														"id": 1585,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "2720:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2713:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1583,
												"id": 1587,
												"nodeType": "Return",
												"src": "2706:26:13"
											}
										]
									},
									"functionSelector": "e5839836",
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "2627:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:13"
									},
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2644:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2636:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2635:21:13"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "2689:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2689:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:6:13"
									},
									"scope": 1773,
									"src": "2618:150:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1822
									],
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "2863:64:13",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2881:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1596,
												"id": 1598,
												"nodeType": "Return",
												"src": "2874:8:13"
											}
										]
									},
									"functionSelector": "158b1a57",
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "2785:15:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1593,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2836:8:13"
									},
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2809:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "2801:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2800:21:13"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "2854:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:9:13"
									},
									"scope": 1773,
									"src": "2776:151:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "3091:201:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3110:19:13",
															"subExpression": {
																"baseExpression": {
																	"id": 1611,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "3111:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1614,
																"indexExpression": {
																	"expression": {
																		"id": 1612,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3118:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3122:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3118:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3111:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3131:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3102:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3102:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "3102:48:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "3169:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1625,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "3195:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3187:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1623,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "3187:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3187:15:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3179:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3179:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3179:24:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3169:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3205:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3161:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3161:72:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "3161:72:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1634,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "3266:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3277:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1632,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3251:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1773_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3257:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3251:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1637,
												"nodeType": "Return",
												"src": "3244:40:13"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3016:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1606,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3067:8:13"
									},
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3033:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "3025:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3052:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "3044:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3024:35:13"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "3085:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3085:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3084:6:13"
									},
									"scope": 1773,
									"src": "3007:285:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "3437:209:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3456:15:13",
															"subExpression": {
																"baseExpression": {
																	"id": 1652,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "3457:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1654,
																"indexExpression": {
																	"id": 1653,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "3464:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3457:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3473:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3448:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3448:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "3448:44:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "3511:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1665,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1645,
																				"src": "3537:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3529:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1663,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "3529:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3529:15:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3521:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1661,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3521:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3521:24:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3511:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3547:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3503:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:72:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "3503:72:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1674,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "3612:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3620:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "3631:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1672,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3593:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1773_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3599:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "3593:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1678,
												"nodeType": "Return",
												"src": "3586:52:13"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3342:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1647,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3413:8:13"
									},
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3363:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "3355:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3355:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3379:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "3371:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3398:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "3390:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:51:13"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "3431:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3431:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:6:13"
									},
									"scope": 1773,
									"src": "3333:313:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "3757:203:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1690,
																"name": "whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "3776:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1692,
															"indexExpression": {
																"id": 1691,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "3786:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3776:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077686974656c6973746564",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3791:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															},
															"value": "Not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															}
														],
														"id": 1689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3768:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3768:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "3768:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1697,
																	"name": "mintedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "3828:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1698,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "3843:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3828:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1700,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "3853:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3828:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20737570706c79206578636565646564",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3867:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															},
															"value": "Total supply exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															}
														],
														"id": 1696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3820:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3820:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "3820:71:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "3908:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "3912:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1705,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3902:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3902:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "3902:17:13"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1710,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "3930:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1711,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "3946:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3930:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "3930:22:13"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1686,
												"name": "onlyOwner",
												"nameLocations": [
													"3747:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3747:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3747:9:13"
										}
									],
									"name": "mint",
									"nameLocation": "3705:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "3710:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3730:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "3722:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:28:13"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3757:0:13"
									},
									"scope": 1773,
									"src": "3696:264:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "4114:46:13",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4132:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1720,
												"id": 1722,
												"nodeType": "Return",
												"src": "4125:8:13"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4058:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4089:8:13"
									},
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:2:13"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "4107:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1718,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4107:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4106:7:13"
									},
									"scope": 1773,
									"src": "4049:111:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "4283:74:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1732,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "4311:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1731,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "4301:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4301:15:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1734,
												"nodeType": "Return",
												"src": "4294:22:13"
											}
										]
									},
									"functionSelector": "12cae7af",
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUser",
									"nameLocation": "4223:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4245:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4237:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4237:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4236:14:13"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "4274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4273:9:13"
									},
									"scope": 1773,
									"src": "4214:143:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "4455:319:13",
										"statements": [
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4481:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "4466:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1742,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1741,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"4466:14:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 955,
																"src": "4466:14:13"
															},
															"referencedDeclaration": 955,
															"src": "4466:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1747,
												"initialValue": {
													"arguments": [
														{
															"id": 1745,
															"name": "uniswapPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "4503:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1744,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4488:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$955_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4488:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4466:49:13"
											},
											{
												"assignments": [
													1749,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "4535:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "4527:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1748,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4527:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 1753,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1750,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "4563:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4568:5:13",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "4563:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4563:12:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4526:49:13"
											},
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4650:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1771,
														"src": "4642:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1758,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "4666:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4658:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1756,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4658:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4658:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4683:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4658:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4688:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "313932",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4694:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_192_by_1",
																				"typeString": "int_const 192"
																			},
																			"value": "192"
																		}
																	],
																	"id": 1764,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4693:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_192_by_1",
																		"typeString": "int_const 192"
																	}
																},
																"src": "4688:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																}
															}
														],
														"id": 1766,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4687:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
															"typeString": "int_const 6277...(50 digits omitted)...2896"
														}
													},
													"src": "4658:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:57:13"
											},
											{
												"expression": {
													"id": 1769,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1755,
													"src": "4739:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1770,
												"nodeType": "Return",
												"src": "4732:12:13"
											}
										]
									},
									"functionSelector": "eb91d37e",
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "4405:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4420:2:13"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "4446:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4445:9:13"
									},
									"scope": 1773,
									"src": "4396:378:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1774,
							"src": "378:4399:13",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:4744:13"
				},
				"id": 13
			},
			"contracts/CCK/ERC3643.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/ERC3643.sol",
					"exportedSymbols": {
						"IERC3643": [
							1823
						]
					},
					"id": 1824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3643",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1776,
								"nodeType": "StructuredDocumentation",
								"src": "60:96:14",
								"text": " @title IERC3643\n @dev Interface for on-chain identity management and compliance."
							},
							"fullyImplemented": false,
							"id": 1823,
							"linearizedBaseContracts": [
								1823
							],
							"name": "IERC3643",
							"nameLocation": "168:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "184:119:14",
										"text": " @dev Returns the on-chain ID of the contract.\n @return address The address of the contract."
									},
									"functionSelector": "aba63705",
									"id": 1782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "318:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:14"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "353:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:9:14"
									},
									"scope": 1823,
									"src": "309:53:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "374:105:14",
										"text": " @dev Returns the version of the contract.\n @return string The version string."
									},
									"functionSelector": "54fd4d50",
									"id": 1788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "494:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:14"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "527:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "527:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:15:14"
									},
									"scope": 1823,
									"src": "485:57:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "554:119:14",
										"text": " @dev Returns the identity registry address.\n @return address The identity registry address."
									},
									"functionSelector": "134e18f4",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "688:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:2:14"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "730:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:9:14"
									},
									"scope": 1823,
									"src": "679:60:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "751:105:14",
										"text": " @dev Returns the compliance address.\n @return address The compliance address."
									},
									"functionSelector": "6290865d",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "871:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:14"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "907:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:9:14"
									},
									"scope": 1823,
									"src": "862:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "928:117:14",
										"text": " @dev Checks if the contract is paused.\n @return bool Indicates if the contract is paused."
									},
									"functionSelector": "5c975abb",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:2:14"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "1092:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:6:14"
									},
									"scope": 1823,
									"src": "1051:47:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "1110:164:14",
										"text": " @dev Checks if a user is frozen.\n @param userAddress Address of the user to check.\n @return bool Indicates if the user is frozen."
									},
									"functionSelector": "e5839836",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "1289:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1306:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1298:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:21:14"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1342:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1342:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:6:14"
									},
									"scope": 1823,
									"src": "1280:68:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "1360:179:14",
										"text": " @dev Returns the number of frozen tokens for a user.\n @param userAddress Address of the user to check.\n @return uint256 Amount of frozen tokens."
									},
									"functionSelector": "158b1a57",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "1554:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1578:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1570:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:21:14"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "1614:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:9:14"
									},
									"scope": 1823,
									"src": "1545:78:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1824,
							"src": "158:1468:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1593:14"
				},
				"id": 14
			}
		}
	}
}